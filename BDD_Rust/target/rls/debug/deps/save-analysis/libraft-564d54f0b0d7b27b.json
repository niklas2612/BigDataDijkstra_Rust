{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0","program":"C:\\Users\\nikla_y88vj7d\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","raft","C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=564d54f0b0d7b27b","-C","extra-filename=-564d54f0b0d7b27b","--out-dir","c:\\Users\\nikla_y88vj7d\\OneDrive\\Desktop\\BigDataDijkstra_Rust\\BDD_Rust\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\nikla_y88vj7d\\OneDrive\\Desktop\\BigDataDijkstra_Rust\\BDD_Rust\\target\\rls\\debug\\deps","--extern","getset=c:\\Users\\nikla_y88vj7d\\OneDrive\\Desktop\\BigDataDijkstra_Rust\\BDD_Rust\\target\\rls\\debug\\deps\\getset-3da533e14a9fbcad.dll","--extern","hashbrown=c:\\Users\\nikla_y88vj7d\\OneDrive\\Desktop\\BigDataDijkstra_Rust\\BDD_Rust\\target\\rls\\debug\\deps\\libhashbrown-af0e65408358302d.rmeta","--extern","log=c:\\Users\\nikla_y88vj7d\\OneDrive\\Desktop\\BigDataDijkstra_Rust\\BDD_Rust\\target\\rls\\debug\\deps\\liblog-402b47f41c7352fe.rmeta","--extern","protobuf=c:\\Users\\nikla_y88vj7d\\OneDrive\\Desktop\\BigDataDijkstra_Rust\\BDD_Rust\\target\\rls\\debug\\deps\\libprotobuf-522938fc23ca86ce.rmeta","--extern","quick_error=c:\\Users\\nikla_y88vj7d\\OneDrive\\Desktop\\BigDataDijkstra_Rust\\BDD_Rust\\target\\rls\\debug\\deps\\libquick_error-94dcc035b4542eb1.rmeta","--extern","rand=c:\\Users\\nikla_y88vj7d\\OneDrive\\Desktop\\BigDataDijkstra_Rust\\BDD_Rust\\target\\rls\\debug\\deps\\librand-29605d7f666367a0.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\nikla_y88vj7d\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\nikla_y88vj7d\\OneDrive\\Desktop\\BigDataDijkstra_Rust\\BDD_Rust\\target\\rls\\debug\\deps\\libraft-564d54f0b0d7b27b.rmeta"},"prelude":{"crate_id":{"name":"raft","disambiguator":[2407963803173634768,8866611422687258956]},"crate_root":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src","external_crates":[{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[14664243863007151186,13029296787848565560]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[10973483057139175867,4092977820595504105]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5344968526663694908,5854973613798060781]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14551701718388451589,8584422242678588409]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6143882857039415599,5494129795406748407]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[9037026435662606504,10577775618308791929]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15244332605556921560,15997253764330093455]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[496393125628069379,10121348063997143337]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14891368759234060001,17337422003014977783]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9539026828135594574,18385042694178804316]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[5817650502020334249,13012108553651615857]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12364111099303107650,4225371417860886929]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[1593379990131481620,6691744023912804689]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":14,"id":{"name":"hashbrown","disambiguator":[6831284418824999517,9187557100227493932]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":15,"id":{"name":"byteorder","disambiguator":[4774801759518926921,18058406124570237986]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":16,"id":{"name":"scopeguard","disambiguator":[17635452243431005141,11083245694762121919]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":17,"id":{"name":"log","disambiguator":[2557543748310035003,1609433078224222038]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":18,"id":{"name":"cfg_if","disambiguator":[5650227380082264900,4212011939584782754]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":19,"id":{"name":"protobuf","disambiguator":[14435386195639346581,16626324184963909016]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":20,"id":{"name":"quick_error","disambiguator":[1792497936288877904,1635981508594942672]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":21,"id":{"name":"rand","disambiguator":[9800108272364643929,7561736932950649958]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":22,"id":{"name":"rand_core","disambiguator":[9800237337988832967,9981775930186498733]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":23,"id":{"name":"rand_core","disambiguator":[8070181030539080449,9931179894115693001]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":24,"id":{"name":"winapi","disambiguator":[17756005121930638655,11502995446724028721]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","num":25,"id":{"name":"getset","disambiguator":[14265195800555029239,5364604973086797370]}}],"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":1109,"byte_end":15262,"line_start":28,"line_end":449,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13684,"byte_end":13690,"line_start":402,"line_end":402,"column_start":23,"column_end":29},"alias_span":null,"name":"Config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13715,"byte_end":13720,"line_start":403,"line_end":403,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13722,"byte_end":13728,"line_start":403,"line_end":403,"column_start":31,"column_end":37},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1347},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13730,"byte_end":13742,"line_start":403,"line_end":403,"column_start":39,"column_end":51},"alias_span":null,"name":"StorageError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1372},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13773,"byte_end":13781,"line_start":404,"line_end":404,"column_start":29,"column_end":37},"alias_span":null,"name":"Unstable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13808,"byte_end":13821,"line_start":405,"line_end":405,"column_start":26,"column_end":39},"alias_span":null,"name":"Configuration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1461},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13823,"byte_end":13832,"line_start":405,"line_end":405,"column_start":41,"column_end":50},"alias_span":null,"name":"Inflights","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1445},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13834,"byte_end":13842,"line_start":405,"line_end":405,"column_start":52,"column_end":60},"alias_span":null,"name":"Progress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1428},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13844,"byte_end":13855,"line_start":405,"line_end":405,"column_start":62,"column_end":73},"alias_span":null,"name":"ProgressSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13857,"byte_end":13870,"line_start":405,"line_end":405,"column_start":75,"column_end":88},"alias_span":null,"name":"ProgressState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13894,"byte_end":13912,"line_start":406,"line_end":406,"column_start":22,"column_end":40},"alias_span":null,"name":"vote_resp_msg_type","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1499},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13914,"byte_end":13918,"line_start":406,"line_end":406,"column_start":42,"column_end":46},"alias_span":null,"name":"Raft","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1488},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13920,"byte_end":13929,"line_start":406,"line_end":406,"column_start":48,"column_end":57},"alias_span":null,"name":"SoftState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1471},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13931,"byte_end":13940,"line_start":406,"line_end":406,"column_start":59,"column_end":68},"alias_span":null,"name":"StateRole","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13942,"byte_end":13952,"line_start":406,"line_end":406,"column_start":70,"column_end":80},"alias_span":null,"name":"INVALID_ID","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13954,"byte_end":13967,"line_start":406,"line_end":406,"column_start":82,"column_end":95},"alias_span":null,"name":"INVALID_INDEX","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1535},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13995,"byte_end":14002,"line_start":407,"line_end":407,"column_start":26,"column_end":33},"alias_span":null,"name":"RaftLog","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":985},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14004,"byte_end":14012,"line_start":407,"line_end":407,"column_start":35,"column_end":43},"alias_span":null,"name":"NO_LIMIT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14040,"byte_end":14053,"line_start":408,"line_end":408,"column_start":26,"column_end":39},"alias_span":null,"name":"is_empty_snap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1545},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14055,"byte_end":14059,"line_start":408,"line_end":408,"column_start":41,"column_end":45},"alias_span":null,"name":"Peer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":866},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14061,"byte_end":14068,"line_start":408,"line_end":408,"column_start":47,"column_end":54},"alias_span":null,"name":"RawNode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1565},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14070,"byte_end":14075,"line_start":408,"line_end":408,"column_start":56,"column_end":61},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1552},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14077,"byte_end":14091,"line_start":408,"line_end":408,"column_start":63,"column_end":77},"alias_span":null,"name":"SnapshotStatus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1582},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14120,"byte_end":14134,"line_start":409,"line_end":409,"column_start":27,"column_end":41},"alias_span":null,"name":"ReadOnlyOption","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1595},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14136,"byte_end":14145,"line_start":409,"line_end":409,"column_start":43,"column_end":52},"alias_span":null,"name":"ReadState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1628},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14170,"byte_end":14176,"line_start":410,"line_end":410,"column_start":23,"column_end":29},"alias_span":null,"name":"Status","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1637},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14202,"byte_end":14211,"line_start":411,"line_end":411,"column_start":25,"column_end":34},"alias_span":null,"name":"RaftState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":946},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14213,"byte_end":14220,"line_start":411,"line_end":411,"column_start":36,"column_end":43},"alias_span":null,"name":"Storage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14706,"byte_end":14716,"line_start":427,"line_end":427,"column_start":9,"column_end":19},"alias_span":null,"name":"ConfChange","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1259},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14718,"byte_end":14732,"line_start":427,"line_end":427,"column_start":21,"column_end":35},"alias_span":null,"name":"ConfChangeType","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1138},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14734,"byte_end":14743,"line_start":427,"line_end":427,"column_start":37,"column_end":46},"alias_span":null,"name":"ConfState","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1055},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14745,"byte_end":14750,"line_start":427,"line_end":427,"column_start":48,"column_end":53},"alias_span":null,"name":"Entry","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1168},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14752,"byte_end":14761,"line_start":427,"line_end":427,"column_start":55,"column_end":64},"alias_span":null,"name":"EntryType","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1124},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14763,"byte_end":14772,"line_start":427,"line_end":427,"column_start":66,"column_end":75},"alias_span":null,"name":"HardState","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1101},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14774,"byte_end":14781,"line_start":427,"line_end":427,"column_start":77,"column_end":84},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1188},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14783,"byte_end":14794,"line_start":427,"line_end":427,"column_start":86,"column_end":97},"alias_span":null,"name":"MessageType","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1088},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14804,"byte_end":14812,"line_start":428,"line_end":428,"column_start":9,"column_end":17},"alias_span":null,"name":"Snapshot","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1072},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14814,"byte_end":14830,"line_start":428,"line_end":428,"column_start":19,"column_end":35},"alias_span":null,"name":"SnapshotMetadata","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14860,"byte_end":14866,"line_start":431,"line_end":431,"column_start":21,"column_end":27},"alias_span":null,"name":"Config","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1499},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14886,"byte_end":14890,"line_start":432,"line_end":432,"column_start":19,"column_end":23},"alias_span":null,"name":"Raft","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1637},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14915,"byte_end":14924,"line_start":434,"line_end":434,"column_start":23,"column_end":32},"alias_span":null,"name":"RaftState","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":946},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14926,"byte_end":14933,"line_start":434,"line_end":434,"column_start":34,"column_end":41},"alias_span":null,"name":"Storage","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1545},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14960,"byte_end":14964,"line_start":436,"line_end":436,"column_start":24,"column_end":28},"alias_span":null,"name":"Peer","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":866},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14966,"byte_end":14973,"line_start":436,"line_end":436,"column_start":30,"column_end":37},"alias_span":null,"name":"RawNode","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1565},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14975,"byte_end":14980,"line_start":436,"line_end":436,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1552},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14982,"byte_end":14996,"line_start":436,"line_end":436,"column_start":46,"column_end":60},"alias_span":null,"name":"SnapshotStatus","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1445},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":15022,"byte_end":15030,"line_start":438,"line_end":438,"column_start":23,"column_end":31},"alias_span":null,"name":"Progress","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1628},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":15053,"byte_end":15059,"line_start":440,"line_end":440,"column_start":21,"column_end":27},"alias_span":null,"name":"Status","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1582},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":15086,"byte_end":15100,"line_start":442,"line_end":442,"column_start":25,"column_end":39},"alias_span":null,"name":"ReadOnlyOption","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1595},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":15102,"byte_end":15111,"line_start":442,"line_end":442,"column_start":41,"column_end":50},"alias_span":null,"name":"ReadState","value":"","parent":{"krate":0,"index":1028}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":1109,"byte_end":15262,"line_start":28,"line_end":449,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":42},{"krate":0,"index":492},{"krate":0,"index":506},{"krate":0,"index":524},{"krate":0,"index":633},{"krate":0,"index":777},{"krate":0,"index":828},{"krate":0,"index":899},{"krate":0,"index":915},{"krate":0,"index":929},{"krate":0,"index":978},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1005},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1028}],"decl_id":null,"docs":"## Creating a Raft node","sig":null,"attributes":[{"value":"deny(clippy :: all)","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13002,"byte_end":13023,"line_start":366,"line_end":366,"column_start":1,"column_end":22}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13024,"byte_end":13046,"line_start":367,"line_end":367,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":16553,"byte_end":16559,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"name":"Config","qualname":"::config::Config","value":"Config { id, peers, learners, election_tick, heartbeat_tick, applied, max_size_per_msg, max_inflight_msgs, check_quorum, pre_vote, min_election_tick, max_election_tick, read_only_option, skip_bcast_commit, tag }","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"decl_id":null,"docs":" Config contains the parameters to start a raft.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":16659,"byte_end":16661,"line_start":37,"line_end":37,"column_start":9,"column_end":11},"name":"id","qualname":"::config::Config::id","value":"u64","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" The identity of the local raft. It cannot be 0, and must be unique in the group.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":16965,"byte_end":16970,"line_start":45,"line_end":45,"column_start":9,"column_end":14},"name":"peers","qualname":"::config::Config::peers","value":"std::vec::Vec<u64>","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" The IDs of all nodes (including self) in\n the raft cluster. It should only be set when starting a new\n raft cluster.\n Restarting raft from previous configuration will panic if\n peers is set.\n peer is private and only used for testing right now.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":17214,"byte_end":17222,"line_start":51,"line_end":51,"column_start":9,"column_end":17},"name":"learners","qualname":"::config::Config::learners","value":"std::vec::Vec<u64>","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" The IDs of all learner nodes (maybe include self if\n the local node is a learner) in the raft cluster.\n learners only receives entries from the leader node. It does not vote\n or promote itself.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":17660,"byte_end":17673,"line_start":59,"line_end":59,"column_start":9,"column_end":22},"name":"election_tick","qualname":"::config::Config::election_tick","value":"usize","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" The number of node.tick invocations that must pass between\n elections. That is, if a follower does not receive any message from the\n leader of current term before ElectionTick has elapsed, it will become\n candidate and start an election. election_tick must be greater than\n HeartbeatTick. We suggest election_tick = 10 * HeartbeatTick to avoid\n unnecessary leader switching\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":17896,"byte_end":17910,"line_start":64,"line_end":64,"column_start":9,"column_end":23},"name":"heartbeat_tick","qualname":"::config::Config::heartbeat_tick","value":"usize","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" HeartbeatTick is the number of node.tick invocations that must pass between\n heartbeats. That is, a leader sends heartbeat messages to maintain its\n leadership every heartbeat ticks.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":18249,"byte_end":18256,"line_start":70,"line_end":70,"column_start":9,"column_end":16},"name":"applied","qualname":"::config::Config::applied","value":"u64","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Applied is the last applied index. It should only be set when restarting\n raft. raft will not return entries to the application smaller or equal to Applied.\n If Applied is unset when restarting, raft might return previous applied entries.\n This is a very application dependent configuration.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":18602,"byte_end":18618,"line_start":76,"line_end":76,"column_start":9,"column_end":25},"name":"max_size_per_msg","qualname":"::config::Config::max_size_per_msg","value":"u64","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Limit the max size of each append message. Smaller value lowers\n the raft recovery cost(initial probing and message lost during normal operation).\n On the other side, it might affect the throughput during normal replication.\n Note: math.MaxUusize64 for unlimited, 0 for at most one entry per message.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":18943,"byte_end":18960,"line_start":82,"line_end":82,"column_start":9,"column_end":26},"name":"max_inflight_msgs","qualname":"::config::Config::max_inflight_msgs","value":"usize","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Limit the max number of in-flight append messages during optimistic\n replication phase. The application transportation layer usually has its own sending\n buffer over TCP/UDP. Set to avoid overflowing that sending buffer.\n TODO: feedback to application to limit the proposal rate?\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":19114,"byte_end":19126,"line_start":86,"line_end":86,"column_start":9,"column_end":21},"name":"check_quorum","qualname":"::config::Config::check_quorum","value":"bool","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Specify if the leader should check quorum activity. Leader steps down when\n quorum is not active for an electionTimeout.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":19325,"byte_end":19333,"line_start":91,"line_end":91,"column_start":9,"column_end":17},"name":"pre_vote","qualname":"::config::Config::pre_vote","value":"bool","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Enables the Pre-Vote algorithm described in raft thesis section\n 9.6. This prevents disruption when a node that has been partitioned away\n rejoins the cluster.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":19660,"byte_end":19677,"line_start":97,"line_end":97,"column_start":9,"column_end":26},"name":"min_election_tick","qualname":"::config::Config::min_election_tick","value":"usize","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" The range of election timeout. In some cases, we hope some nodes has less possibility\n to become leader. This configuration ensures that the randomized election_timeout\n will always be suit in [min_election_tick, max_election_tick).\n If it is 0, then election_tick will be chosen.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":19754,"byte_end":19771,"line_start":100,"line_end":100,"column_start":9,"column_end":26},"name":"max_election_tick","qualname":"::config::Config::max_election_tick","value":"usize","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" If it is 0, then 2 * election_tick will be chosen.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":20049,"byte_end":20065,"line_start":105,"line_end":105,"column_start":9,"column_end":25},"name":"read_only_option","qualname":"::config::Config::read_only_option","value":"read_only::ReadOnlyOption","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Choose the linearizability mode or the lease mode to read data. If you don’t care about the read consistency and want a higher read performance, you can use the lease mode.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":20321,"byte_end":20338,"line_start":110,"line_end":110,"column_start":9,"column_end":26},"name":"skip_bcast_commit","qualname":"::config::Config::skip_bcast_commit","value":"bool","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Don't broadcast an empty raft entry to notify follower to commit an entry.\n This may make follower wait a longer time to apply an entry. This configuration\n May affect proposal forwarding and follower read.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":20402,"byte_end":20405,"line_start":113,"line_end":113,"column_start":9,"column_end":12},"name":"tag","qualname":"::config::Config::tag","value":"std::string::String","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" A human-friendly tag used for logging.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":21110,"byte_end":21113,"line_start":141,"line_end":141,"column_start":12,"column_end":15},"name":"new","qualname":"<Config>::new","value":"fn (id: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new config.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":21328,"byte_end":21345,"line_start":151,"line_end":151,"column_start":12,"column_end":29},"name":"min_election_tick","qualname":"<Config>::min_election_tick","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The minimum number of ticks before an election.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":21307,"byte_end":21316,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":21586,"byte_end":21603,"line_start":161,"line_end":161,"column_start":12,"column_end":29},"name":"max_election_tick","qualname":"<Config>::max_election_tick","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum number of ticks before an election.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":21565,"byte_end":21574,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":21823,"byte_end":21831,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"validate","qualname":"<Config>::validate","value":"fn (&self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Runs validations against the config.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"eraftpb","qualname":"::eraftpb","value":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":1055},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1066},{"krate":0,"index":1064},{"krate":0,"index":45},{"krate":0,"index":69},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":1072},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1082},{"krate":0,"index":1080},{"krate":0,"index":105},{"krate":0,"index":132},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":1088},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1095},{"krate":0,"index":1093},{"krate":0,"index":166},{"krate":0,"index":181},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":207},{"krate":0,"index":1101},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1118},{"krate":0,"index":1116},{"krate":0,"index":209},{"krate":0,"index":256},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":1124},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1132},{"krate":0,"index":1130},{"krate":0,"index":304},{"krate":0,"index":315},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":1138},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1145},{"krate":0,"index":1143},{"krate":0,"index":345},{"krate":0,"index":357},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":1151},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1162},{"krate":0,"index":1160},{"krate":0,"index":385},{"krate":0,"index":412},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":1168},{"krate":0,"index":1186},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1178},{"krate":0,"index":1175},{"krate":0,"index":448},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":1188},{"krate":0,"index":1257},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1249},{"krate":0,"index":1246},{"krate":0,"index":461},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":1259},{"krate":0,"index":1286},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1278},{"krate":0,"index":1275},{"krate":0,"index":474},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490}],"decl_id":null,"docs":" This module supplies the needed message types. However, it is autogenerated and thus cannot be\n documented by field.\n","sig":null,"attributes":[{"value":"allow(unknown_lints)","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":23552,"byte_end":23576,"line_start":5,"line_end":5,"column_start":1,"column_end":25}},{"value":"allow(clippy :: all)","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":23577,"byte_end":23599,"line_start":6,"line_end":6,"column_start":1,"column_end":23}},{"value":"allow(box_pointers)","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":23638,"byte_end":23661,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":23662,"byte_end":23682,"line_start":11,"line_end":11,"column_start":1,"column_end":21}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":23683,"byte_end":23706,"line_start":12,"line_end":12,"column_start":1,"column_end":24}},{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":23707,"byte_end":23738,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":23739,"byte_end":23764,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":23765,"byte_end":23798,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"allow(trivial_casts)","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":23799,"byte_end":23823,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"allow(unsafe_code)","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":23824,"byte_end":23846,"line_start":17,"line_end":17,"column_start":1,"column_end":23}},{"value":"allow(unused_imports)","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":23847,"byte_end":23872,"line_start":18,"line_end":18,"column_start":1,"column_end":26}},{"value":"allow(unused_results)","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":23873,"byte_end":23898,"line_start":19,"line_end":19,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1055},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":24071,"byte_end":24076,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Entry","qualname":"::eraftpb::Entry","value":"Entry { entry_type, term, index, data, context, sync_log, unknown_fields, cached_size }","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":24109,"byte_end":24119,"line_start":27,"line_end":27,"column_start":9,"column_end":19},"name":"entry_type","qualname":"::eraftpb::Entry::entry_type","value":"eraftpb::EntryType","parent":{"krate":0,"index":1055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1057},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":24140,"byte_end":24144,"line_start":28,"line_end":28,"column_start":9,"column_end":13},"name":"term","qualname":"::eraftpb::Entry::term","value":"u64","parent":{"krate":0,"index":1055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1058},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":24159,"byte_end":24164,"line_start":29,"line_end":29,"column_start":9,"column_end":14},"name":"index","qualname":"::eraftpb::Entry::index","value":"u64","parent":{"krate":0,"index":1055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1059},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":24179,"byte_end":24183,"line_start":30,"line_end":30,"column_start":9,"column_end":13},"name":"data","qualname":"::eraftpb::Entry::data","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1060},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":24214,"byte_end":24221,"line_start":31,"line_end":31,"column_start":9,"column_end":16},"name":"context","qualname":"::eraftpb::Entry::context","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1061},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":24252,"byte_end":24260,"line_start":32,"line_end":32,"column_start":9,"column_end":17},"name":"sync_log","qualname":"::eraftpb::Entry::sync_log","value":"bool","parent":{"krate":0,"index":1055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1062},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":24298,"byte_end":24312,"line_start":34,"line_end":34,"column_start":9,"column_end":23},"name":"unknown_fields","qualname":"::eraftpb::Entry::unknown_fields","value":"protobuf::UnknownFields","parent":{"krate":0,"index":1055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1063},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":24349,"byte_end":24360,"line_start":35,"line_end":35,"column_start":9,"column_end":20},"name":"cached_size","qualname":"::eraftpb::Entry::cached_size","value":"protobuf::CachedSize","parent":{"krate":0,"index":1055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":24413,"byte_end":24416,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Entry>::new","value":"fn () -> Entry","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":24534,"byte_end":24550,"line_start":45,"line_end":45,"column_start":12,"column_end":28},"name":"clear_entry_type","qualname":"<Entry>::clear_entry_type","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":24671,"byte_end":24685,"line_start":50,"line_end":50,"column_start":12,"column_end":26},"name":"set_entry_type","qualname":"<Entry>::set_entry_type","value":"fn (&mut self, v: EntryType) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":24760,"byte_end":24774,"line_start":54,"line_end":54,"column_start":12,"column_end":26},"name":"get_entry_type","qualname":"<Entry>::get_entry_type","value":"fn (&self) -> EntryType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":24864,"byte_end":24874,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"clear_term","qualname":"<Entry>::clear_term","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":24968,"byte_end":24976,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"set_term","qualname":"<Entry>::set_term","value":"fn (&mut self, v: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":25039,"byte_end":25047,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"get_term","qualname":"<Entry>::get_term","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":25126,"byte_end":25137,"line_start":75,"line_end":75,"column_start":12,"column_end":23},"name":"clear_index","qualname":"<Entry>::clear_index","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":25232,"byte_end":25241,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"name":"set_index","qualname":"<Entry>::set_index","value":"fn (&mut self, v: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":25305,"byte_end":25314,"line_start":84,"line_end":84,"column_start":12,"column_end":21},"name":"get_index","qualname":"<Entry>::get_index","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":25392,"byte_end":25402,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"clear_data","qualname":"<Entry>::clear_data","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":25500,"byte_end":25508,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"set_data","qualname":"<Entry>::set_data","value":"fn (&mut self, v: ::std::vec::Vec<u8>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":25704,"byte_end":25712,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"mut_data","qualname":"<Entry>::mut_data","value":"fn (&mut self) -> &mut ::std::vec::Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":25813,"byte_end":25822,"line_start":106,"line_end":106,"column_start":12,"column_end":21},"name":"take_data","qualname":"<Entry>::take_data","value":"fn (&mut self) -> ::std::vec::Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":25945,"byte_end":25953,"line_start":110,"line_end":110,"column_start":12,"column_end":20},"name":"get_data","qualname":"<Entry>::get_data","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":26036,"byte_end":26049,"line_start":116,"line_end":116,"column_start":12,"column_end":25},"name":"clear_context","qualname":"<Entry>::clear_context","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":26150,"byte_end":26161,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"set_context","qualname":"<Entry>::set_context","value":"fn (&mut self, v: ::std::vec::Vec<u8>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":26360,"byte_end":26371,"line_start":127,"line_end":127,"column_start":12,"column_end":23},"name":"mut_context","qualname":"<Entry>::mut_context","value":"fn (&mut self) -> &mut ::std::vec::Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":26475,"byte_end":26487,"line_start":132,"line_end":132,"column_start":12,"column_end":24},"name":"take_context","qualname":"<Entry>::take_context","value":"fn (&mut self) -> ::std::vec::Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":26613,"byte_end":26624,"line_start":136,"line_end":136,"column_start":12,"column_end":23},"name":"get_context","qualname":"<Entry>::get_context","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":26710,"byte_end":26724,"line_start":142,"line_end":142,"column_start":12,"column_end":26},"name":"clear_sync_log","qualname":"<Entry>::clear_sync_log","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":26826,"byte_end":26838,"line_start":147,"line_end":147,"column_start":12,"column_end":24},"name":"set_sync_log","qualname":"<Entry>::set_sync_log","value":"fn (&mut self, v: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":26906,"byte_end":26918,"line_start":151,"line_end":151,"column_start":12,"column_end":24},"name":"get_sync_log","qualname":"<Entry>::get_sync_log","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1072},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":34943,"byte_end":34959,"line_start":366,"line_end":366,"column_start":12,"column_end":28},"name":"SnapshotMetadata","qualname":"::eraftpb::SnapshotMetadata","value":"SnapshotMetadata { conf_state, pending_membership_change, pending_membership_change_index, index, term, unknown_fields, cached_size }","parent":null,"children":[{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1073},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":34992,"byte_end":35002,"line_start":368,"line_end":368,"column_start":9,"column_end":19},"name":"conf_state","qualname":"::eraftpb::SnapshotMetadata::conf_state","value":"protobuf::SingularPtrField<eraftpb::ConfState>","parent":{"krate":0,"index":1072},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1074},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":35053,"byte_end":35078,"line_start":369,"line_end":369,"column_start":9,"column_end":34},"name":"pending_membership_change","qualname":"::eraftpb::SnapshotMetadata::pending_membership_change","value":"protobuf::SingularPtrField<eraftpb::ConfState>","parent":{"krate":0,"index":1072},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1075},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":35129,"byte_end":35160,"line_start":370,"line_end":370,"column_start":9,"column_end":40},"name":"pending_membership_change_index","qualname":"::eraftpb::SnapshotMetadata::pending_membership_change_index","value":"u64","parent":{"krate":0,"index":1072},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":35175,"byte_end":35180,"line_start":371,"line_end":371,"column_start":9,"column_end":14},"name":"index","qualname":"::eraftpb::SnapshotMetadata::index","value":"u64","parent":{"krate":0,"index":1072},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":35195,"byte_end":35199,"line_start":372,"line_end":372,"column_start":9,"column_end":13},"name":"term","qualname":"::eraftpb::SnapshotMetadata::term","value":"u64","parent":{"krate":0,"index":1072},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1078},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":35236,"byte_end":35250,"line_start":374,"line_end":374,"column_start":9,"column_end":23},"name":"unknown_fields","qualname":"::eraftpb::SnapshotMetadata::unknown_fields","value":"protobuf::UnknownFields","parent":{"krate":0,"index":1072},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":35287,"byte_end":35298,"line_start":375,"line_end":375,"column_start":9,"column_end":20},"name":"cached_size","qualname":"::eraftpb::SnapshotMetadata::cached_size","value":"protobuf::CachedSize","parent":{"krate":0,"index":1072},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":35362,"byte_end":35365,"line_start":379,"line_end":379,"column_start":12,"column_end":15},"name":"new","qualname":"<SnapshotMetadata>::new","value":"fn () -> SnapshotMetadata","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":35494,"byte_end":35510,"line_start":385,"line_end":385,"column_start":12,"column_end":28},"name":"clear_conf_state","qualname":"<SnapshotMetadata>::clear_conf_state","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":35575,"byte_end":35589,"line_start":389,"line_end":389,"column_start":12,"column_end":26},"name":"has_conf_state","qualname":"<SnapshotMetadata>::has_conf_state","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":35698,"byte_end":35712,"line_start":394,"line_end":394,"column_start":12,"column_end":26},"name":"set_conf_state","qualname":"<SnapshotMetadata>::set_conf_state","value":"fn (&mut self, v: ConfState) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":35940,"byte_end":35954,"line_start":400,"line_end":400,"column_start":12,"column_end":26},"name":"mut_conf_state","qualname":"<SnapshotMetadata>::mut_conf_state","value":"fn (&mut self) -> &mut ConfState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":36156,"byte_end":36171,"line_start":408,"line_end":408,"column_start":12,"column_end":27},"name":"take_conf_state","qualname":"<SnapshotMetadata>::take_conf_state","value":"fn (&mut self) -> ConfState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":36283,"byte_end":36297,"line_start":412,"line_end":412,"column_start":12,"column_end":26},"name":"get_conf_state","qualname":"<SnapshotMetadata>::get_conf_state","value":"fn (&self) -> &ConfState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":36479,"byte_end":36510,"line_start":418,"line_end":418,"column_start":12,"column_end":43},"name":"clear_pending_membership_change","qualname":"<SnapshotMetadata>::clear_pending_membership_change","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":36590,"byte_end":36619,"line_start":422,"line_end":422,"column_start":12,"column_end":41},"name":"has_pending_membership_change","qualname":"<SnapshotMetadata>::has_pending_membership_change","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":36743,"byte_end":36772,"line_start":427,"line_end":427,"column_start":12,"column_end":41},"name":"set_pending_membership_change","qualname":"<SnapshotMetadata>::set_pending_membership_change","value":"fn (&mut self, v: ConfState) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":37015,"byte_end":37044,"line_start":433,"line_end":433,"column_start":12,"column_end":41},"name":"mut_pending_membership_change","qualname":"<SnapshotMetadata>::mut_pending_membership_change","value":"fn (&mut self) -> &mut ConfState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":37291,"byte_end":37321,"line_start":441,"line_end":441,"column_start":12,"column_end":42},"name":"take_pending_membership_change","qualname":"<SnapshotMetadata>::take_pending_membership_change","value":"fn (&mut self) -> ConfState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":37448,"byte_end":37477,"line_start":445,"line_end":445,"column_start":12,"column_end":41},"name":"get_pending_membership_change","qualname":"<SnapshotMetadata>::get_pending_membership_change","value":"fn (&self) -> &ConfState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":37668,"byte_end":37705,"line_start":451,"line_end":451,"column_start":12,"column_end":49},"name":"clear_pending_membership_change_index","qualname":"<SnapshotMetadata>::clear_pending_membership_change_index","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":37826,"byte_end":37861,"line_start":456,"line_end":456,"column_start":12,"column_end":47},"name":"set_pending_membership_change_index","qualname":"<SnapshotMetadata>::set_pending_membership_change_index","value":"fn (&mut self, v: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":37951,"byte_end":37986,"line_start":460,"line_end":460,"column_start":12,"column_end":47},"name":"get_pending_membership_change_index","qualname":"<SnapshotMetadata>::get_pending_membership_change_index","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":38092,"byte_end":38103,"line_start":466,"line_end":466,"column_start":12,"column_end":23},"name":"clear_index","qualname":"<SnapshotMetadata>::clear_index","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":38198,"byte_end":38207,"line_start":471,"line_end":471,"column_start":12,"column_end":21},"name":"set_index","qualname":"<SnapshotMetadata>::set_index","value":"fn (&mut self, v: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":38271,"byte_end":38280,"line_start":475,"line_end":475,"column_start":12,"column_end":21},"name":"get_index","qualname":"<SnapshotMetadata>::get_index","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":38359,"byte_end":38369,"line_start":481,"line_end":481,"column_start":12,"column_end":22},"name":"clear_term","qualname":"<SnapshotMetadata>::clear_term","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":38463,"byte_end":38471,"line_start":486,"line_end":486,"column_start":12,"column_end":20},"name":"set_term","qualname":"<SnapshotMetadata>::set_term","value":"fn (&mut self, v: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":38534,"byte_end":38542,"line_start":490,"line_end":490,"column_start":12,"column_end":20},"name":"get_term","qualname":"<SnapshotMetadata>::get_term","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1088},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":47163,"byte_end":47171,"line_start":706,"line_end":706,"column_start":12,"column_end":20},"name":"Snapshot","qualname":"::eraftpb::Snapshot","value":"Snapshot { data, metadata, unknown_fields, cached_size }","parent":null,"children":[{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1089},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":47204,"byte_end":47208,"line_start":708,"line_end":708,"column_start":9,"column_end":13},"name":"data","qualname":"::eraftpb::Snapshot::data","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":47239,"byte_end":47247,"line_start":709,"line_end":709,"column_start":9,"column_end":17},"name":"metadata","qualname":"::eraftpb::Snapshot::metadata","value":"protobuf::SingularPtrField<eraftpb::SnapshotMetadata>","parent":{"krate":0,"index":1088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1091},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":47327,"byte_end":47341,"line_start":711,"line_end":711,"column_start":9,"column_end":23},"name":"unknown_fields","qualname":"::eraftpb::Snapshot::unknown_fields","value":"protobuf::UnknownFields","parent":{"krate":0,"index":1088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1092},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":47378,"byte_end":47389,"line_start":712,"line_end":712,"column_start":9,"column_end":20},"name":"cached_size","qualname":"::eraftpb::Snapshot::cached_size","value":"protobuf::CachedSize","parent":{"krate":0,"index":1088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":47445,"byte_end":47448,"line_start":716,"line_end":716,"column_start":12,"column_end":15},"name":"new","qualname":"<Snapshot>::new","value":"fn () -> Snapshot","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":47550,"byte_end":47560,"line_start":722,"line_end":722,"column_start":12,"column_end":22},"name":"clear_data","qualname":"<Snapshot>::clear_data","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":47658,"byte_end":47666,"line_start":727,"line_end":727,"column_start":12,"column_end":20},"name":"set_data","qualname":"<Snapshot>::set_data","value":"fn (&mut self, v: ::std::vec::Vec<u8>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":47862,"byte_end":47870,"line_start":733,"line_end":733,"column_start":12,"column_end":20},"name":"mut_data","qualname":"<Snapshot>::mut_data","value":"fn (&mut self) -> &mut ::std::vec::Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":47971,"byte_end":47980,"line_start":738,"line_end":738,"column_start":12,"column_end":21},"name":"take_data","qualname":"<Snapshot>::take_data","value":"fn (&mut self) -> ::std::vec::Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":48103,"byte_end":48111,"line_start":742,"line_end":742,"column_start":12,"column_end":20},"name":"get_data","qualname":"<Snapshot>::get_data","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":48215,"byte_end":48229,"line_start":748,"line_end":748,"column_start":12,"column_end":26},"name":"clear_metadata","qualname":"<Snapshot>::clear_metadata","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":48292,"byte_end":48304,"line_start":752,"line_end":752,"column_start":12,"column_end":24},"name":"has_metadata","qualname":"<Snapshot>::has_metadata","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":48411,"byte_end":48423,"line_start":757,"line_end":757,"column_start":12,"column_end":24},"name":"set_metadata","qualname":"<Snapshot>::set_metadata","value":"fn (&mut self, v: SnapshotMetadata) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":48656,"byte_end":48668,"line_start":763,"line_end":763,"column_start":12,"column_end":24},"name":"mut_metadata","qualname":"<Snapshot>::mut_metadata","value":"fn (&mut self) -> &mut SnapshotMetadata","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":48871,"byte_end":48884,"line_start":771,"line_end":771,"column_start":12,"column_end":25},"name":"take_metadata","qualname":"<Snapshot>::take_metadata","value":"fn (&mut self) -> SnapshotMetadata","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":49008,"byte_end":49020,"line_start":775,"line_end":775,"column_start":12,"column_end":24},"name":"get_metadata","qualname":"<Snapshot>::get_metadata","value":"fn (&self) -> &SnapshotMetadata","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1101},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":54142,"byte_end":54149,"line_start":926,"line_end":926,"column_start":12,"column_end":19},"name":"Message","qualname":"::eraftpb::Message","value":"Message { msg_type, to, from, term, log_term, index, entries, commit, snapshot, reject, reject_hint, context, unknown_fields, cached_size }","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1102},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":54182,"byte_end":54190,"line_start":928,"line_end":928,"column_start":9,"column_end":17},"name":"msg_type","qualname":"::eraftpb::Message::msg_type","value":"eraftpb::MessageType","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1103},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":54213,"byte_end":54215,"line_start":929,"line_end":929,"column_start":9,"column_end":11},"name":"to","qualname":"::eraftpb::Message::to","value":"u64","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1104},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":54230,"byte_end":54234,"line_start":930,"line_end":930,"column_start":9,"column_end":13},"name":"from","qualname":"::eraftpb::Message::from","value":"u64","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1105},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":54249,"byte_end":54253,"line_start":931,"line_end":931,"column_start":9,"column_end":13},"name":"term","qualname":"::eraftpb::Message::term","value":"u64","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1106},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":54268,"byte_end":54276,"line_start":932,"line_end":932,"column_start":9,"column_end":17},"name":"log_term","qualname":"::eraftpb::Message::log_term","value":"u64","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1107},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":54291,"byte_end":54296,"line_start":933,"line_end":933,"column_start":9,"column_end":14},"name":"index","qualname":"::eraftpb::Message::index","value":"u64","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1108},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":54311,"byte_end":54318,"line_start":934,"line_end":934,"column_start":9,"column_end":16},"name":"entries","qualname":"::eraftpb::Message::entries","value":"protobuf::RepeatedField<eraftpb::Entry>","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1109},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":54362,"byte_end":54368,"line_start":935,"line_end":935,"column_start":9,"column_end":15},"name":"commit","qualname":"::eraftpb::Message::commit","value":"u64","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1110},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":54383,"byte_end":54391,"line_start":936,"line_end":936,"column_start":9,"column_end":17},"name":"snapshot","qualname":"::eraftpb::Message::snapshot","value":"protobuf::SingularPtrField<eraftpb::Snapshot>","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1111},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":54441,"byte_end":54447,"line_start":937,"line_end":937,"column_start":9,"column_end":15},"name":"reject","qualname":"::eraftpb::Message::reject","value":"bool","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1112},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":54463,"byte_end":54474,"line_start":938,"line_end":938,"column_start":9,"column_end":20},"name":"reject_hint","qualname":"::eraftpb::Message::reject_hint","value":"u64","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1113},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":54489,"byte_end":54496,"line_start":939,"line_end":939,"column_start":9,"column_end":16},"name":"context","qualname":"::eraftpb::Message::context","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":54549,"byte_end":54563,"line_start":941,"line_end":941,"column_start":9,"column_end":23},"name":"unknown_fields","qualname":"::eraftpb::Message::unknown_fields","value":"protobuf::UnknownFields","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1115},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":54600,"byte_end":54611,"line_start":942,"line_end":942,"column_start":9,"column_end":20},"name":"cached_size","qualname":"::eraftpb::Message::cached_size","value":"protobuf::CachedSize","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":54666,"byte_end":54669,"line_start":946,"line_end":946,"column_start":12,"column_end":15},"name":"new","qualname":"<Message>::new","value":"fn () -> Message","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":54789,"byte_end":54803,"line_start":952,"line_end":952,"column_start":12,"column_end":26},"name":"clear_msg_type","qualname":"<Message>::clear_msg_type","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":54919,"byte_end":54931,"line_start":957,"line_end":957,"column_start":12,"column_end":24},"name":"set_msg_type","qualname":"<Message>::set_msg_type","value":"fn (&mut self, v: MessageType) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":55006,"byte_end":55018,"line_start":961,"line_end":961,"column_start":12,"column_end":24},"name":"get_msg_type","qualname":"<Message>::get_msg_type","value":"fn (&self) -> MessageType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":55106,"byte_end":55114,"line_start":967,"line_end":967,"column_start":12,"column_end":20},"name":"clear_to","qualname":"<Message>::clear_to","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":55206,"byte_end":55212,"line_start":972,"line_end":972,"column_start":12,"column_end":18},"name":"set_to","qualname":"<Message>::set_to","value":"fn (&mut self, v: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":55273,"byte_end":55279,"line_start":976,"line_end":976,"column_start":12,"column_end":18},"name":"get_to","qualname":"<Message>::get_to","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":55355,"byte_end":55365,"line_start":982,"line_end":982,"column_start":12,"column_end":22},"name":"clear_from","qualname":"<Message>::clear_from","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":55459,"byte_end":55467,"line_start":987,"line_end":987,"column_start":12,"column_end":20},"name":"set_from","qualname":"<Message>::set_from","value":"fn (&mut self, v: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":55530,"byte_end":55538,"line_start":991,"line_end":991,"column_start":12,"column_end":20},"name":"get_from","qualname":"<Message>::get_from","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":55616,"byte_end":55626,"line_start":997,"line_end":997,"column_start":12,"column_end":22},"name":"clear_term","qualname":"<Message>::clear_term","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":55720,"byte_end":55728,"line_start":1002,"line_end":1002,"column_start":12,"column_end":20},"name":"set_term","qualname":"<Message>::set_term","value":"fn (&mut self, v: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":55791,"byte_end":55799,"line_start":1006,"line_end":1006,"column_start":12,"column_end":20},"name":"get_term","qualname":"<Message>::get_term","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":55881,"byte_end":55895,"line_start":1012,"line_end":1012,"column_start":12,"column_end":26},"name":"clear_log_term","qualname":"<Message>::clear_log_term","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":55993,"byte_end":56005,"line_start":1017,"line_end":1017,"column_start":12,"column_end":24},"name":"set_log_term","qualname":"<Message>::set_log_term","value":"fn (&mut self, v: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":56072,"byte_end":56084,"line_start":1021,"line_end":1021,"column_start":12,"column_end":24},"name":"get_log_term","qualname":"<Message>::get_log_term","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":56167,"byte_end":56178,"line_start":1027,"line_end":1027,"column_start":12,"column_end":23},"name":"clear_index","qualname":"<Message>::clear_index","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":56273,"byte_end":56282,"line_start":1032,"line_end":1032,"column_start":12,"column_end":21},"name":"set_index","qualname":"<Message>::set_index","value":"fn (&mut self, v: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":56346,"byte_end":56355,"line_start":1036,"line_end":1036,"column_start":12,"column_end":21},"name":"get_index","qualname":"<Message>::get_index","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":56454,"byte_end":56467,"line_start":1042,"line_end":1042,"column_start":12,"column_end":25},"name":"clear_entries","qualname":"<Message>::clear_entries","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":56568,"byte_end":56579,"line_start":1047,"line_end":1047,"column_start":12,"column_end":23},"name":"set_entries","qualname":"<Message>::set_entries","value":"fn (&mut self, v: ::protobuf::RepeatedField<Entry>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":56711,"byte_end":56722,"line_start":1052,"line_end":1052,"column_start":12,"column_end":23},"name":"mut_entries","qualname":"<Message>::mut_entries","value":"fn (&mut self) -> &mut ::protobuf::RepeatedField<Entry>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":56839,"byte_end":56851,"line_start":1057,"line_end":1057,"column_start":12,"column_end":24},"name":"take_entries","qualname":"<Message>::take_entries","value":"fn (&mut self) -> ::protobuf::RepeatedField<Entry>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":57000,"byte_end":57011,"line_start":1061,"line_end":1061,"column_start":12,"column_end":23},"name":"get_entries","qualname":"<Message>::get_entries","value":"fn (&self) -> &[Entry]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":57100,"byte_end":57112,"line_start":1067,"line_end":1067,"column_start":12,"column_end":24},"name":"clear_commit","qualname":"<Message>::clear_commit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":57208,"byte_end":57218,"line_start":1072,"line_end":1072,"column_start":12,"column_end":22},"name":"set_commit","qualname":"<Message>::set_commit","value":"fn (&mut self, v: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":57283,"byte_end":57293,"line_start":1076,"line_end":1076,"column_start":12,"column_end":22},"name":"get_commit","qualname":"<Message>::get_commit","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":57388,"byte_end":57402,"line_start":1082,"line_end":1082,"column_start":12,"column_end":26},"name":"clear_snapshot","qualname":"<Message>::clear_snapshot","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":57465,"byte_end":57477,"line_start":1086,"line_end":1086,"column_start":12,"column_end":24},"name":"has_snapshot","qualname":"<Message>::has_snapshot","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":57584,"byte_end":57596,"line_start":1091,"line_end":1091,"column_start":12,"column_end":24},"name":"set_snapshot","qualname":"<Message>::set_snapshot","value":"fn (&mut self, v: Snapshot) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":57821,"byte_end":57833,"line_start":1097,"line_end":1097,"column_start":12,"column_end":24},"name":"mut_snapshot","qualname":"<Message>::mut_snapshot","value":"fn (&mut self) -> &mut Snapshot","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":58028,"byte_end":58041,"line_start":1105,"line_end":1105,"column_start":12,"column_end":25},"name":"take_snapshot","qualname":"<Message>::take_snapshot","value":"fn (&mut self) -> Snapshot","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":58149,"byte_end":58161,"line_start":1109,"line_end":1109,"column_start":12,"column_end":24},"name":"get_snapshot","qualname":"<Message>::get_snapshot","value":"fn (&self) -> &Snapshot","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":58307,"byte_end":58319,"line_start":1115,"line_end":1115,"column_start":12,"column_end":24},"name":"clear_reject","qualname":"<Message>::clear_reject","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":58419,"byte_end":58429,"line_start":1120,"line_end":1120,"column_start":12,"column_end":22},"name":"set_reject","qualname":"<Message>::set_reject","value":"fn (&mut self, v: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":58495,"byte_end":58505,"line_start":1124,"line_end":1124,"column_start":12,"column_end":22},"name":"get_reject","qualname":"<Message>::get_reject","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":58594,"byte_end":58611,"line_start":1130,"line_end":1130,"column_start":12,"column_end":29},"name":"clear_reject_hint","qualname":"<Message>::clear_reject_hint","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":58712,"byte_end":58727,"line_start":1135,"line_end":1135,"column_start":12,"column_end":27},"name":"set_reject_hint","qualname":"<Message>::set_reject_hint","value":"fn (&mut self, v: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":58797,"byte_end":58812,"line_start":1139,"line_end":1139,"column_start":12,"column_end":27},"name":"get_reject_hint","qualname":"<Message>::get_reject_hint","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":58900,"byte_end":58913,"line_start":1145,"line_end":1145,"column_start":12,"column_end":25},"name":"clear_context","qualname":"<Message>::clear_context","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":59014,"byte_end":59025,"line_start":1150,"line_end":1150,"column_start":12,"column_end":23},"name":"set_context","qualname":"<Message>::set_context","value":"fn (&mut self, v: ::std::vec::Vec<u8>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":59224,"byte_end":59235,"line_start":1156,"line_end":1156,"column_start":12,"column_end":23},"name":"mut_context","qualname":"<Message>::mut_context","value":"fn (&mut self) -> &mut ::std::vec::Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":59339,"byte_end":59351,"line_start":1161,"line_end":1161,"column_start":12,"column_end":24},"name":"take_context","qualname":"<Message>::take_context","value":"fn (&mut self) -> ::std::vec::Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":59477,"byte_end":59488,"line_start":1165,"line_end":1165,"column_start":12,"column_end":23},"name":"get_context","qualname":"<Message>::get_context","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1124},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":73370,"byte_end":73379,"line_start":1506,"line_end":1506,"column_start":12,"column_end":21},"name":"HardState","qualname":"::eraftpb::HardState","value":"HardState { term, vote, commit, unknown_fields, cached_size }","parent":null,"children":[{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1125},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":73412,"byte_end":73416,"line_start":1508,"line_end":1508,"column_start":9,"column_end":13},"name":"term","qualname":"::eraftpb::HardState::term","value":"u64","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1126},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":73431,"byte_end":73435,"line_start":1509,"line_end":1509,"column_start":9,"column_end":13},"name":"vote","qualname":"::eraftpb::HardState::vote","value":"u64","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1127},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":73450,"byte_end":73456,"line_start":1510,"line_end":1510,"column_start":9,"column_end":15},"name":"commit","qualname":"::eraftpb::HardState::commit","value":"u64","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":73493,"byte_end":73507,"line_start":1512,"line_end":1512,"column_start":9,"column_end":23},"name":"unknown_fields","qualname":"::eraftpb::HardState::unknown_fields","value":"protobuf::UnknownFields","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1129},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":73544,"byte_end":73555,"line_start":1513,"line_end":1513,"column_start":9,"column_end":20},"name":"cached_size","qualname":"::eraftpb::HardState::cached_size","value":"protobuf::CachedSize","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":73612,"byte_end":73615,"line_start":1517,"line_end":1517,"column_start":12,"column_end":15},"name":"new","qualname":"<HardState>::new","value":"fn () -> HardState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":73719,"byte_end":73729,"line_start":1523,"line_end":1523,"column_start":12,"column_end":22},"name":"clear_term","qualname":"<HardState>::clear_term","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":73823,"byte_end":73831,"line_start":1528,"line_end":1528,"column_start":12,"column_end":20},"name":"set_term","qualname":"<HardState>::set_term","value":"fn (&mut self, v: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":73894,"byte_end":73902,"line_start":1532,"line_end":1532,"column_start":12,"column_end":20},"name":"get_term","qualname":"<HardState>::get_term","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":73980,"byte_end":73990,"line_start":1538,"line_end":1538,"column_start":12,"column_end":22},"name":"clear_vote","qualname":"<HardState>::clear_vote","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":74084,"byte_end":74092,"line_start":1543,"line_end":1543,"column_start":12,"column_end":20},"name":"set_vote","qualname":"<HardState>::set_vote","value":"fn (&mut self, v: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":74155,"byte_end":74163,"line_start":1547,"line_end":1547,"column_start":12,"column_end":20},"name":"get_vote","qualname":"<HardState>::get_vote","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":74243,"byte_end":74255,"line_start":1553,"line_end":1553,"column_start":12,"column_end":24},"name":"clear_commit","qualname":"<HardState>::clear_commit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":74351,"byte_end":74361,"line_start":1558,"line_end":1558,"column_start":12,"column_end":22},"name":"set_commit","qualname":"<HardState>::set_commit","value":"fn (&mut self, v: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":74426,"byte_end":74436,"line_start":1562,"line_end":1562,"column_start":12,"column_end":22},"name":"get_commit","qualname":"<HardState>::get_commit","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1138},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":80425,"byte_end":80434,"line_start":1732,"line_end":1732,"column_start":12,"column_end":21},"name":"ConfState","qualname":"::eraftpb::ConfState","value":"ConfState { nodes, learners, unknown_fields, cached_size }","parent":null,"children":[{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1139},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":80467,"byte_end":80472,"line_start":1734,"line_end":1734,"column_start":9,"column_end":14},"name":"nodes","qualname":"::eraftpb::ConfState::nodes","value":"std::vec::Vec<u64>","parent":{"krate":0,"index":1138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1140},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":80504,"byte_end":80512,"line_start":1735,"line_end":1735,"column_start":9,"column_end":17},"name":"learners","qualname":"::eraftpb::ConfState::learners","value":"std::vec::Vec<u64>","parent":{"krate":0,"index":1138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1141},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":80566,"byte_end":80580,"line_start":1737,"line_end":1737,"column_start":9,"column_end":23},"name":"unknown_fields","qualname":"::eraftpb::ConfState::unknown_fields","value":"protobuf::UnknownFields","parent":{"krate":0,"index":1138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1142},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":80617,"byte_end":80628,"line_start":1738,"line_end":1738,"column_start":9,"column_end":20},"name":"cached_size","qualname":"::eraftpb::ConfState::cached_size","value":"protobuf::CachedSize","parent":{"krate":0,"index":1138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":80685,"byte_end":80688,"line_start":1742,"line_end":1742,"column_start":12,"column_end":15},"name":"new","qualname":"<ConfState>::new","value":"fn () -> ConfState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":80802,"byte_end":80813,"line_start":1748,"line_end":1748,"column_start":12,"column_end":23},"name":"clear_nodes","qualname":"<ConfState>::clear_nodes","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":80912,"byte_end":80921,"line_start":1753,"line_end":1753,"column_start":12,"column_end":21},"name":"set_nodes","qualname":"<ConfState>::set_nodes","value":"fn (&mut self, v: ::std::vec::Vec<u64>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":81039,"byte_end":81048,"line_start":1758,"line_end":1758,"column_start":12,"column_end":21},"name":"mut_nodes","qualname":"<ConfState>::mut_nodes","value":"fn (&mut self) -> &mut ::std::vec::Vec<u64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":81151,"byte_end":81161,"line_start":1763,"line_end":1763,"column_start":12,"column_end":22},"name":"take_nodes","qualname":"<ConfState>::take_nodes","value":"fn (&mut self) -> ::std::vec::Vec<u64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":81286,"byte_end":81295,"line_start":1767,"line_end":1767,"column_start":12,"column_end":21},"name":"get_nodes","qualname":"<ConfState>::get_nodes","value":"fn (&self) -> &[u64]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":81391,"byte_end":81405,"line_start":1773,"line_end":1773,"column_start":12,"column_end":26},"name":"clear_learners","qualname":"<ConfState>::clear_learners","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":81507,"byte_end":81519,"line_start":1778,"line_end":1778,"column_start":12,"column_end":24},"name":"set_learners","qualname":"<ConfState>::set_learners","value":"fn (&mut self, v: ::std::vec::Vec<u64>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":81640,"byte_end":81652,"line_start":1783,"line_end":1783,"column_start":12,"column_end":24},"name":"mut_learners","qualname":"<ConfState>::mut_learners","value":"fn (&mut self) -> &mut ::std::vec::Vec<u64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":81758,"byte_end":81771,"line_start":1788,"line_end":1788,"column_start":12,"column_end":25},"name":"take_learners","qualname":"<ConfState>::take_learners","value":"fn (&mut self) -> ::std::vec::Vec<u64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":81899,"byte_end":81911,"line_start":1792,"line_end":1792,"column_start":12,"column_end":24},"name":"get_learners","qualname":"<ConfState>::get_learners","value":"fn (&self) -> &[u64]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":86633,"byte_end":86643,"line_start":1935,"line_end":1935,"column_start":12,"column_end":22},"name":"ConfChange","qualname":"::eraftpb::ConfChange","value":"ConfChange { id, change_type, node_id, context, configuration, start_index, unknown_fields, cached_size }","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1152},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":86676,"byte_end":86678,"line_start":1937,"line_end":1937,"column_start":9,"column_end":11},"name":"id","qualname":"::eraftpb::ConfChange::id","value":"u64","parent":{"krate":0,"index":1151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1153},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":86693,"byte_end":86704,"line_start":1938,"line_end":1938,"column_start":9,"column_end":20},"name":"change_type","qualname":"::eraftpb::ConfChange::change_type","value":"eraftpb::ConfChangeType","parent":{"krate":0,"index":1151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1154},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":86730,"byte_end":86737,"line_start":1939,"line_end":1939,"column_start":9,"column_end":16},"name":"node_id","qualname":"::eraftpb::ConfChange::node_id","value":"u64","parent":{"krate":0,"index":1151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":86752,"byte_end":86759,"line_start":1940,"line_end":1940,"column_start":9,"column_end":16},"name":"context","qualname":"::eraftpb::ConfChange::context","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":86790,"byte_end":86803,"line_start":1941,"line_end":1941,"column_start":9,"column_end":22},"name":"configuration","qualname":"::eraftpb::ConfChange::configuration","value":"protobuf::SingularPtrField<eraftpb::ConfState>","parent":{"krate":0,"index":1151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1157},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":86854,"byte_end":86865,"line_start":1942,"line_end":1942,"column_start":9,"column_end":20},"name":"start_index","qualname":"::eraftpb::ConfChange::start_index","value":"u64","parent":{"krate":0,"index":1151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1158},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":86902,"byte_end":86916,"line_start":1944,"line_end":1944,"column_start":9,"column_end":23},"name":"unknown_fields","qualname":"::eraftpb::ConfChange::unknown_fields","value":"protobuf::UnknownFields","parent":{"krate":0,"index":1151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":86953,"byte_end":86964,"line_start":1945,"line_end":1945,"column_start":9,"column_end":20},"name":"cached_size","qualname":"::eraftpb::ConfChange::cached_size","value":"protobuf::CachedSize","parent":{"krate":0,"index":1151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":87022,"byte_end":87025,"line_start":1949,"line_end":1949,"column_start":12,"column_end":15},"name":"new","qualname":"<ConfChange>::new","value":"fn () -> ConfChange","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":87128,"byte_end":87136,"line_start":1955,"line_end":1955,"column_start":12,"column_end":20},"name":"clear_id","qualname":"<ConfChange>::clear_id","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":87228,"byte_end":87234,"line_start":1960,"line_end":1960,"column_start":12,"column_end":18},"name":"set_id","qualname":"<ConfChange>::set_id","value":"fn (&mut self, v: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":87295,"byte_end":87301,"line_start":1964,"line_end":1964,"column_start":12,"column_end":18},"name":"get_id","qualname":"<ConfChange>::get_id","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":87401,"byte_end":87418,"line_start":1970,"line_end":1970,"column_start":12,"column_end":29},"name":"clear_change_type","qualname":"<ConfChange>::clear_change_type","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":87541,"byte_end":87556,"line_start":1975,"line_end":1975,"column_start":12,"column_end":27},"name":"set_change_type","qualname":"<ConfChange>::set_change_type","value":"fn (&mut self, v: ConfChangeType) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":87637,"byte_end":87652,"line_start":1979,"line_end":1979,"column_start":12,"column_end":27},"name":"get_change_type","qualname":"<ConfChange>::get_change_type","value":"fn (&self) -> ConfChangeType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":87751,"byte_end":87764,"line_start":1985,"line_end":1985,"column_start":12,"column_end":25},"name":"clear_node_id","qualname":"<ConfChange>::clear_node_id","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":87861,"byte_end":87872,"line_start":1990,"line_end":1990,"column_start":12,"column_end":23},"name":"set_node_id","qualname":"<ConfChange>::set_node_id","value":"fn (&mut self, v: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":87938,"byte_end":87949,"line_start":1994,"line_end":1994,"column_start":12,"column_end":23},"name":"get_node_id","qualname":"<ConfChange>::get_node_id","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":88032,"byte_end":88045,"line_start":2000,"line_end":2000,"column_start":12,"column_end":25},"name":"clear_context","qualname":"<ConfChange>::clear_context","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":88146,"byte_end":88157,"line_start":2005,"line_end":2005,"column_start":12,"column_end":23},"name":"set_context","qualname":"<ConfChange>::set_context","value":"fn (&mut self, v: ::std::vec::Vec<u8>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":88356,"byte_end":88367,"line_start":2011,"line_end":2011,"column_start":12,"column_end":23},"name":"mut_context","qualname":"<ConfChange>::mut_context","value":"fn (&mut self) -> &mut ::std::vec::Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":88471,"byte_end":88483,"line_start":2016,"line_end":2016,"column_start":12,"column_end":24},"name":"take_context","qualname":"<ConfChange>::take_context","value":"fn (&mut self) -> ::std::vec::Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":88609,"byte_end":88620,"line_start":2020,"line_end":2020,"column_start":12,"column_end":23},"name":"get_context","qualname":"<ConfChange>::get_context","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":88725,"byte_end":88744,"line_start":2026,"line_end":2026,"column_start":12,"column_end":31},"name":"clear_configuration","qualname":"<ConfChange>::clear_configuration","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":88812,"byte_end":88829,"line_start":2030,"line_end":2030,"column_start":12,"column_end":29},"name":"has_configuration","qualname":"<ConfChange>::has_configuration","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":88941,"byte_end":88958,"line_start":2035,"line_end":2035,"column_start":12,"column_end":29},"name":"set_configuration","qualname":"<ConfChange>::set_configuration","value":"fn (&mut self, v: ConfState) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":89189,"byte_end":89206,"line_start":2041,"line_end":2041,"column_start":12,"column_end":29},"name":"mut_configuration","qualname":"<ConfChange>::mut_configuration","value":"fn (&mut self) -> &mut ConfState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":89417,"byte_end":89435,"line_start":2049,"line_end":2049,"column_start":12,"column_end":30},"name":"take_configuration","qualname":"<ConfChange>::take_configuration","value":"fn (&mut self) -> ConfState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":89550,"byte_end":89567,"line_start":2053,"line_end":2053,"column_start":12,"column_end":29},"name":"get_configuration","qualname":"<ConfChange>::get_configuration","value":"fn (&self) -> &ConfState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":89726,"byte_end":89743,"line_start":2059,"line_end":2059,"column_start":12,"column_end":29},"name":"clear_start_index","qualname":"<ConfChange>::clear_start_index","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":89844,"byte_end":89859,"line_start":2064,"line_end":2064,"column_start":12,"column_end":27},"name":"set_start_index","qualname":"<ConfChange>::set_start_index","value":"fn (&mut self, v: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":89929,"byte_end":89944,"line_start":2068,"line_end":2068,"column_start":12,"column_end":27},"name":"get_start_index","qualname":"<ConfChange>::get_start_index","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1169},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":98669,"byte_end":98680,"line_start":2292,"line_end":2292,"column_start":5,"column_end":16},"name":"EntryNormal","qualname":"::eraftpb::EntryType::EntryNormal","value":"EntryType::EntryNormal","parent":{"krate":0,"index":1168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1172},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":98690,"byte_end":98705,"line_start":2293,"line_end":2293,"column_start":5,"column_end":20},"name":"EntryConfChange","qualname":"::eraftpb::EntryType::EntryConfChange","value":"EntryType::EntryConfChange","parent":{"krate":0,"index":1168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1168},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":98653,"byte_end":98662,"line_start":2291,"line_end":2291,"column_start":10,"column_end":19},"name":"EntryType","qualname":"::eraftpb::EntryType","value":"EntryType::{EntryNormal, EntryConfChange}","parent":null,"children":[{"krate":0,"index":1169},{"krate":0,"index":1172}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100232,"byte_end":100238,"line_start":2347,"line_end":2347,"column_start":5,"column_end":11},"name":"MsgHup","qualname":"::eraftpb::MessageType::MsgHup","value":"MessageType::MsgHup","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1192},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100248,"byte_end":100255,"line_start":2348,"line_end":2348,"column_start":5,"column_end":12},"name":"MsgBeat","qualname":"::eraftpb::MessageType::MsgBeat","value":"MessageType::MsgBeat","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1195},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100265,"byte_end":100275,"line_start":2349,"line_end":2349,"column_start":5,"column_end":15},"name":"MsgPropose","qualname":"::eraftpb::MessageType::MsgPropose","value":"MessageType::MsgPropose","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100285,"byte_end":100294,"line_start":2350,"line_end":2350,"column_start":5,"column_end":14},"name":"MsgAppend","qualname":"::eraftpb::MessageType::MsgAppend","value":"MessageType::MsgAppend","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100304,"byte_end":100321,"line_start":2351,"line_end":2351,"column_start":5,"column_end":22},"name":"MsgAppendResponse","qualname":"::eraftpb::MessageType::MsgAppendResponse","value":"MessageType::MsgAppendResponse","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1204},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100331,"byte_end":100345,"line_start":2352,"line_end":2352,"column_start":5,"column_end":19},"name":"MsgRequestVote","qualname":"::eraftpb::MessageType::MsgRequestVote","value":"MessageType::MsgRequestVote","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1207},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100355,"byte_end":100377,"line_start":2353,"line_end":2353,"column_start":5,"column_end":27},"name":"MsgRequestVoteResponse","qualname":"::eraftpb::MessageType::MsgRequestVoteResponse","value":"MessageType::MsgRequestVoteResponse","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100387,"byte_end":100398,"line_start":2354,"line_end":2354,"column_start":5,"column_end":16},"name":"MsgSnapshot","qualname":"::eraftpb::MessageType::MsgSnapshot","value":"MessageType::MsgSnapshot","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100408,"byte_end":100420,"line_start":2355,"line_end":2355,"column_start":5,"column_end":17},"name":"MsgHeartbeat","qualname":"::eraftpb::MessageType::MsgHeartbeat","value":"MessageType::MsgHeartbeat","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1216},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100430,"byte_end":100450,"line_start":2356,"line_end":2356,"column_start":5,"column_end":25},"name":"MsgHeartbeatResponse","qualname":"::eraftpb::MessageType::MsgHeartbeatResponse","value":"MessageType::MsgHeartbeatResponse","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1219},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100460,"byte_end":100474,"line_start":2357,"line_end":2357,"column_start":5,"column_end":19},"name":"MsgUnreachable","qualname":"::eraftpb::MessageType::MsgUnreachable","value":"MessageType::MsgUnreachable","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1222},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100485,"byte_end":100498,"line_start":2358,"line_end":2358,"column_start":5,"column_end":18},"name":"MsgSnapStatus","qualname":"::eraftpb::MessageType::MsgSnapStatus","value":"MessageType::MsgSnapStatus","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100509,"byte_end":100523,"line_start":2359,"line_end":2359,"column_start":5,"column_end":19},"name":"MsgCheckQuorum","qualname":"::eraftpb::MessageType::MsgCheckQuorum","value":"MessageType::MsgCheckQuorum","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100534,"byte_end":100551,"line_start":2360,"line_end":2360,"column_start":5,"column_end":22},"name":"MsgTransferLeader","qualname":"::eraftpb::MessageType::MsgTransferLeader","value":"MessageType::MsgTransferLeader","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1231},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100562,"byte_end":100575,"line_start":2361,"line_end":2361,"column_start":5,"column_end":18},"name":"MsgTimeoutNow","qualname":"::eraftpb::MessageType::MsgTimeoutNow","value":"MessageType::MsgTimeoutNow","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100586,"byte_end":100598,"line_start":2362,"line_end":2362,"column_start":5,"column_end":17},"name":"MsgReadIndex","qualname":"::eraftpb::MessageType::MsgReadIndex","value":"MessageType::MsgReadIndex","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1237},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100609,"byte_end":100625,"line_start":2363,"line_end":2363,"column_start":5,"column_end":21},"name":"MsgReadIndexResp","qualname":"::eraftpb::MessageType::MsgReadIndexResp","value":"MessageType::MsgReadIndexResp","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1240},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100636,"byte_end":100653,"line_start":2364,"line_end":2364,"column_start":5,"column_end":22},"name":"MsgRequestPreVote","qualname":"::eraftpb::MessageType::MsgRequestPreVote","value":"MessageType::MsgRequestPreVote","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100664,"byte_end":100689,"line_start":2365,"line_end":2365,"column_start":5,"column_end":30},"name":"MsgRequestPreVoteResponse","qualname":"::eraftpb::MessageType::MsgRequestPreVoteResponse","value":"MessageType::MsgRequestPreVoteResponse","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1188},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100214,"byte_end":100225,"line_start":2346,"line_end":2346,"column_start":10,"column_end":21},"name":"MessageType","qualname":"::eraftpb::MessageType","value":"MessageType::{MsgHup, MsgBeat, MsgPropose, MsgAppend, MsgAppendResponse, MsgRequestVote, MsgRequestVoteResponse, MsgSnapshot, MsgHeartbeat, MsgHeartbeatResponse, MsgUnreachable, MsgSnapStatus, MsgCheckQuorum, MsgTransferLeader, MsgTimeoutNow, MsgReadIndex, MsgReadIndexResp, MsgRequestPreVote, MsgRequestPreVoteResponse}","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1192},{"krate":0,"index":1195},{"krate":0,"index":1198},{"krate":0,"index":1201},{"krate":0,"index":1204},{"krate":0,"index":1207},{"krate":0,"index":1210},{"krate":0,"index":1213},{"krate":0,"index":1216},{"krate":0,"index":1219},{"krate":0,"index":1222},{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1231},{"krate":0,"index":1234},{"krate":0,"index":1237},{"krate":0,"index":1240},{"krate":0,"index":1243}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1260},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":104230,"byte_end":104237,"line_start":2453,"line_end":2453,"column_start":5,"column_end":12},"name":"AddNode","qualname":"::eraftpb::ConfChangeType::AddNode","value":"ConfChangeType::AddNode","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1263},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":104247,"byte_end":104257,"line_start":2454,"line_end":2454,"column_start":5,"column_end":15},"name":"RemoveNode","qualname":"::eraftpb::ConfChangeType::RemoveNode","value":"ConfChangeType::RemoveNode","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1266},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":104267,"byte_end":104281,"line_start":2455,"line_end":2455,"column_start":5,"column_end":19},"name":"AddLearnerNode","qualname":"::eraftpb::ConfChangeType::AddLearnerNode","value":"ConfChangeType::AddLearnerNode","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":104291,"byte_end":104312,"line_start":2456,"line_end":2456,"column_start":5,"column_end":26},"name":"BeginMembershipChange","qualname":"::eraftpb::ConfChangeType::BeginMembershipChange","value":"ConfChangeType::BeginMembershipChange","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1272},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":104322,"byte_end":104346,"line_start":2457,"line_end":2457,"column_start":5,"column_end":29},"name":"FinalizeMembershipChange","qualname":"::eraftpb::ConfChangeType::FinalizeMembershipChange","value":"ConfChangeType::FinalizeMembershipChange","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1259},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":104209,"byte_end":104223,"line_start":2452,"line_end":2452,"column_start":10,"column_end":24},"name":"ConfChangeType","qualname":"::eraftpb::ConfChangeType","value":"ConfChangeType::{AddNode, RemoveNode, AddLearnerNode, BeginMembershipChange, FinalizeMembershipChange}","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1263},{"krate":0,"index":1266},{"krate":0,"index":1269},{"krate":0,"index":1272}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":126099,"byte_end":126120,"line_start":2780,"line_end":2780,"column_start":8,"column_end":29},"name":"file_descriptor_proto","qualname":"::eraftpb::file_descriptor_proto","value":"fn () -> &'static ::protobuf::descriptor::FileDescriptorProto","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1289},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":127035,"byte_end":127037,"line_start":25,"line_end":25,"column_start":9,"column_end":11},"name":"Io","qualname":"::errors::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":1288},"children":[],"decl_id":null,"docs":" An IO error occurred\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1292},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":127197,"byte_end":127202,"line_start":31,"line_end":31,"column_start":9,"column_end":14},"name":"Store","qualname":"::errors::Error::Store","value":"Error::Store(StorageError)","parent":{"krate":0,"index":1288},"children":[],"decl_id":null,"docs":" A storage error occurred.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1295},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":127375,"byte_end":127387,"line_start":37,"line_end":37,"column_start":9,"column_end":21},"name":"StepLocalMsg","qualname":"::errors::Error::StepLocalMsg","value":"Error::StepLocalMsg","parent":{"krate":0,"index":1288},"children":[],"decl_id":null,"docs":" Raft cannot step the local message.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1297},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":127533,"byte_end":127549,"line_start":41,"line_end":41,"column_start":9,"column_end":25},"name":"StepPeerNotFound","qualname":"::errors::Error::StepPeerNotFound","value":"Error::StepPeerNotFound","parent":{"krate":0,"index":1288},"children":[],"decl_id":null,"docs":" The raft peer is not found and thus cannot step.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1299},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":127682,"byte_end":127697,"line_start":45,"line_end":45,"column_start":9,"column_end":24},"name":"ProposalDropped","qualname":"::errors::Error::ProposalDropped","value":"Error::ProposalDropped","parent":{"krate":0,"index":1288},"children":[],"decl_id":null,"docs":" The proposal of changes was dropped.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":127810,"byte_end":127823,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"name":"ConfigInvalid","qualname":"::errors::Error::ConfigInvalid","value":"Error::ConfigInvalid(String)","parent":{"krate":0,"index":1288},"children":[],"decl_id":null,"docs":" The configuration is invalid.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1304},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":127942,"byte_end":127947,"line_start":53,"line_end":53,"column_start":9,"column_end":14},"name":"Codec","qualname":"::errors::Error::Codec","value":"Error::Codec(ProtobufError)","parent":{"krate":0,"index":1288},"children":[],"decl_id":null,"docs":" A Protobuf message failed in some manner.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":128166,"byte_end":128172,"line_start":60,"line_end":60,"column_start":9,"column_end":15},"name":"Exists","qualname":"::errors::Error::Exists","value":"Error::Exists(u64, &'static str)","parent":{"krate":0,"index":1288},"children":[],"decl_id":null,"docs":" The node exists, but should not.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1311},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":128344,"byte_end":128353,"line_start":64,"line_end":64,"column_start":9,"column_end":18},"name":"NotExists","qualname":"::errors::Error::NotExists","value":"Error::NotExists(u64, &'static str)","parent":{"krate":0,"index":1288},"children":[],"decl_id":null,"docs":" The node does not exist, but should.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1315},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":128549,"byte_end":128561,"line_start":68,"line_end":68,"column_start":9,"column_end":21},"name":"InvalidState","qualname":"::errors::Error::InvalidState","value":"Error::InvalidState(StateRole)","parent":{"krate":0,"index":1288},"children":[],"decl_id":null,"docs":" The action given requires the node to be in a particular state role.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1318},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":128785,"byte_end":128810,"line_start":72,"line_end":72,"column_start":9,"column_end":34},"name":"NoPendingMembershipChange","qualname":"::errors::Error::NoPendingMembershipChange","value":"Error::NoPendingMembershipChange","parent":{"krate":0,"index":1288},"children":[],"decl_id":null,"docs":" The node attempted to transition to a new membership configuration while there was none pending.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1320},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":129019,"byte_end":129035,"line_start":76,"line_end":76,"column_start":9,"column_end":25},"name":"ViolatesContract","qualname":"::errors::Error::ViolatesContract","value":"Error::ViolatesContract(String)","parent":{"krate":0,"index":1288},"children":[],"decl_id":null,"docs":" An argument violates a calling contract.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":126986,"byte_end":126991,"line_start":23,"line_end":23,"column_start":14,"column_end":19},"name":"Error","qualname":"::errors::Error","value":"Error::{Io, Store, StepLocalMsg, StepPeerNotFound, ProposalDropped, ConfigInvalid, Codec, Exists, NotExists, InvalidState, NoPendingMembershipChange, ViolatesContract}","parent":null,"children":[{"krate":0,"index":1289},{"krate":0,"index":1292},{"krate":0,"index":1295},{"krate":0,"index":1297},{"krate":0,"index":1299},{"krate":0,"index":1301},{"krate":0,"index":1304},{"krate":0,"index":1307},{"krate":0,"index":1311},{"krate":0,"index":1315},{"krate":0,"index":1318},{"krate":0,"index":1320}],"decl_id":null,"docs":" The base error type for raft\n","sig":null,"attributes":[{"value":"allow(unknown_lints)","span":{"file_name":"<::quick_error::quick_error macros>","byte_start":10660599,"byte_end":10660624,"line_start":233,"line_end":233,"column_start":5,"column_end":30}},{"value":"allow(renamed_and_removed_lints)","span":{"file_name":"<::quick_error::quick_error macros>","byte_start":10660625,"byte_end":10660662,"line_start":233,"line_end":233,"column_start":31,"column_end":68}},{"value":"allow(unused_doc_comment)","span":{"file_name":"<::quick_error::quick_error macros>","byte_start":10660663,"byte_end":10660697,"line_start":233,"line_end":234,"column_start":69,"column_end":33}},{"value":"allow(unused_doc_comments)","span":{"file_name":"<::quick_error::quick_error macros>","byte_start":10660698,"byte_end":10660729,"line_start":234,"line_end":234,"column_start":34,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1348},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":129988,"byte_end":129997,"line_start":102,"line_end":102,"column_start":9,"column_end":18},"name":"Compacted","qualname":"::errors::StorageError::Compacted","value":"StorageError::Compacted","parent":{"krate":0,"index":1347},"children":[],"decl_id":null,"docs":" The storage was compacted and not accessible\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1350},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":130097,"byte_end":130108,"line_start":106,"line_end":106,"column_start":9,"column_end":20},"name":"Unavailable","qualname":"::errors::StorageError::Unavailable","value":"StorageError::Unavailable","parent":{"krate":0,"index":1347},"children":[],"decl_id":null,"docs":" The log is not available.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1352},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":130213,"byte_end":130230,"line_start":110,"line_end":110,"column_start":9,"column_end":26},"name":"SnapshotOutOfDate","qualname":"::errors::StorageError::SnapshotOutOfDate","value":"StorageError::SnapshotOutOfDate","parent":{"krate":0,"index":1347},"children":[],"decl_id":null,"docs":" The snapshot is out of date.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1354},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":130342,"byte_end":130372,"line_start":114,"line_end":114,"column_start":9,"column_end":39},"name":"SnapshotTemporarilyUnavailable","qualname":"::errors::StorageError::SnapshotTemporarilyUnavailable","value":"StorageError::SnapshotTemporarilyUnavailable","parent":{"krate":0,"index":1347},"children":[],"decl_id":null,"docs":" The snapshot is being created.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1356},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":130495,"byte_end":130500,"line_start":118,"line_end":118,"column_start":9,"column_end":14},"name":"Other","qualname":"::errors::StorageError::Other","value":"StorageError::Other(Box<error::Error + Sync + Send>)","parent":{"krate":0,"index":1347},"children":[],"decl_id":null,"docs":" Some other error occurred.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1347},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":129908,"byte_end":129920,"line_start":100,"line_end":100,"column_start":14,"column_end":26},"name":"StorageError","qualname":"::errors::StorageError","value":"StorageError::{Compacted, Unavailable, SnapshotOutOfDate, SnapshotTemporarilyUnavailable, Other}","parent":null,"children":[{"krate":0,"index":1348},{"krate":0,"index":1350},{"krate":0,"index":1352},{"krate":0,"index":1354},{"krate":0,"index":1356}],"decl_id":null,"docs":" An error with the storage.\n","sig":null,"attributes":[{"value":"allow(unknown_lints)","span":{"file_name":"<::quick_error::quick_error macros>","byte_start":10660599,"byte_end":10660624,"line_start":233,"line_end":233,"column_start":5,"column_end":30}},{"value":"allow(renamed_and_removed_lints)","span":{"file_name":"<::quick_error::quick_error macros>","byte_start":10660625,"byte_end":10660662,"line_start":233,"line_end":233,"column_start":31,"column_end":68}},{"value":"allow(unused_doc_comment)","span":{"file_name":"<::quick_error::quick_error macros>","byte_start":10660663,"byte_end":10660697,"line_start":233,"line_end":234,"column_start":69,"column_end":33}},{"value":"allow(unused_doc_comments)","span":{"file_name":"<::quick_error::quick_error macros>","byte_start":10660698,"byte_end":10660729,"line_start":234,"line_end":234,"column_start":34,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":131399,"byte_end":131405,"line_start":144,"line_end":144,"column_start":10,"column_end":16},"name":"Result","qualname":"::errors::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A result type that wraps up the raft errors.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1372},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\log_unstable.rs","byte_start":135210,"byte_end":135218,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"Unstable","qualname":"::log_unstable::Unstable","value":"Unstable { snapshot, entries, offset, tag }","parent":null,"children":[{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376}],"decl_id":null,"docs":" The unstable.entries[i] has raft log position i+unstable.offset.\n Note that unstable.offset may be less than the highest log\n position in storage; this means that the next write to storage\n might need to truncate the log before persisting unstable.entries.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1373},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\log_unstable.rs","byte_start":135277,"byte_end":135285,"line_start":39,"line_end":39,"column_start":9,"column_end":17},"name":"snapshot","qualname":"::log_unstable::Unstable::snapshot","value":"std::option::Option<eraftpb::Snapshot>","parent":{"krate":0,"index":1372},"children":[],"decl_id":null,"docs":" The incoming unstable snapshot, if any.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1374},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\log_unstable.rs","byte_start":135377,"byte_end":135384,"line_start":42,"line_end":42,"column_start":9,"column_end":16},"name":"entries","qualname":"::log_unstable::Unstable::entries","value":"std::vec::Vec<eraftpb::Entry>","parent":{"krate":0,"index":1372},"children":[],"decl_id":null,"docs":" All entries that have not yet been written to storage.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1375},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\log_unstable.rs","byte_start":135449,"byte_end":135455,"line_start":45,"line_end":45,"column_start":9,"column_end":15},"name":"offset","qualname":"::log_unstable::Unstable::offset","value":"u64","parent":{"krate":0,"index":1372},"children":[],"decl_id":null,"docs":" The offset from the vector index.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1376},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\log_unstable.rs","byte_start":135508,"byte_end":135511,"line_start":48,"line_end":48,"column_start":9,"column_end":12},"name":"tag","qualname":"::log_unstable::Unstable::tag","value":"std::string::String","parent":{"krate":0,"index":1372},"children":[],"decl_id":null,"docs":" The tag to use when logging.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\log_unstable.rs","byte_start":135598,"byte_end":135601,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Unstable>::new","value":"fn (offset: u64, tag: String) -> Unstable","parent":null,"children":[],"decl_id":null,"docs":" Creates a new log of unstable entries.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\log_unstable.rs","byte_start":135878,"byte_end":135895,"line_start":64,"line_end":64,"column_start":12,"column_end":29},"name":"maybe_first_index","qualname":"<Unstable>::maybe_first_index","value":"fn (&self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the first possible entry in entries\n if it has a snapshot.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\log_unstable.rs","byte_start":136125,"byte_end":136141,"line_start":71,"line_end":71,"column_start":12,"column_end":28},"name":"maybe_last_index","qualname":"<Unstable>::maybe_last_index","value":"fn (&self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the last index if it has at least one unstable entry or snapshot.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\log_unstable.rs","byte_start":136489,"byte_end":136499,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"maybe_term","qualname":"<Unstable>::maybe_term","value":"fn (&self, idx: u64) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the term of the entry at index idx, if there is any.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\log_unstable.rs","byte_start":137184,"byte_end":137193,"line_start":103,"line_end":103,"column_start":12,"column_end":21},"name":"stable_to","qualname":"<Unstable>::stable_to","value":"fn (&mut self, idx: u64, term: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves the stable offset up to the index. Provided that the index\n is in the same election term.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\log_unstable.rs","byte_start":137612,"byte_end":137626,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"stable_snap_to","qualname":"<Unstable>::stable_snap_to","value":"fn (&mut self, idx: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes the snapshot from self if the index of the snapshot matches\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\log_unstable.rs","byte_start":137940,"byte_end":137947,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"restore","qualname":"<Unstable>::restore","value":"fn (&mut self, snap: Snapshot) -> ()","parent":null,"children":[],"decl_id":null,"docs":" From a given snapshot, restores the snapshot to self, but doesn't unpack.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\log_unstable.rs","byte_start":138198,"byte_end":138217,"line_start":134,"line_end":134,"column_start":12,"column_end":31},"name":"truncate_and_append","qualname":"<Unstable>::truncate_and_append","value":"fn (&mut self, ents: &[Entry]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Append entries to unstable, truncate local block first if overlapped.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\log_unstable.rs","byte_start":139260,"byte_end":139265,"line_start":160,"line_end":160,"column_start":12,"column_end":17},"name":"slice","qualname":"<Unstable>::slice","value":"fn (&self, lo: u64, hi: u64) -> &[Entry]","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of entries between the high and low.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\log_unstable.rs","byte_start":139610,"byte_end":139632,"line_start":170,"line_end":170,"column_start":12,"column_end":34},"name":"must_check_outofbounds","qualname":"<Unstable>::must_check_outofbounds","value":"fn (&self, lo: u64, hi: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Asserts the `hi` and `lo` values against each other and against the\n entries themselves.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1386},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":150664,"byte_end":150669,"line_start":45,"line_end":45,"column_start":5,"column_end":10},"name":"Probe","qualname":"::progress::ProgressState::Probe","value":"ProgressState::Probe","parent":{"krate":0,"index":1385},"children":[],"decl_id":null,"docs":" Whether it's probing.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1388},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":150709,"byte_end":150718,"line_start":47,"line_end":47,"column_start":5,"column_end":14},"name":"Replicate","qualname":"::progress::ProgressState::Replicate","value":"ProgressState::Replicate","parent":{"krate":0,"index":1385},"children":[],"decl_id":null,"docs":" Whether it's replicating.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1390},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":150758,"byte_end":150766,"line_start":49,"line_end":49,"column_start":5,"column_end":13},"name":"Snapshot","qualname":"::progress::ProgressState::Snapshot","value":"ProgressState::Snapshot","parent":{"krate":0,"index":1385},"children":[],"decl_id":null,"docs":" Whethers it's a snapshot.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":150614,"byte_end":150627,"line_start":43,"line_end":43,"column_start":10,"column_end":23},"name":"ProgressState","qualname":"::progress::ProgressState","value":"ProgressState::{Probe, Replicate, Snapshot}","parent":null,"children":[{"krate":0,"index":1386},{"krate":0,"index":1388},{"krate":0,"index":1390}],"decl_id":null,"docs":" The state of the progress.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":151075,"byte_end":151088,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"Configuration","qualname":"::progress::Configuration","value":"Configuration {  }","parent":null,"children":[{"krate":0,"index":1401},{"krate":0,"index":1402}],"decl_id":null,"docs":" A Raft internal representation of a Configuration.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":151331,"byte_end":151334,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<Configuration>::new","value":"fn (voters: impl IntoIterator<Item = u64>, learners: impl IntoIterator<Item = u64>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new configuration with the given configuration.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":152979,"byte_end":152984,"line_start":128,"line_end":128,"column_start":12,"column_end":17},"name":"valid","qualname":"<Configuration>::valid","value":"fn (&self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates that the configuration is not problematic.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":153581,"byte_end":153589,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"name":"contains","qualname":"<Configuration>::contains","value":"fn (&self, id: u64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not the given `id` is a member of this configuration.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":153929,"byte_end":153936,"line_start":155,"line_end":155,"column_start":5,"column_end":12},"name":"Elected","qualname":"::progress::CandidacyStatus::Elected","value":"CandidacyStatus::Elected","parent":{"krate":0,"index":1416},"children":[],"decl_id":null,"docs":" The election has been won by this Raft.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1419},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":153992,"byte_end":154000,"line_start":157,"line_end":157,"column_start":5,"column_end":13},"name":"Eligible","qualname":"::progress::CandidacyStatus::Eligible","value":"CandidacyStatus::Eligible","parent":{"krate":0,"index":1416},"children":[],"decl_id":null,"docs":" It is still possible to win the election.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1421},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":154060,"byte_end":154070,"line_start":159,"line_end":159,"column_start":5,"column_end":15},"name":"Ineligible","qualname":"::progress::CandidacyStatus::Ineligible","value":"CandidacyStatus::Ineligible","parent":{"krate":0,"index":1416},"children":[],"decl_id":null,"docs":" It is no longer possible to win the election.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1416},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":153859,"byte_end":153874,"line_start":153,"line_end":153,"column_start":10,"column_end":25},"name":"CandidacyStatus","qualname":"::progress::CandidacyStatus","value":"CandidacyStatus::{Elected, Eligible, Ineligible}","parent":null,"children":[{"krate":0,"index":1417},{"krate":0,"index":1419},{"krate":0,"index":1421}],"decl_id":null,"docs":" The status of an election according to a Candidate node.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1428},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":154225,"byte_end":154236,"line_start":165,"line_end":165,"column_start":12,"column_end":23},"name":"ProgressSet","qualname":"::progress::ProgressSet","value":"ProgressSet {  }","parent":null,"children":[{"krate":0,"index":1429},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1430},{"krate":0,"index":1431}],"decl_id":null,"docs":" `ProgressSet` contains several `Progress`es,\n which could be `Leader`, `Follower` and `Learner`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":154900,"byte_end":154903,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"new","qualname":"<ProgressSet>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new ProgressSet.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":155041,"byte_end":155054,"line_start":187,"line_end":187,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<ProgressSet>::with_capacity","value":"fn (voters: usize, learners: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a progress set with the specified sizes already reserved.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":157220,"byte_end":157226,"line_start":243,"line_end":243,"column_start":12,"column_end":18},"name":"voters","qualname":"<ProgressSet>::voters","value":"fn (&self) -> impl Iterator<Item = (&u64, &Progress)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the status of voters.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":157199,"byte_end":157208,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":157645,"byte_end":157653,"line_start":253,"line_end":253,"column_start":12,"column_end":20},"name":"learners","qualname":"<ProgressSet>::learners","value":"fn (&self) -> impl Iterator<Item = (&u64, &Progress)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the status of learners.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":157624,"byte_end":157633,"line_start":252,"line_end":252,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":158080,"byte_end":158090,"line_start":263,"line_end":263,"column_start":12,"column_end":22},"name":"voters_mut","qualname":"<ProgressSet>::voters_mut","value":"fn (&mut self) -> impl Iterator<Item = (&u64, &mut Progress)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the mutable status of voters.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":158059,"byte_end":158068,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":158553,"byte_end":158565,"line_start":275,"line_end":275,"column_start":12,"column_end":24},"name":"learners_mut","qualname":"<ProgressSet>::learners_mut","value":"fn (&mut self) -> impl Iterator<Item = (&u64, &mut Progress)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the mutable status of learners.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":158532,"byte_end":158541,"line_start":274,"line_end":274,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":159027,"byte_end":159036,"line_start":287,"line_end":287,"column_start":12,"column_end":21},"name":"voter_ids","qualname":"<ProgressSet>::voter_ids","value":"fn (&self) -> HashSet<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the ids of all known voters.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":159006,"byte_end":159015,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":159632,"byte_end":159643,"line_start":304,"line_end":304,"column_start":12,"column_end":23},"name":"learner_ids","qualname":"<ProgressSet>::learner_ids","value":"fn (&self) -> HashSet<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the ids of all known learners.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":159611,"byte_end":159620,"line_start":303,"line_end":303,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":160062,"byte_end":160065,"line_start":318,"line_end":318,"column_start":12,"column_end":15},"name":"get","qualname":"<ProgressSet>::get","value":"fn (&self, id: u64) -> Option<&Progress>","parent":null,"children":[],"decl_id":null,"docs":" Grabs a reference to the progress of a node.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":160041,"byte_end":160050,"line_start":317,"line_end":317,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":160229,"byte_end":160236,"line_start":324,"line_end":324,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ProgressSet>::get_mut","value":"fn (&mut self, id: u64) -> Option<&mut Progress>","parent":null,"children":[],"decl_id":null,"docs":" Grabs a mutable reference to the progress of a node.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":160208,"byte_end":160217,"line_start":323,"line_end":323,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":160609,"byte_end":160613,"line_start":333,"line_end":333,"column_start":12,"column_end":16},"name":"iter","qualname":"<ProgressSet>::iter","value":"fn (&self) -> impl ExactSizeIterator<Item = (&u64, &Progress)>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator across all the nodes and their progress.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":160588,"byte_end":160597,"line_start":332,"line_end":332,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":161001,"byte_end":161009,"line_start":342,"line_end":342,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<ProgressSet>::iter_mut","value":"fn (&mut self) -> impl ExactSizeIterator<Item = (&u64, &mut Progress)>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable iterator across all the nodes and their progress.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":160980,"byte_end":160989,"line_start":341,"line_end":341,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":161320,"byte_end":161332,"line_start":353,"line_end":353,"column_start":12,"column_end":24},"name":"insert_voter","qualname":"<ProgressSet>::insert_voter","value":"fn (&mut self, id: u64, pr: Progress) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Adds a voter to the group.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":162201,"byte_end":162215,"line_start":380,"line_end":380,"column_start":12,"column_end":26},"name":"insert_learner","qualname":"<ProgressSet>::insert_learner","value":"fn (&mut self, id: u64, pr: Progress) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Adds a learner to the group.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":163037,"byte_end":163043,"line_start":405,"line_end":405,"column_start":12,"column_end":18},"name":"remove","qualname":"<ProgressSet>::remove","value":"fn (&mut self, id: u64) -> Result<Option<Progress>>","parent":null,"children":[],"decl_id":null,"docs":" Removes the peer from the set of voters or learners.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":163609,"byte_end":163624,"line_start":423,"line_end":423,"column_start":12,"column_end":27},"name":"promote_learner","qualname":"<ProgressSet>::promote_learner","value":"fn (&mut self, id: u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Promote a learner to a peer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":165411,"byte_end":165434,"line_start":474,"line_end":474,"column_start":12,"column_end":35},"name":"maximal_committed_index","qualname":"<ProgressSet>::maximal_committed_index","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximal committed index for the cluster.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":166594,"byte_end":166610,"line_start":506,"line_end":506,"column_start":12,"column_end":28},"name":"candidacy_status","qualname":"<ProgressSet>::candidacy_status","value":"fn <'a> (&self, votes: impl IntoIterator<Item = (&'a u64, &'a bool)>) -> CandidacyStatus","parent":null,"children":[],"decl_id":null,"docs":" Returns the Candidate's eligibility in the current election.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":168076,"byte_end":168098,"line_start":546,"line_end":546,"column_start":12,"column_end":34},"name":"quorum_recently_active","qualname":"<ProgressSet>::quorum_recently_active","value":"fn (&mut self, perspective_of: u64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines if the current quorum is active according to the this raft node.\n Doing this will set the `recent_active` of each peer to false.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":168998,"byte_end":169008,"line_start":570,"line_end":570,"column_start":12,"column_end":22},"name":"has_quorum","qualname":"<ProgressSet>::has_quorum","value":"fn (&self, potential_quorum: &HashSet<u64>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine if a quorum is formed from the given set of nodes.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":168977,"byte_end":168986,"line_start":569,"line_end":569,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":169502,"byte_end":169525,"line_start":582,"line_end":582,"column_start":12,"column_end":35},"name":"is_in_membership_change","qualname":"<ProgressSet>::is_in_membership_change","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine if the ProgressSet is represented by a transition state under Joint Consensus.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":169481,"byte_end":169490,"line_start":581,"line_end":581,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":172010,"byte_end":172036,"line_start":646,"line_end":646,"column_start":12,"column_end":38},"name":"finalize_membership_change","qualname":"<ProgressSet>::finalize_membership_change","value":"fn (&mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Finalizes the joint consensus state and transitions solely to the new state.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1445},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":172996,"byte_end":173004,"line_start":675,"line_end":675,"column_start":12,"column_end":20},"name":"Progress","qualname":"::progress::Progress","value":"Progress { matched, next_idx, state, paused, pending_snapshot, recent_active, ins }","parent":null,"children":[{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452}],"decl_id":null,"docs":" The progress of catching up from a restart.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1446},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":173050,"byte_end":173057,"line_start":677,"line_end":677,"column_start":9,"column_end":16},"name":"matched","qualname":"::progress::Progress::matched","value":"u64","parent":{"krate":0,"index":1445},"children":[],"decl_id":null,"docs":" How much state is matched.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1447},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":173104,"byte_end":173112,"line_start":679,"line_end":679,"column_start":9,"column_end":17},"name":"next_idx","qualname":"::progress::Progress::next_idx","value":"u64","parent":{"krate":0,"index":1445},"children":[],"decl_id":null,"docs":" The next index to apply\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1448},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":173667,"byte_end":173672,"line_start":689,"line_end":689,"column_start":9,"column_end":14},"name":"state","qualname":"::progress::Progress::state","value":"progress::ProgressState","parent":{"krate":0,"index":1445},"children":[],"decl_id":null,"docs":" When in ProgressStateProbe, leader sends at most one replication message\n per heartbeat interval. It also probes actual progress of the follower.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1449},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":173832,"byte_end":173838,"line_start":692,"line_end":692,"column_start":9,"column_end":15},"name":"paused","qualname":"::progress::Progress::paused","value":"bool","parent":{"krate":0,"index":1445},"children":[],"decl_id":null,"docs":" Paused is used in ProgressStateProbe.\n When Paused is true, raft should pause sending replication message to this peer.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1450},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":174195,"byte_end":174211,"line_start":698,"line_end":698,"column_start":9,"column_end":25},"name":"pending_snapshot","qualname":"::progress::Progress::pending_snapshot","value":"u64","parent":{"krate":0,"index":1445},"children":[],"decl_id":null,"docs":" This field is used in ProgressStateSnapshot.\n If there is a pending snapshot, the pendingSnapshot will be set to the\n index of the snapshot. If pendingSnapshot is set, the replication process of\n this Progress will be paused. raft will not resend snapshot until the pending one\n is reported to be failed.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1451},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":174451,"byte_end":174464,"line_start":703,"line_end":703,"column_start":9,"column_end":22},"name":"recent_active","qualname":"::progress::Progress::recent_active","value":"bool","parent":{"krate":0,"index":1445},"children":[],"decl_id":null,"docs":" This is true if the progress is recently active. Receiving any messages\n from the corresponding follower indicates the progress is active.\n RecentActive can be reset to false after an election timeout.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1452},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":174892,"byte_end":174895,"line_start":712,"line_end":712,"column_start":9,"column_end":12},"name":"ins","qualname":"::progress::Progress::ins","value":"progress::Inflights","parent":{"krate":0,"index":1445},"children":[],"decl_id":null,"docs":" Inflights is a sliding window for the inflight messages.\n When inflights is full, no more message should be sent.\n When a leader sends out a message, the index of the last\n entry should be added to inflights. The index MUST be added\n into inflights in order.\n When a leader receives a reply, the previous inflights should\n be freed by calling inflights.freeTo.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":174994,"byte_end":174997,"line_start":717,"line_end":717,"column_start":12,"column_end":15},"name":"new","qualname":"<Progress>::new","value":"fn (next_idx: u64, ins_size: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new progress with the given settings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":175871,"byte_end":175883,"line_start":748,"line_end":748,"column_start":12,"column_end":24},"name":"become_probe","qualname":"<Progress>::become_probe","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Changes the progress to a probe.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":176525,"byte_end":176541,"line_start":763,"line_end":763,"column_start":12,"column_end":28},"name":"become_replicate","qualname":"<Progress>::become_replicate","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Changes the progress to a Replicate.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":176711,"byte_end":176726,"line_start":769,"line_end":769,"column_start":12,"column_end":27},"name":"become_snapshot","qualname":"<Progress>::become_snapshot","value":"fn (&mut self, snapshot_idx: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Changes the progress to a snapshot.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":176912,"byte_end":176928,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"snapshot_failure","qualname":"<Progress>::snapshot_failure","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the snapshot to failure.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":177087,"byte_end":177107,"line_start":781,"line_end":781,"column_start":12,"column_end":32},"name":"maybe_snapshot_abort","qualname":"<Progress>::maybe_snapshot_abort","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Unsets pendingSnapshot if Match is equal or higher than\n the pendingSnapshot\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":177365,"byte_end":177377,"line_start":787,"line_end":787,"column_start":12,"column_end":24},"name":"maybe_update","qualname":"<Progress>::maybe_update","value":"fn (&mut self, n: u64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns false if the given n index comes from an outdated message.\n Otherwise it updates the progress and returns true.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":177704,"byte_end":177721,"line_start":802,"line_end":802,"column_start":12,"column_end":29},"name":"optimistic_update","qualname":"<Progress>::optimistic_update","value":"fn (&mut self, n: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Optimistically advance the index\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":177973,"byte_end":177986,"line_start":809,"line_end":809,"column_start":12,"column_end":25},"name":"maybe_decr_to","qualname":"<Progress>::maybe_decr_to","value":"fn (&mut self, rejected: u64, last: u64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns false if the given index comes from an out of order message.\n Otherwise it decreases the progress next index to min(rejected, last)\n and returns true.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":178785,"byte_end":178794,"line_start":834,"line_end":834,"column_start":12,"column_end":21},"name":"is_paused","qualname":"<Progress>::is_paused","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine whether progress is paused.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":179042,"byte_end":179048,"line_start":843,"line_end":843,"column_start":12,"column_end":18},"name":"resume","qualname":"<Progress>::resume","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resume progress\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":179133,"byte_end":179138,"line_start":848,"line_end":848,"column_start":12,"column_end":17},"name":"pause","qualname":"<Progress>::pause","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pause progress.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1461},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":179263,"byte_end":179272,"line_start":855,"line_end":855,"column_start":12,"column_end":21},"name":"Inflights","qualname":"::progress::Inflights","value":"Inflights {  }","parent":null,"children":[{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464}],"decl_id":null,"docs":" A buffer of inflight messages.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":179895,"byte_end":179898,"line_start":880,"line_end":880,"column_start":12,"column_end":15},"name":"new","qualname":"<Inflights>::new","value":"fn (cap: usize) -> Inflights","parent":null,"children":[],"decl_id":null,"docs":" Creates a new buffer for inflight messages.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":180110,"byte_end":180114,"line_start":889,"line_end":889,"column_start":12,"column_end":16},"name":"full","qualname":"<Inflights>::full","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the inflights is full.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":180212,"byte_end":180215,"line_start":894,"line_end":894,"column_start":12,"column_end":15},"name":"cap","qualname":"<Inflights>::cap","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The buffer capacity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":180323,"byte_end":180326,"line_start":899,"line_end":899,"column_start":12,"column_end":15},"name":"add","qualname":"<Inflights>::add","value":"fn (&mut self, inflight: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds an inflight into inflights\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":180874,"byte_end":180881,"line_start":918,"line_end":918,"column_start":12,"column_end":19},"name":"free_to","qualname":"<Inflights>::free_to","value":"fn (&mut self, to: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Frees the inflights smaller or equal to the given `to` flight.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":181610,"byte_end":181624,"line_start":947,"line_end":947,"column_start":12,"column_end":26},"name":"free_first_one","qualname":"<Inflights>::free_first_one","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Frees the first buffer entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":181759,"byte_end":181764,"line_start":953,"line_end":953,"column_start":12,"column_end":17},"name":"reset","qualname":"<Inflights>::reset","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Frees all inflights.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1472},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":194107,"byte_end":194115,"line_start":58,"line_end":58,"column_start":5,"column_end":13},"name":"Follower","qualname":"::raft::StateRole::Follower","value":"StateRole::Follower","parent":{"krate":0,"index":1471},"children":[],"decl_id":null,"docs":" The node is a follower of the leader.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1474},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":194161,"byte_end":194170,"line_start":60,"line_end":60,"column_start":5,"column_end":14},"name":"Candidate","qualname":"::raft::StateRole::Candidate","value":"StateRole::Candidate","parent":{"krate":0,"index":1471},"children":[],"decl_id":null,"docs":" The node could become a leader.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1476},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":194206,"byte_end":194212,"line_start":62,"line_end":62,"column_start":5,"column_end":11},"name":"Leader","qualname":"::raft::StateRole::Leader","value":"StateRole::Leader","parent":{"krate":0,"index":1471},"children":[],"decl_id":null,"docs":" The node is a leader.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1478},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":194286,"byte_end":194298,"line_start":64,"line_end":64,"column_start":5,"column_end":17},"name":"PreCandidate","qualname":"::raft::StateRole::PreCandidate","value":"StateRole::PreCandidate","parent":{"krate":0,"index":1471},"children":[],"decl_id":null,"docs":" The node could become a candidate, if `prevote` is enabled.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1471},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":194045,"byte_end":194054,"line_start":56,"line_end":56,"column_start":10,"column_end":19},"name":"StateRole","qualname":"::raft::StateRole","value":"StateRole::{Follower, Candidate, Leader, PreCandidate}","parent":null,"children":[{"krate":0,"index":1472},{"krate":0,"index":1474},{"krate":0,"index":1476},{"krate":0,"index":1478}],"decl_id":null,"docs":" The role of the node.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":194457,"byte_end":194467,"line_start":74,"line_end":74,"column_start":11,"column_end":21},"name":"INVALID_ID","qualname":"::raft::INVALID_ID","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" A constant represents invalid id of raft.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":194541,"byte_end":194554,"line_start":76,"line_end":76,"column_start":11,"column_end":24},"name":"INVALID_INDEX","qualname":"::raft::INVALID_INDEX","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" A constant represents invalid index of raft log.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1488},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":194757,"byte_end":194766,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"SoftState","qualname":"::raft::SoftState","value":"SoftState { leader_id, raft_state }","parent":null,"children":[{"krate":0,"index":1489},{"krate":0,"index":1490}],"decl_id":null,"docs":" SoftState provides state that is useful for logging and debugging.\n The state is volatile and does not need to be persisted to the WAL.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1489},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":194822,"byte_end":194831,"line_start":83,"line_end":83,"column_start":9,"column_end":18},"name":"leader_id","qualname":"::raft::SoftState::leader_id","value":"u64","parent":{"krate":0,"index":1488},"children":[],"decl_id":null,"docs":" The potential leader of the cluster.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1490},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":194888,"byte_end":194898,"line_start":85,"line_end":85,"column_start":9,"column_end":19},"name":"raft_state","qualname":"::raft::SoftState::raft_state","value":"raft::StateRole","parent":{"krate":0,"index":1488},"children":[],"decl_id":null,"docs":" The soft role this node may take.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1499},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":195091,"byte_end":195095,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"Raft","qualname":"::raft::Raft","value":"Raft { term, vote, id, read_states, raft_log, max_inflight, max_msg_size, state, is_learner, votes, msgs, leader_id, lead_transferee, pending_conf_index, read_only, election_elapsed, check_quorum, pre_vote }","parent":null,"children":[{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1528},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527}],"decl_id":null,"docs":" A struct that represents the raft consensus itself. Stores details concerning the current\n and possible state the system can take.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1501},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":195153,"byte_end":195157,"line_start":93,"line_end":93,"column_start":9,"column_end":13},"name":"term","qualname":"::raft::Raft::term","value":"u64","parent":{"krate":0,"index":1499},"children":[],"decl_id":null,"docs":" The current election term.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1502},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":195217,"byte_end":195221,"line_start":96,"line_end":96,"column_start":9,"column_end":13},"name":"vote","qualname":"::raft::Raft::vote","value":"u64","parent":{"krate":0,"index":1499},"children":[],"decl_id":null,"docs":" Which peer this raft is voting for.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1503},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":195266,"byte_end":195268,"line_start":99,"line_end":99,"column_start":9,"column_end":11},"name":"id","qualname":"::raft::Raft::id","value":"u64","parent":{"krate":0,"index":1499},"children":[],"decl_id":null,"docs":" The ID of this node.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1504},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":195317,"byte_end":195328,"line_start":102,"line_end":102,"column_start":9,"column_end":20},"name":"read_states","qualname":"::raft::Raft::read_states","value":"std::vec::Vec<read_only::ReadState>","parent":{"krate":0,"index":1499},"children":[],"decl_id":null,"docs":" The current read states.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1505},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":195383,"byte_end":195391,"line_start":105,"line_end":105,"column_start":9,"column_end":17},"name":"raft_log","qualname":"::raft::Raft::raft_log","value":"raft_log::RaftLog<T>","parent":{"krate":0,"index":1499},"children":[],"decl_id":null,"docs":" The persistent log.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1506},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":195475,"byte_end":195487,"line_start":108,"line_end":108,"column_start":9,"column_end":21},"name":"max_inflight","qualname":"::raft::Raft::max_inflight","value":"usize","parent":{"krate":0,"index":1499},"children":[],"decl_id":null,"docs":" The maximum number of messages that can be inflight.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1507},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":195563,"byte_end":195575,"line_start":111,"line_end":111,"column_start":9,"column_end":21},"name":"max_msg_size","qualname":"::raft::Raft::max_msg_size","value":"u64","parent":{"krate":0,"index":1499},"children":[],"decl_id":null,"docs":" The maximum length (in bytes) of all the entries.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1509},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":195661,"byte_end":195666,"line_start":116,"line_end":116,"column_start":9,"column_end":14},"name":"state","qualname":"::raft::Raft::state","value":"raft::StateRole","parent":{"krate":0,"index":1499},"children":[],"decl_id":null,"docs":" The current role of this node.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1510},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":195881,"byte_end":195891,"line_start":122,"line_end":122,"column_start":9,"column_end":19},"name":"is_learner","qualname":"::raft::Raft::is_learner","value":"bool","parent":{"krate":0,"index":1499},"children":[],"decl_id":null,"docs":" Whether this is a learner node.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1511},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":196006,"byte_end":196011,"line_start":127,"line_end":127,"column_start":9,"column_end":14},"name":"votes","qualname":"::raft::Raft::votes","value":"hashbrown::HashMap<u64, bool>","parent":{"krate":0,"index":1499},"children":[],"decl_id":null,"docs":" The current votes for this node in an election.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1512},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":196072,"byte_end":196076,"line_start":130,"line_end":130,"column_start":9,"column_end":13},"name":"msgs","qualname":"::raft::Raft::msgs","value":"std::vec::Vec<eraftpb::Message>","parent":{"krate":0,"index":1499},"children":[],"decl_id":null,"docs":" The list of messages.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1513},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":196123,"byte_end":196132,"line_start":133,"line_end":133,"column_start":9,"column_end":18},"name":"leader_id","qualname":"::raft::Raft::leader_id","value":"u64","parent":{"krate":0,"index":1499},"children":[],"decl_id":null,"docs":" The leader id\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1514},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":196307,"byte_end":196322,"line_start":138,"line_end":138,"column_start":9,"column_end":24},"name":"lead_transferee","qualname":"::raft::Raft::lead_transferee","value":"std::option::Option<u64>","parent":{"krate":0,"index":1499},"children":[],"decl_id":null,"docs":" ID of the leader transfer target when its value is not None.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1515},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":197059,"byte_end":197077,"line_start":151,"line_end":151,"column_start":9,"column_end":27},"name":"pending_conf_index","qualname":"::raft::Raft::pending_conf_index","value":"u64","parent":{"krate":0,"index":1499},"children":[],"decl_id":null,"docs":" Only one conf change may be pending (in the log, but not yet\n applied) at a time. This is enforced via `pending_conf_index`, which\n is set to a value >= the log index of the latest pending\n configuration change (if any). Config changes are only allowed to\n be proposed if the leader's applied index is greater than this\n value.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1516},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":197963,"byte_end":197972,"line_start":170,"line_end":170,"column_start":9,"column_end":18},"name":"read_only","qualname":"::raft::Raft::read_only","value":"read_only::ReadOnly","parent":{"krate":0,"index":1499},"children":[],"decl_id":null,"docs":" The queue of read-only requests.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1517},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":198218,"byte_end":198234,"line_start":175,"line_end":175,"column_start":9,"column_end":25},"name":"election_elapsed","qualname":"::raft::Raft::election_elapsed","value":"usize","parent":{"krate":0,"index":1499},"children":[],"decl_id":null,"docs":" Ticks since it reached last electionTimeout when it is leader or candidate.\n Number of ticks since it reached last electionTimeout or received a\n valid message from current leader when it is a follower.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1519},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":198427,"byte_end":198439,"line_start":182,"line_end":182,"column_start":9,"column_end":21},"name":"check_quorum","qualname":"::raft::Raft::check_quorum","value":"bool","parent":{"krate":0,"index":1499},"children":[],"decl_id":null,"docs":" Whether to check the quorum\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1520},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":198689,"byte_end":198697,"line_start":189,"line_end":189,"column_start":9,"column_end":17},"name":"pre_vote","qualname":"::raft::Raft::pre_vote","value":"bool","parent":{"krate":0,"index":1499},"children":[],"decl_id":null,"docs":" Enable the prevote algorithm.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":199542,"byte_end":199560,"line_start":222,"line_end":222,"column_start":8,"column_end":26},"name":"vote_resp_msg_type","qualname":"::raft::vote_resp_msg_type","value":"fn (t: MessageType) -> MessageType","parent":null,"children":[],"decl_id":null,"docs":" Maps vote and pre_vote message types to their correspond responses.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":199951,"byte_end":199954,"line_start":233,"line_end":233,"column_start":12,"column_end":15},"name":"new","qualname":"<Raft<T>>::new","value":"fn (c: &Config, store: T) -> Result<Raft<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new raft for use on the node.\n","sig":null,"attributes":[{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":199906,"byte_end":199939,"line_start":232,"line_end":232,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":204061,"byte_end":204070,"line_start":336,"line_end":336,"column_start":12,"column_end":21},"name":"get_store","qualname":"<Raft<T>>::get_store","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Grabs an immutable reference to the store.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":204040,"byte_end":204049,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":204200,"byte_end":204209,"line_start":342,"line_end":342,"column_start":12,"column_end":21},"name":"mut_store","qualname":"<Raft<T>>::mut_store","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Grabs a mutable reference to the store.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":204179,"byte_end":204188,"line_start":341,"line_end":341,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":204341,"byte_end":204349,"line_start":348,"line_end":348,"column_start":12,"column_end":20},"name":"get_snap","qualname":"<Raft<T>>::get_snap","value":"fn (&self) -> Option<&Snapshot>","parent":null,"children":[],"decl_id":null,"docs":" Grabs a reference to the snapshot\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":204320,"byte_end":204329,"line_start":347,"line_end":347,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":204525,"byte_end":204543,"line_start":354,"line_end":354,"column_start":12,"column_end":30},"name":"pending_read_count","qualname":"<Raft<T>>::pending_read_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of pending read-only messages.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":204504,"byte_end":204513,"line_start":353,"line_end":353,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":204682,"byte_end":204698,"line_start":360,"line_end":360,"column_start":12,"column_end":28},"name":"ready_read_count","qualname":"<Raft<T>>::ready_read_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns how many read states exist.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":204661,"byte_end":204670,"line_start":359,"line_end":359,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":204841,"byte_end":204851,"line_start":365,"line_end":365,"column_start":12,"column_end":22},"name":"soft_state","qualname":"<Raft<T>>::soft_state","value":"fn (&self) -> SoftState","parent":null,"children":[],"decl_id":null,"docs":" Returns a value representing the softstate at the time of calling.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":205072,"byte_end":205082,"line_start":373,"line_end":373,"column_start":12,"column_end":22},"name":"hard_state","qualname":"<Raft<T>>::hard_state","value":"fn (&self) -> HardState","parent":null,"children":[],"decl_id":null,"docs":" Returns a value representing the hardstate at the time of calling.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":205339,"byte_end":205347,"line_start":382,"line_end":382,"column_start":12,"column_end":20},"name":"in_lease","qualname":"<Raft<T>>::in_lease","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the current raft is in lease.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":205496,"byte_end":205527,"line_start":388,"line_end":388,"column_start":12,"column_end":43},"name":"set_randomized_election_timeout","qualname":"<Raft<T>>::set_randomized_election_timeout","value":"fn (&mut self, t: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" For testing leader lease\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":205747,"byte_end":205767,"line_start":394,"line_end":394,"column_start":12,"column_end":32},"name":"get_election_timeout","qualname":"<Raft<T>>::get_election_timeout","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Fetch the length of the election timeout.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":205884,"byte_end":205905,"line_start":399,"line_end":399,"column_start":12,"column_end":33},"name":"get_heartbeat_timeout","qualname":"<Raft<T>>::get_heartbeat_timeout","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Fetch the length of the heartbeat timeout\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":206037,"byte_end":206058,"line_start":404,"line_end":404,"column_start":12,"column_end":33},"name":"get_heartbeat_elapsed","qualname":"<Raft<T>>::get_heartbeat_elapsed","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Fetch the number of ticks elapsed since last heartbeat.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":206196,"byte_end":206227,"line_start":409,"line_end":409,"column_start":12,"column_end":43},"name":"get_randomized_election_timeout","qualname":"<Raft<T>>::get_randomized_election_timeout","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the length of the current randomized election timeout.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":206388,"byte_end":206405,"line_start":415,"line_end":415,"column_start":12,"column_end":29},"name":"skip_bcast_commit","qualname":"<Raft<T>>::skip_bcast_commit","value":"fn (&mut self, skip: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set whether skip broadcast empty commit messages at runtime.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":206367,"byte_end":206376,"line_start":414,"line_end":414,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":207336,"byte_end":207362,"line_start":439,"line_end":439,"column_start":12,"column_end":38},"name":"began_membership_change_at","qualname":"<Raft<T>>::began_membership_change_at","value":"fn (&self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Get the index which the pending membership change started at.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":207315,"byte_end":207324,"line_start":438,"line_end":438,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":212419,"byte_end":212430,"line_start":574,"line_end":574,"column_start":12,"column_end":23},"name":"send_append","qualname":"<Raft<T>>::send_append","value":"fn (&mut self, to: u64, pr: &mut Progress) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sends RPC, with entries to the given peer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":214339,"byte_end":214351,"line_start":626,"line_end":626,"column_start":12,"column_end":24},"name":"bcast_append","qualname":"<Raft<T>>::bcast_append","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sends RPC, with entries to all peers that are not up-to-date\n according to the progress recorded in r.prs().\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":214664,"byte_end":214679,"line_start":636,"line_end":636,"column_start":12,"column_end":27},"name":"bcast_heartbeat","qualname":"<Raft<T>>::bcast_heartbeat","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sends RPC, without entries to all the peers.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":215366,"byte_end":215378,"line_start":653,"line_end":653,"column_start":12,"column_end":24},"name":"maybe_commit","qualname":"<Raft<T>>::maybe_commit","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance the commit index. Returns true if the commit index\n changed (in which case the caller should call `r.bcast_append`).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":215771,"byte_end":215783,"line_start":665,"line_end":665,"column_start":12,"column_end":24},"name":"commit_apply","qualname":"<Raft<T>>::commit_apply","value":"fn (&mut self, applied: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Commit that the Raft peer has applied up to the given index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":217048,"byte_end":217053,"line_start":698,"line_end":698,"column_start":12,"column_end":17},"name":"reset","qualname":"<Raft<T>>::reset","value":"fn (&mut self, term: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resets the current node to a given term.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":217918,"byte_end":217930,"line_start":727,"line_end":727,"column_start":12,"column_end":24},"name":"append_entry","qualname":"<Raft<T>>::append_entry","value":"fn (&mut self, es: &mut [Entry]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends a slice of entries to the log. The entries are updated to match\n the current index and term.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":218571,"byte_end":218575,"line_start":744,"line_end":744,"column_start":12,"column_end":16},"name":"tick","qualname":"<Raft<T>>::tick","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true to indicate that there will probably be some readiness need to be handled.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":219078,"byte_end":219091,"line_start":757,"line_end":757,"column_start":12,"column_end":25},"name":"tick_election","qualname":"<Raft<T>>::tick_election","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Run by followers and candidates after self.election_timeout.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":220636,"byte_end":220651,"line_start":802,"line_end":802,"column_start":12,"column_end":27},"name":"become_follower","qualname":"<Raft<T>>::become_follower","value":"fn (&mut self, term: u64, leader_id: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Converts this node to a follower.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":221061,"byte_end":221077,"line_start":815,"line_end":815,"column_start":12,"column_end":28},"name":"become_candidate","qualname":"<Raft<T>>::become_candidate","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Converts this node to a candidate","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":221595,"byte_end":221615,"line_start":834,"line_end":834,"column_start":12,"column_end":32},"name":"become_pre_candidate","qualname":"<Raft<T>>::become_pre_candidate","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Converts this node to a pre-candidate","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":222495,"byte_end":222508,"line_start":857,"line_end":857,"column_start":12,"column_end":25},"name":"become_leader","qualname":"<Raft<T>>::become_leader","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Makes this raft the leader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":224986,"byte_end":224994,"line_start":919,"line_end":919,"column_start":12,"column_end":20},"name":"campaign","qualname":"<Raft<T>>::campaign","value":"fn (&mut self, campaign_type: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Campaign to attempt to become a leader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":227346,"byte_end":227350,"line_start":980,"line_end":980,"column_start":12,"column_end":16},"name":"step","qualname":"<Raft<T>>::step","value":"fn (&mut self, m: Message) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Steps the raft along via a message. This should be called everytime your raft receives a\n message from a peer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":239317,"byte_end":239340,"line_start":1215,"line_end":1215,"column_start":12,"column_end":35},"name":"begin_membership_change","qualname":"<Raft<T>>::begin_membership_change","value":"fn (&mut self, conf_change: &ConfChange) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Apply a `BeginMembershipChange` variant `ConfChange`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":239288,"byte_end":239305,"line_start":1214,"line_end":1214,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":241096,"byte_end":241122,"line_start":1259,"line_end":1259,"column_start":12,"column_end":38},"name":"finalize_membership_change","qualname":"<Raft<T>>::finalize_membership_change","value":"fn (&mut self, conf_change: &ConfChange) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Apply a `FinalizeMembershipChange` variant `ConfChange`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":241067,"byte_end":241084,"line_start":1258,"line_end":1258,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":265745,"byte_end":265766,"line_start":1900,"line_end":1900,"column_start":12,"column_end":33},"name":"handle_append_entries","qualname":"<Raft<T>>::handle_append_entries","value":"fn (&mut self, m: &Message) -> ()","parent":null,"children":[],"decl_id":null,"docs":" For a given message, append the entries to the log.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":267411,"byte_end":267427,"line_start":1944,"line_end":1944,"column_start":12,"column_end":28},"name":"handle_heartbeat","qualname":"<Raft<T>>::handle_heartbeat","value":"fn (&mut self, mut m: Message) -> ()","parent":null,"children":[],"decl_id":null,"docs":" For a message, commit and send out heartbeat.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":271467,"byte_end":271474,"line_start":2044,"line_end":2044,"column_start":12,"column_end":19},"name":"restore","qualname":"<Raft<T>>::restore","value":"fn (&mut self, snap: Snapshot) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Recovers the state machine from a snapshot. It restores the log and the\n configuration of state machine.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":271887,"byte_end":271903,"line_start":2060,"line_end":2060,"column_start":12,"column_end":28},"name":"has_pending_conf","qualname":"<Raft<T>>::has_pending_conf","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if there is any pending confchange.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":271866,"byte_end":271875,"line_start":2059,"line_end":2059,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":272092,"byte_end":272111,"line_start":2065,"line_end":2065,"column_start":12,"column_end":31},"name":"should_bcast_commit","qualname":"<Raft<T>>::should_bcast_commit","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Specifies if the commit should be broadcast.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":272332,"byte_end":272342,"line_start":2071,"line_end":2071,"column_start":12,"column_end":22},"name":"promotable","qualname":"<Raft<T>>::promotable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether state machine can be promoted to leader,\n which is true when its own id is in progress list.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":273342,"byte_end":273367,"line_start":2103,"line_end":2103,"column_start":12,"column_end":37},"name":"propose_membership_change","qualname":"<Raft<T>>::propose_membership_change","value":"fn (&mut self, config: impl Into<Configuration>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Propose that the peer group change its active set to a new set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":276223,"byte_end":276231,"line_start":2176,"line_end":2176,"column_start":12,"column_end":20},"name":"add_node","qualname":"<Raft<T>>::add_node","value":"fn (&mut self, id: u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Adds a new node to the cluster.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":276547,"byte_end":276558,"line_start":2187,"line_end":2187,"column_start":12,"column_end":23},"name":"add_learner","qualname":"<Raft<T>>::add_learner","value":"fn (&mut self, id: u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Adds a learner node.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":276852,"byte_end":276863,"line_start":2197,"line_end":2197,"column_start":12,"column_end":23},"name":"remove_node","qualname":"<Raft<T>>::remove_node","value":"fn (&mut self, id: u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes a node from the raft.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":277647,"byte_end":277659,"line_start":2219,"line_end":2219,"column_start":12,"column_end":24},"name":"set_progress","qualname":"<Raft<T>>::set_progress","value":"fn (&mut self, id: u64, matched: u64, next_idx: u64, is_learner: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates the progress of the learner or voter.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":278149,"byte_end":278157,"line_start":2232,"line_end":2232,"column_start":12,"column_end":20},"name":"take_prs","qualname":"<Raft<T>>::take_prs","value":"fn (&mut self) -> ProgressSet","parent":null,"children":[],"decl_id":null,"docs":" Takes the progress set (destructively turns to `None`).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":278268,"byte_end":278275,"line_start":2237,"line_end":2237,"column_start":12,"column_end":19},"name":"set_prs","qualname":"<Raft<T>>::set_prs","value":"fn (&mut self, prs: ProgressSet) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the progress set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":278414,"byte_end":278417,"line_start":2242,"line_end":2242,"column_start":12,"column_end":15},"name":"prs","qualname":"<Raft<T>>::prs","value":"fn (&self) -> &ProgressSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a read-only reference to the progress set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":278553,"byte_end":278560,"line_start":2247,"line_end":2247,"column_start":12,"column_end":19},"name":"mut_prs","qualname":"<Raft<T>>::mut_prs","value":"fn (&mut self) -> &mut ProgressSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the progress set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":278764,"byte_end":278774,"line_start":2253,"line_end":2253,"column_start":12,"column_end":22},"name":"load_state","qualname":"<Raft<T>>::load_state","value":"fn (&mut self, hs: &HardState) -> ()","parent":null,"children":[],"decl_id":null,"docs":" For a given hardstate, load the state into self.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":279498,"byte_end":279519,"line_start":2272,"line_end":2272,"column_start":12,"column_end":33},"name":"pass_election_timeout","qualname":"<Raft<T>>::pass_election_timeout","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" `pass_election_timeout` returns true iff `election_elapsed` is greater\n than or equal to the randomized election timeout in\n [`election_timeout`, 2 * `election_timeout` - 1].\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":279674,"byte_end":279707,"line_start":2277,"line_end":2277,"column_start":12,"column_end":45},"name":"reset_randomized_election_timeout","qualname":"<Raft<T>>::reset_randomized_election_timeout","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Regenerates and stores the election timeout.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":280585,"byte_end":280601,"line_start":2299,"line_end":2299,"column_start":12,"column_end":28},"name":"send_timeout_now","qualname":"<Raft<T>>::send_timeout_now","value":"fn (&mut self, to: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Issues a message to timeout immediately.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":280774,"byte_end":280795,"line_start":2305,"line_end":2305,"column_start":12,"column_end":33},"name":"abort_leader_transfer","qualname":"<Raft<T>>::abort_leader_transfer","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stops the tranfer of a leader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":280942,"byte_end":280965,"line_start":2310,"line_end":2310,"column_start":12,"column_end":35},"name":"is_in_membership_change","qualname":"<Raft<T>>::is_in_membership_change","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine if the Raft is in a transition state under Joint Consensus.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1535},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":282381,"byte_end":282388,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"RaftLog","qualname":"::raft_log::RaftLog","value":"RaftLog { store, unstable, committed, applied, tag }","parent":null,"children":[{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541}],"decl_id":null,"docs":" Raft log implementation\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1537},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":282472,"byte_end":282477,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"name":"store","qualname":"::raft_log::RaftLog::store","value":"T","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" Contains all stable entries since the last snapshot.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1538},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":282584,"byte_end":282592,"line_start":47,"line_end":47,"column_start":9,"column_end":17},"name":"unstable","qualname":"::raft_log::RaftLog::unstable","value":"log_unstable::Unstable","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" Contains all unstable entries and snapshot.\n they will be saved into storage.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1539},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":282714,"byte_end":282723,"line_start":51,"line_end":51,"column_start":9,"column_end":18},"name":"committed","qualname":"::raft_log::RaftLog::committed","value":"u64","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" The highest log position that is known to be in stable storage\n on a quorum of nodes.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1540},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":282900,"byte_end":282907,"line_start":57,"line_end":57,"column_start":9,"column_end":16},"name":"applied","qualname":"::raft_log::RaftLog::applied","value":"u64","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" The highest log position that the application has been instructed\n to apply to its state machine.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1541},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":282985,"byte_end":282988,"line_start":60,"line_end":60,"column_start":9,"column_end":12},"name":"tag","qualname":"::raft_log::RaftLog::tag","value":"std::string::String","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":" A tag associated with this raft for logging purposes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":283446,"byte_end":283449,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"new","qualname":"<RaftLog<T>>::new","value":"fn (storage: T, tag: String) -> RaftLog<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new raft log with a given storage and tag.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":284081,"byte_end":284090,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"name":"last_term","qualname":"<RaftLog<T>>::last_term","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Grabs the term from the last entry.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":284425,"byte_end":284434,"line_start":111,"line_end":111,"column_start":12,"column_end":21},"name":"get_store","qualname":"<RaftLog<T>>::get_store","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Grab a read-only reference to the underlying storage.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":284404,"byte_end":284413,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":284562,"byte_end":284571,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"mut_store","qualname":"<RaftLog<T>>::mut_store","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Grab a mutable reference to the underlying storage.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":284541,"byte_end":284550,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":284699,"byte_end":284703,"line_start":122,"line_end":122,"column_start":12,"column_end":16},"name":"term","qualname":"<RaftLog<T>>::term","value":"fn (&self, idx: u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" For a given index, finds the term associated with it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":285556,"byte_end":285567,"line_start":147,"line_end":147,"column_start":12,"column_end":23},"name":"first_index","qualname":"<RaftLog<T>>::first_index","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns th first index in the store that is available via entries","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":285910,"byte_end":285920,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"last_index","qualname":"<RaftLog<T>>::last_index","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the last index in the store that is available via entries.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":286844,"byte_end":286857,"line_start":182,"line_end":182,"column_start":12,"column_end":25},"name":"find_conflict","qualname":"<RaftLog<T>>::find_conflict","value":"fn (&self, ents: &[Entry]) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Finds the index of the conflict.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":287529,"byte_end":287539,"line_start":201,"line_end":201,"column_start":12,"column_end":22},"name":"match_term","qualname":"<RaftLog<T>>::match_term","value":"fn (&self, idx: u64, term: u64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Answers the question: Does this index belong to this term?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":287855,"byte_end":287867,"line_start":211,"line_end":211,"column_start":12,"column_end":24},"name":"maybe_append","qualname":"<RaftLog<T>>::maybe_append","value":"fn (&mut self, idx: u64, term: u64, committed: u64, ents: &[Entry]) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns None if the entries cannot be appended. Otherwise,\n it returns Some(last index of new entries).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":288847,"byte_end":288856,"line_start":242,"line_end":242,"column_start":12,"column_end":21},"name":"commit_to","qualname":"<RaftLog<T>>::commit_to","value":"fn (&mut self, to_commit: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the last committed value to the passed in value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":289627,"byte_end":289637,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"applied_to","qualname":"<RaftLog<T>>::applied_to","value":"fn (&mut self, idx: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Advance the applied index to the passed in value.","sig":null,"attributes":[{"value":"deprecated =\n  \"Call raft::commit_apply(idx) instead. Joint Consensus requires an on-apply hook to\n    finalize a configuration change. This will become internal API in future versions.\"","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":289428,"byte_end":289615,"line_start":263,"line_end":264,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":290042,"byte_end":290053,"line_start":279,"line_end":279,"column_start":12,"column_end":23},"name":"get_applied","qualname":"<RaftLog<T>>::get_applied","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the last applied index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":290165,"byte_end":290174,"line_start":284,"line_end":284,"column_start":12,"column_end":21},"name":"stable_to","qualname":"<RaftLog<T>>::stable_to","value":"fn (&mut self, idx: u64, term: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Attempts to set the stable up to a given index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":290320,"byte_end":290334,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"stable_snap_to","qualname":"<RaftLog<T>>::stable_snap_to","value":"fn (&mut self, idx: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Snaps the unstable up to a current index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":290467,"byte_end":290479,"line_start":294,"line_end":294,"column_start":12,"column_end":24},"name":"get_unstable","qualname":"<RaftLog<T>>::get_unstable","value":"fn (&self) -> &Unstable","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the unstable log.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":290598,"byte_end":290604,"line_start":299,"line_end":299,"column_start":12,"column_end":18},"name":"append","qualname":"<RaftLog<T>>::append","value":"fn (&mut self, ents: &[Entry]) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Appends a set of entries to the unstable list.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":291234,"byte_end":291250,"line_start":321,"line_end":321,"column_start":12,"column_end":28},"name":"unstable_entries","qualname":"<RaftLog<T>>::unstable_entries","value":"fn (&self) -> Option<&[Entry]>","parent":null,"children":[],"decl_id":null,"docs":" Returns slice of entries that are not committed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":291503,"byte_end":291510,"line_start":329,"line_end":329,"column_start":12,"column_end":19},"name":"entries","qualname":"<RaftLog<T>>::entries","value":"fn (&self, idx: u64, max_size: u64) -> Result<Vec<Entry>>","parent":null,"children":[],"decl_id":null,"docs":" Returns entries starting from a particular index and not exceeding a bytesize.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":291769,"byte_end":291780,"line_start":338,"line_end":338,"column_start":12,"column_end":23},"name":"all_entries","qualname":"<RaftLog<T>>::all_entries","value":"fn (&self) -> Vec<Entry>","parent":null,"children":[],"decl_id":null,"docs":" Returns all the entries.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":292698,"byte_end":292711,"line_start":358,"line_end":358,"column_start":12,"column_end":25},"name":"is_up_to_date","qualname":"<RaftLog<T>>::is_up_to_date","value":"fn (&self, last_index: u64, term: u64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines if the given (lastIndex,term) log is more up-to-date\n by comparing the index and term of the last entry in the existing logs.\n If the logs have last entry with different terms, then the log with the\n later term is more up-to-date. If the logs end with the same term, then\n whichever log has the larger last_index is more up-to-date. If the logs are\n the same, the given log is up-to-date.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":292930,"byte_end":292948,"line_start":363,"line_end":363,"column_start":12,"column_end":30},"name":"next_entries_since","qualname":"<RaftLog<T>>::next_entries_since","value":"fn (&self, since_idx: u64) -> Option<Vec<Entry>>","parent":null,"children":[],"decl_id":null,"docs":" Returns any entries since the a particular index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":293543,"byte_end":293555,"line_start":378,"line_end":378,"column_start":12,"column_end":24},"name":"next_entries","qualname":"<RaftLog<T>>::next_entries","value":"fn (&self) -> Option<Vec<Entry>>","parent":null,"children":[],"decl_id":null,"docs":" Returns all the available entries for execution.\n If applied is smaller than the index of snapshot, it returns all committed\n entries after the index of snapshot.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":293719,"byte_end":293741,"line_start":383,"line_end":383,"column_start":12,"column_end":34},"name":"has_next_entries_since","qualname":"<RaftLog<T>>::has_next_entries_since","value":"fn (&self, since_idx: u64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether there are entries since a particular index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":293942,"byte_end":293958,"line_start":389,"line_end":389,"column_start":12,"column_end":28},"name":"has_next_entries","qualname":"<RaftLog<T>>::has_next_entries","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether there are new entries.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":294081,"byte_end":294089,"line_start":394,"line_end":394,"column_start":12,"column_end":20},"name":"snapshot","qualname":"<RaftLog<T>>::snapshot","value":"fn (&self) -> Result<Snapshot>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current snapshot\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":295033,"byte_end":295045,"line_start":425,"line_end":425,"column_start":12,"column_end":24},"name":"maybe_commit","qualname":"<RaftLog<T>>::maybe_commit","value":"fn (&mut self, max_index: u64, term: u64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Attempts to commit the index and term and returns whether it did.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":295516,"byte_end":295521,"line_start":437,"line_end":437,"column_start":12,"column_end":17},"name":"slice","qualname":"<RaftLog<T>>::slice","value":"fn (&self, low: u64, high: u64, max_size: u64) -> Result<Vec<Entry>>","parent":null,"children":[],"decl_id":null,"docs":" Grabs a slice of entries from the raft. Unlike a rust slice pointer, these are\n returned by value. The result is truncated to the max_size in bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":297133,"byte_end":297140,"line_start":481,"line_end":481,"column_start":12,"column_end":19},"name":"restore","qualname":"<RaftLog<T>>::restore","value":"fn (&mut self, snapshot: Snapshot) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Restores the current log from a snapshot.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"raw_node","qualname":"::raw_node","value":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":840},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":1545},{"krate":0,"index":1550},{"krate":0,"index":1548},{"krate":0,"index":1552},{"krate":0,"index":1563},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1559},{"krate":0,"index":1557},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":1565},{"krate":0,"index":1580},{"krate":0,"index":1578},{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":857},{"krate":0,"index":866},{"krate":0,"index":871}],"decl_id":null,"docs":" The raw node of the raft module.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1545},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":330874,"byte_end":330878,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"Peer","qualname":"::raw_node::Peer","value":"Peer { id, context }","parent":null,"children":[{"krate":0,"index":1546},{"krate":0,"index":1547}],"decl_id":null,"docs":" Represents a Peer node in the cluster.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1546},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":330917,"byte_end":330919,"line_start":52,"line_end":52,"column_start":9,"column_end":11},"name":"id","qualname":"::raw_node::Peer::id","value":"u64","parent":{"krate":0,"index":1545},"children":[],"decl_id":null,"docs":" The ID of the peer.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1547},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":331064,"byte_end":331071,"line_start":55,"line_end":55,"column_start":9,"column_end":16},"name":"context","qualname":"::raw_node::Peer::context","value":"std::option::Option<std::vec::Vec<u8>>","parent":{"krate":0,"index":1545},"children":[],"decl_id":null,"docs":" If there is context associated with the peer (like connection information), it can be\n serialized and stored here.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1553},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":331260,"byte_end":331266,"line_start":62,"line_end":62,"column_start":5,"column_end":11},"name":"Finish","qualname":"::raw_node::SnapshotStatus::Finish","value":"SnapshotStatus::Finish","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Represents that the snapshot is finished being created.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1555},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":331341,"byte_end":331348,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"Failure","qualname":"::raw_node::SnapshotStatus::Failure","value":"SnapshotStatus::Failure","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Indicates that the snapshot failed to build or is not ready.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1552},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":331175,"byte_end":331189,"line_start":60,"line_end":60,"column_start":10,"column_end":24},"name":"SnapshotStatus","qualname":"::raw_node::SnapshotStatus","value":"SnapshotStatus::{Finish, Failure}","parent":null,"children":[{"krate":0,"index":1553},{"krate":0,"index":1555}],"decl_id":null,"docs":" The status of the snapshot.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":331997,"byte_end":332010,"line_start":90,"line_end":90,"column_start":8,"column_end":21},"name":"is_empty_snap","qualname":"::raw_node::is_empty_snap","value":"fn (s: &Snapshot) -> bool","parent":null,"children":[],"decl_id":null,"docs":" For a given snapshot, determine if it's empty or not.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1565},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":332301,"byte_end":332306,"line_start":98,"line_end":98,"column_start":12,"column_end":17},"name":"Ready","qualname":"::raw_node::Ready","value":"Ready { committed_entries, messages }","parent":null,"children":[{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573}],"decl_id":null,"docs":" Ready encapsulates the entries and messages that are ready to read,\n be saved to stable storage, committed or sent to other peers.\n All fields in Ready are read-only.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1571},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":332613,"byte_end":332630,"line_start":112,"line_end":112,"column_start":9,"column_end":26},"name":"committed_entries","qualname":"::raw_node::Ready::committed_entries","value":"std::option::Option<std::vec::Vec<eraftpb::Entry>>","parent":{"krate":0,"index":1565},"children":[],"decl_id":null,"docs":" CommittedEntries specifies entries to be committed to a\n store/state-machine. These have previously been committed to stable\n store.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1572},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":332940,"byte_end":332948,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"messages","qualname":"::raw_node::Ready::messages","value":"std::vec::Vec<eraftpb::Message>","parent":{"krate":0,"index":1565},"children":[],"decl_id":null,"docs":" Messages specifies outbound messages to be sent AFTER Entries are\n committed to stable storage.\n If it contains a MsgSnap message, the application MUST report back to raft\n when the snapshot has been received or has failed by calling ReportSnapshot.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":334481,"byte_end":334483,"line_start":168,"line_end":168,"column_start":12,"column_end":14},"name":"ss","qualname":"<Ready>::ss","value":"fn (&self) -> Option<&SoftState>","parent":null,"children":[],"decl_id":null,"docs":" The current volatile state of a Node.\n SoftState will be nil if there is no update.\n It is not required to consume or store SoftState.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":334460,"byte_end":334469,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":334742,"byte_end":334744,"line_start":176,"line_end":176,"column_start":12,"column_end":14},"name":"hs","qualname":"<Ready>::hs","value":"fn (&self) -> Option<&HardState>","parent":null,"children":[],"decl_id":null,"docs":" The current state of a Node to be saved to stable storage BEFORE\n Messages are sent.\n HardState will be equal to empty state if there is no update.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":334721,"byte_end":334730,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":335142,"byte_end":335153,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"read_states","qualname":"<Ready>::read_states","value":"fn (&self) -> &[ReadState]","parent":null,"children":[],"decl_id":null,"docs":" States can be used for node to serve linearizable read requests locally\n when its applied index is greater than the index in ReadState.\n Note that the read_state will be returned when raft receives MsgReadIndex.\n The returned is only valid for the request that requested to read.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":335121,"byte_end":335130,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":335335,"byte_end":335342,"line_start":192,"line_end":192,"column_start":12,"column_end":19},"name":"entries","qualname":"<Ready>::entries","value":"fn (&self) -> &[Entry]","parent":null,"children":[],"decl_id":null,"docs":" Entries specifies entries to be saved to stable storage BEFORE\n Messages are sent.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":335314,"byte_end":335323,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":335489,"byte_end":335497,"line_start":198,"line_end":198,"column_start":12,"column_end":20},"name":"snapshot","qualname":"<Ready>::snapshot","value":"fn (&self) -> &Snapshot","parent":null,"children":[],"decl_id":null,"docs":" Snapshot specifies the snapshot to be saved to stable storage.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":335468,"byte_end":335477,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":335726,"byte_end":335735,"line_start":205,"line_end":205,"column_start":12,"column_end":21},"name":"must_sync","qualname":"<Ready>::must_sync","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" MustSync indicates whether the HardState and Entries must be synchronously\n written to disk or if an asynchronous write is permissible.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":335705,"byte_end":335714,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":866},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":335938,"byte_end":335945,"line_start":213,"line_end":213,"column_start":12,"column_end":19},"name":"RawNode","qualname":"::raw_node::RawNode","value":"RawNode { raft }","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870}],"decl_id":null,"docs":" RawNode is a thread-unsafe Node.\n The methods of this struct correspond to the methods of Node and are described\n more fully there.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":336001,"byte_end":336005,"line_start":215,"line_end":215,"column_start":9,"column_end":13},"name":"raft","qualname":"::raw_node::RawNode::raft","value":"raft::Raft<T>","parent":{"krate":0,"index":866},"children":[],"decl_id":null,"docs":" The internal raft state.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":336272,"byte_end":336275,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"new","qualname":"<RawNode<T>>::new","value":"fn (config: &Config, store: T, mut peers: Vec<Peer>) -> Result<RawNode<T>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new RawNode given some [`Config`](../struct.Config.html) and a list of [`Peer`](raw_node/struct.Peer.html)s.\n","sig":null,"attributes":[{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":336101,"byte_end":336134,"line_start":221,"line_end":221,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":338921,"byte_end":338925,"line_start":297,"line_end":297,"column_start":12,"column_end":16},"name":"tick","qualname":"<RawNode<T>>::tick","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tick advances the internal logical clock by a single tick.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":339061,"byte_end":339069,"line_start":302,"line_end":302,"column_start":12,"column_end":20},"name":"campaign","qualname":"<RawNode<T>>::campaign","value":"fn (&mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Campaign causes this RawNode to transition to candidate state.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":339281,"byte_end":339288,"line_start":309,"line_end":309,"column_start":12,"column_end":19},"name":"propose","qualname":"<RawNode<T>>::propose","value":"fn (&mut self, context: Vec<u8>, data: Vec<u8>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Propose proposes data be appended to the raft log.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":339794,"byte_end":339813,"line_start":322,"line_end":322,"column_start":12,"column_end":31},"name":"propose_conf_change","qualname":"<RawNode<T>>::propose_conf_change","value":"fn (&mut self, context: Vec<u8>, cc: ConfChange) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" ProposeConfChange proposes a config change.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":340626,"byte_end":340643,"line_start":342,"line_end":342,"column_start":12,"column_end":29},"name":"apply_conf_change","qualname":"<RawNode<T>>::apply_conf_change","value":"fn (&mut self, cc: &ConfChange) -> Result<ConfState>","parent":null,"children":[],"decl_id":null,"docs":" Takes the conf change and applies it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":341740,"byte_end":341744,"line_start":366,"line_end":366,"column_start":12,"column_end":16},"name":"step","qualname":"<RawNode<T>>::step","value":"fn (&mut self, m: Message) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Step advances the state machine using the given message.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":342215,"byte_end":342226,"line_start":378,"line_end":378,"column_start":12,"column_end":23},"name":"ready_since","qualname":"<RawNode<T>>::ready_since","value":"fn (&mut self, applied_idx: u64) -> Ready","parent":null,"children":[],"decl_id":null,"docs":" Given an index, creates a new Ready value from that index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":342499,"byte_end":342504,"line_start":388,"line_end":388,"column_start":12,"column_end":17},"name":"ready","qualname":"<RawNode<T>>::ready","value":"fn (&mut self) -> Ready","parent":null,"children":[],"decl_id":null,"docs":" Ready returns the current point-in-time state of this RawNode.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":342696,"byte_end":342711,"line_start":393,"line_end":393,"column_start":12,"column_end":27},"name":"has_ready_since","qualname":"<RawNode<T>>::has_ready_since","value":"fn (&self, applied_idx: Option<u64>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Given an index, can determine if there is a ready state from that time.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":343763,"byte_end":343772,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"name":"has_ready","qualname":"<RawNode<T>>::has_ready","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" HasReady called when RawNode user need to check if any Ready pending.\n Checking logic in this method should be consistent with Ready.containsUpdates().\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":343742,"byte_end":343751,"line_start":423,"line_end":423,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":343912,"byte_end":343920,"line_start":430,"line_end":430,"column_start":12,"column_end":20},"name":"get_snap","qualname":"<RawNode<T>>::get_snap","value":"fn (&self) -> Option<&Snapshot>","parent":null,"children":[],"decl_id":null,"docs":" Grabs the snapshot from the raft if available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":343891,"byte_end":343900,"line_start":429,"line_end":429,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":344122,"byte_end":344129,"line_start":436,"line_end":436,"column_start":12,"column_end":19},"name":"advance","qualname":"<RawNode<T>>::advance","value":"fn (&mut self, rd: Ready) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Advance notifies the RawNode that the application has applied and saved progress in the\n last Ready results.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":345068,"byte_end":345082,"line_start":455,"line_end":455,"column_start":12,"column_end":26},"name":"advance_append","qualname":"<RawNode<T>>::advance_append","value":"fn (&mut self, rd: Ready) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends and commits the ready value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":345047,"byte_end":345056,"line_start":454,"line_end":454,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":345213,"byte_end":345226,"line_start":461,"line_end":461,"column_start":12,"column_end":25},"name":"advance_apply","qualname":"<RawNode<T>>::advance_apply","value":"fn (&mut self, applied: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Advance apply to the passed index.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":345192,"byte_end":345201,"line_start":460,"line_end":460,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":345384,"byte_end":345390,"line_start":467,"line_end":467,"column_start":12,"column_end":18},"name":"status","qualname":"<RawNode<T>>::status","value":"fn (&self) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Status returns the current status of the given group.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":345363,"byte_end":345372,"line_start":466,"line_end":466,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":345545,"byte_end":345563,"line_start":472,"line_end":472,"column_start":12,"column_end":30},"name":"report_unreachable","qualname":"<RawNode<T>>::report_unreachable","value":"fn (&mut self, id: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" ReportUnreachable reports the given node is not reachable for the last send.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":345862,"byte_end":345877,"line_start":481,"line_end":481,"column_start":12,"column_end":27},"name":"report_snapshot","qualname":"<RawNode<T>>::report_snapshot","value":"fn (&mut self, id: u64, status: SnapshotStatus) -> ()","parent":null,"children":[],"decl_id":null,"docs":" ReportSnapshot reports the status of the sent snapshot.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":346292,"byte_end":346307,"line_start":492,"line_end":492,"column_start":12,"column_end":27},"name":"transfer_leader","qualname":"<RawNode<T>>::transfer_leader","value":"fn (&mut self, transferee: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" TransferLeader tries to transfer leadership to the given transferee.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":346841,"byte_end":346851,"line_start":503,"line_end":503,"column_start":12,"column_end":22},"name":"read_index","qualname":"<RawNode<T>>::read_index","value":"fn (&mut self, rctx: Vec<u8>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" ReadIndex requests a read state. The read state will be set in ready.\n Read State has a read index. Once the application advances further than the read\n index, any linearizable read requests issued before the read request can be\n processed safely. The read state will have the same rctx attached.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":347204,"byte_end":347213,"line_start":514,"line_end":514,"column_start":12,"column_end":21},"name":"get_store","qualname":"<RawNode<T>>::get_store","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns the store as an immutable reference.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":347183,"byte_end":347192,"line_start":513,"line_end":513,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":347341,"byte_end":347350,"line_start":520,"line_end":520,"column_start":12,"column_end":21},"name":"mut_store","qualname":"<RawNode<T>>::mut_store","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns the store as a mutable reference.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":347320,"byte_end":347329,"line_start":519,"line_end":519,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":347505,"byte_end":347522,"line_start":526,"line_end":526,"column_start":12,"column_end":29},"name":"skip_bcast_commit","qualname":"<RawNode<T>>::skip_bcast_commit","value":"fn (&mut self, skip: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set whether skip broadcast empty commit messages at runtime.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":347484,"byte_end":347493,"line_start":525,"line_end":525,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1583},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":350376,"byte_end":350380,"line_start":39,"line_end":39,"column_start":5,"column_end":9},"name":"Safe","qualname":"::read_only::ReadOnlyOption::Safe","value":"ReadOnlyOption::Safe","parent":{"krate":0,"index":1582},"children":[],"decl_id":null,"docs":" Safe guarantees the linearizability of the read only request by\n communicating with the quorum. It is the default and suggested option.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1585},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":350723,"byte_end":350733,"line_start":45,"line_end":45,"column_start":5,"column_end":15},"name":"LeaseBased","qualname":"::read_only::ReadOnlyOption::LeaseBased","value":"ReadOnlyOption::LeaseBased","parent":{"krate":0,"index":1582},"children":[],"decl_id":null,"docs":" LeaseBased ensures linearizability of the read only request by\n relying on the leader lease. It can be affected by clock drift.\n If the clock drift is unbounded, leader might keep the lease longer than it\n should (clock can move backward/pause without any bound). ReadIndex is not safe\n in that case.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1582},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":350204,"byte_end":350218,"line_start":36,"line_end":36,"column_start":10,"column_end":24},"name":"ReadOnlyOption","qualname":"::read_only::ReadOnlyOption","value":"ReadOnlyOption::{Safe, LeaseBased}","parent":null,"children":[{"krate":0,"index":1583},{"krate":0,"index":1585}],"decl_id":null,"docs":" Determines the relative safety of and consistency of read only requests.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1595},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":351197,"byte_end":351206,"line_start":60,"line_end":60,"column_start":12,"column_end":21},"name":"ReadState","qualname":"::read_only::ReadState","value":"ReadState { index, request_ctx }","parent":null,"children":[{"krate":0,"index":1596},{"krate":0,"index":1597}],"decl_id":null,"docs":" ReadState provides state for read only query.\n It's caller's responsibility to send MsgReadIndex first before getting\n this state from ready. It's also caller's duty to differentiate if this\n state is what it requests through request_ctx, e.g. given a unique id as\n request_ctx.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1596},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":351254,"byte_end":351259,"line_start":62,"line_end":62,"column_start":9,"column_end":14},"name":"index","qualname":"::read_only::ReadState::index","value":"u64","parent":{"krate":0,"index":1595},"children":[],"decl_id":null,"docs":" The index of the read state.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1597},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":351334,"byte_end":351345,"line_start":64,"line_end":64,"column_start":9,"column_end":20},"name":"request_ctx","qualname":"::read_only::ReadState::request_ctx","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1595},"children":[],"decl_id":null,"docs":" A datagram consisting of context about the request.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1608},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":351403,"byte_end":351418,"line_start":68,"line_end":68,"column_start":12,"column_end":27},"name":"ReadIndexStatus","qualname":"::read_only::ReadIndexStatus","value":"ReadIndexStatus { req, index, acks }","parent":null,"children":[{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1609},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":351429,"byte_end":351432,"line_start":69,"line_end":69,"column_start":9,"column_end":12},"name":"req","qualname":"::read_only::ReadIndexStatus::req","value":"eraftpb::Message","parent":{"krate":0,"index":1608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1610},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":351451,"byte_end":351456,"line_start":70,"line_end":70,"column_start":9,"column_end":14},"name":"index","qualname":"::read_only::ReadIndexStatus::index","value":"u64","parent":{"krate":0,"index":1608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1611},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":351471,"byte_end":351475,"line_start":71,"line_end":71,"column_start":9,"column_end":13},"name":"acks","qualname":"::read_only::ReadIndexStatus::acks","value":"hashbrown::HashSet<u64>","parent":{"krate":0,"index":1608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1618},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":351538,"byte_end":351546,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"ReadOnly","qualname":"::read_only::ReadOnly","value":"ReadOnly { option, pending_read_index, read_index_queue }","parent":null,"children":[{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1621}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1619},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":351557,"byte_end":351563,"line_start":76,"line_end":76,"column_start":9,"column_end":15},"name":"option","qualname":"::read_only::ReadOnly::option","value":"read_only::ReadOnlyOption","parent":{"krate":0,"index":1618},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1620},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":351589,"byte_end":351607,"line_start":77,"line_end":77,"column_start":9,"column_end":27},"name":"pending_read_index","qualname":"::read_only::ReadOnly::pending_read_index","value":"hashbrown::HashMap<std::vec::Vec<u8>, read_only::ReadIndexStatus>","parent":{"krate":0,"index":1618},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1621},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":351652,"byte_end":351668,"line_start":78,"line_end":78,"column_start":9,"column_end":25},"name":"read_index_queue","qualname":"::read_only::ReadOnly::read_index_queue","value":"std::collections::VecDeque<std::vec::Vec<u8>>","parent":{"krate":0,"index":1618},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":351719,"byte_end":351722,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadOnly>::new","value":"fn (option: ReadOnlyOption) -> ReadOnly","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":352193,"byte_end":352204,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"add_request","qualname":"<ReadOnly>::add_request","value":"fn (&mut self, index: u64, m: Message) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a read only request into readonly struct.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":352875,"byte_end":352883,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"recv_ack","qualname":"<ReadOnly>::recv_ack","value":"fn (&mut self, m: &Message) -> HashSet<u64>","parent":null,"children":[],"decl_id":null,"docs":" Notifies the ReadOnly struct that the raft state machine received\n an acknowledgment of the heartbeat that attached with the read only request\n context.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":353577,"byte_end":353584,"line_start":132,"line_end":132,"column_start":12,"column_end":19},"name":"advance","qualname":"<ReadOnly>::advance","value":"fn (&mut self, m: &Message) -> Vec<ReadIndexStatus>","parent":null,"children":[],"decl_id":null,"docs":" Advances the read only request queue kept by the ReadOnly struct.\n It dequeues the requests until it finds the read only request that has\n the same context as the given `m`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":354278,"byte_end":354302,"line_start":150,"line_end":150,"column_start":12,"column_end":36},"name":"last_pending_request_ctx","qualname":"<ReadOnly>::last_pending_request_ctx","value":"fn (&self) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the context of the last pending read only request in ReadOnly struct.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":354409,"byte_end":354427,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"name":"pending_read_count","qualname":"<ReadOnly>::pending_read_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":354388,"byte_end":354397,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1628},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\status.rs","byte_start":355812,"byte_end":355818,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"Status","qualname":"::status::Status","value":"Status { id, hs, ss, applied, progress, learner_progress }","parent":null,"children":[{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634}],"decl_id":null,"docs":" Represents the current status of the raft\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1629},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\status.rs","byte_start":355865,"byte_end":355867,"line_start":39,"line_end":39,"column_start":9,"column_end":11},"name":"id","qualname":"::status::Status::id","value":"u64","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":" The ID of the current node.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1630},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\status.rs","byte_start":355943,"byte_end":355945,"line_start":41,"line_end":41,"column_start":9,"column_end":11},"name":"hs","qualname":"::status::Status::hs","value":"eraftpb::HardState","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":" The hardstate of the raft, representing voted state.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1631},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\status.rs","byte_start":356030,"byte_end":356032,"line_start":43,"line_end":43,"column_start":9,"column_end":11},"name":"ss","qualname":"::status::Status::ss","value":"raft::SoftState","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":" The softstate of the raft, representing proposed state.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1632},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\status.rs","byte_start":356111,"byte_end":356118,"line_start":45,"line_end":45,"column_start":9,"column_end":16},"name":"applied","qualname":"::status::Status::applied","value":"u64","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":" The index of the last entry to have been applied.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1633},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\status.rs","byte_start":356193,"byte_end":356201,"line_start":47,"line_end":47,"column_start":9,"column_end":17},"name":"progress","qualname":"::status::Status::progress","value":"hashbrown::HashMap<u64, progress::Progress>","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":" The progress towards catching up and applying logs.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1634},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\status.rs","byte_start":356302,"byte_end":356318,"line_start":49,"line_end":49,"column_start":9,"column_end":25},"name":"learner_progress","qualname":"::status::Status::learner_progress","value":"hashbrown::HashMap<u64, progress::Progress>","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":" The progress of learners in catching up and applying logs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\status.rs","byte_start":356420,"byte_end":356423,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<Status>::new","value":"fn <T> (raft: &Raft<T>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Gets a copy of the current raft status.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"storage","qualname":"::storage","value":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","parent":null,"children":[{"krate":0,"index":930},{"krate":0,"index":935},{"krate":0,"index":941},{"krate":0,"index":945},{"krate":0,"index":1637},{"krate":0,"index":1650},{"krate":0,"index":1648},{"krate":0,"index":1645},{"krate":0,"index":1642},{"krate":0,"index":946},{"krate":0,"index":953},{"krate":0,"index":957},{"krate":0,"index":959},{"krate":0,"index":1652},{"krate":0,"index":1656},{"krate":0,"index":1654},{"krate":0,"index":967},{"krate":0,"index":971}],"decl_id":null,"docs":" Represents the storage trait and example implementation.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1637},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":358756,"byte_end":358765,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"RaftState","qualname":"::storage::RaftState","value":"RaftState { hard_state, conf_state }","parent":null,"children":[{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641}],"decl_id":null,"docs":" Holds both the hard state (commit index, vote leader, term) and the configuration state\n (Current node IDs)\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1638},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":358879,"byte_end":358889,"line_start":46,"line_end":46,"column_start":9,"column_end":19},"name":"hard_state","qualname":"::storage::RaftState::hard_state","value":"eraftpb::HardState","parent":{"krate":0,"index":1637},"children":[],"decl_id":null,"docs":" Contains the last meta information including commit index, the vote leader, and the vote term.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1639},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":359034,"byte_end":359044,"line_start":48,"line_end":48,"column_start":9,"column_end":19},"name":"conf_state","qualname":"::storage::RaftState::conf_state","value":"eraftpb::ConfState","parent":{"krate":0,"index":1637},"children":[],"decl_id":null,"docs":" Records the current node IDs like `[1, 2, 3]` in the cluster. Every Raft node must have a unique ID in the cluster;\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":946},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":360149,"byte_end":360156,"line_start":68,"line_end":68,"column_start":11,"column_end":18},"name":"Storage","qualname":"::storage::Storage","value":"Storage","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952}],"decl_id":null,"docs":" Storage saves all the information about the current Raft implementation, including Raft Log, commit index, the leader to vote for, etc.\n Pay attention to what is returned when there is no Log but it needs to get the `term` at index `first_index() - 1`. To solve this, you can use a dummy Log entry to keep the last truncated Log entry. See [`entries: vec![Entry::new()]`](src/storage.rs#L85) as a reference.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":360311,"byte_end":360324,"line_start":70,"line_end":70,"column_start":8,"column_end":21},"name":"initial_state","qualname":"::storage::Storage::initial_state","value":"fn (&self) -> Result<RaftState>","parent":{"krate":0,"index":946},"children":[],"decl_id":null,"docs":" `initial_state` is called when Raft is initialized. This interface will return a `RaftState` which contains `HardState` and `ConfState`;\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":360551,"byte_end":360558,"line_start":74,"line_end":74,"column_start":8,"column_end":15},"name":"entries","qualname":"::storage::Storage::entries","value":"fn (&self, low: u64, high: u64, max_size: u64) -> Result<Vec<Entry>>","parent":{"krate":0,"index":946},"children":[],"decl_id":null,"docs":" Returns a slice of log entries in the range `[low, high)`.\n max_size limits the total size of the log entries returned, but\n entries returns at least one entry if any.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":360886,"byte_end":360890,"line_start":79,"line_end":79,"column_start":8,"column_end":12},"name":"term","qualname":"::storage::Storage::term","value":"fn (&self, idx: u64) -> Result<u64>","parent":{"krate":0,"index":946},"children":[],"decl_id":null,"docs":" Returns the term of entry idx, which must be in the range\n [first_index()-1, last_index()]. The term of the entry before\n first_index is retained for matching purpose even though the\n rest of that entry may not be available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":361187,"byte_end":361198,"line_start":84,"line_end":84,"column_start":8,"column_end":19},"name":"first_index","qualname":"::storage::Storage::first_index","value":"fn (&self) -> Result<u64>","parent":{"krate":0,"index":946},"children":[],"decl_id":null,"docs":" Returns the index of the first log entry that is\n possible available via entries (older entries have been incorporated\n into the latest snapshot; if storage only contains the dummy entry the\n first log entry is not available).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":361277,"byte_end":361287,"line_start":86,"line_end":86,"column_start":8,"column_end":18},"name":"last_index","qualname":"::storage::Storage::last_index","value":"fn (&self) -> Result<u64>","parent":{"krate":0,"index":946},"children":[],"decl_id":null,"docs":" The index of the last entry in the log.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":361588,"byte_end":361596,"line_start":92,"line_end":92,"column_start":8,"column_end":16},"name":"snapshot","qualname":"::storage::Storage::snapshot","value":"fn (&self) -> Result<Snapshot>","parent":{"krate":0,"index":946},"children":[],"decl_id":null,"docs":" Returns the most recent snapshot.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":953},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":361819,"byte_end":361833,"line_start":97,"line_end":97,"column_start":12,"column_end":26},"name":"MemStorageCore","qualname":"::storage::MemStorageCore","value":"MemStorageCore {  }","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956}],"decl_id":null,"docs":" The Memory Storage Core instance holds the actual state of the storage struct. To access this\n value, use the `rl` and `wl` functions on the main MemStorage implementation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":362422,"byte_end":362435,"line_start":118,"line_end":118,"column_start":12,"column_end":25},"name":"set_hardstate","qualname":"<MemStorageCore>::set_hardstate","value":"fn (&mut self, hs: HardState) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Saves the current HardState.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":362550,"byte_end":362564,"line_start":123,"line_end":123,"column_start":12,"column_end":26},"name":"set_conf_state","qualname":"<MemStorageCore>::set_conf_state","value":"fn (&mut self, cs: ConfState, pending_membership_change: Option<(ConfState, u64)>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Saves the current conf state.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":363254,"byte_end":363268,"line_start":144,"line_end":144,"column_start":12,"column_end":26},"name":"apply_snapshot","qualname":"<MemStorageCore>::apply_snapshot","value":"fn (&mut self, snapshot: Snapshot) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Overwrites the contents of this Storage object with those of the given snapshot.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":364140,"byte_end":364155,"line_start":164,"line_end":164,"column_start":12,"column_end":27},"name":"create_snapshot","qualname":"<MemStorageCore>::create_snapshot","value":"fn (&mut self, idx: u64, cs: Option<ConfState>, pending_membership_change: Option<ConfChange>, data: Vec<u8>) -> Result<&Snapshot>","parent":null,"children":[],"decl_id":null,"docs":" Makes a snapshot which can be retrieved with snapshot() and\n can be used to reconstruct the state at that point.\n If any configuration changes have been made since the last compaction,\n the result of the last apply_conf_change must be passed in.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":365580,"byte_end":365587,"line_start":202,"line_end":202,"column_start":12,"column_end":19},"name":"compact","qualname":"<MemStorageCore>::compact","value":"fn (&mut self, compact_index: u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Discards all log entries prior to compact_index.\n It is the application's responsibility to not attempt to compact an index\n greater than RaftLog.applied.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":366353,"byte_end":366359,"line_start":224,"line_end":224,"column_start":12,"column_end":18},"name":"append","qualname":"<MemStorageCore>::append","value":"fn (&mut self, ents: &[Entry]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Append the new entries to storage.\n TODO: ensure the entries are continuous and\n entries[0].get_index() > self.entries[0].get_index()\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1652},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":367701,"byte_end":367711,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"MemStorage","qualname":"::storage::MemStorage","value":"MemStorage {  }","parent":null,"children":[{"krate":0,"index":1653}],"decl_id":null,"docs":" `MemStorage` is a thread-safe implementation of Storage trait.\n It is mainly used for test purpose.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":367829,"byte_end":367832,"line_start":271,"line_end":271,"column_start":12,"column_end":15},"name":"new","qualname":"<MemStorage>::new","value":"fn () -> MemStorage","parent":null,"children":[],"decl_id":null,"docs":" Returns a new memory storage value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":368066,"byte_end":368068,"line_start":279,"line_end":279,"column_start":12,"column_end":14},"name":"rl","qualname":"<MemStorage>::rl","value":"fn (&self) -> RwLockReadGuard<MemStorageCore>","parent":null,"children":[],"decl_id":null,"docs":" Opens up a read lock on the storage and returns a guard handle. Use this\n with functions that don't require mutation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":368307,"byte_end":368309,"line_start":285,"line_end":285,"column_start":12,"column_end":14},"name":"wl","qualname":"<MemStorage>::wl","value":"fn (&self) -> RwLockWriteGuard<MemStorageCore>","parent":null,"children":[],"decl_id":null,"docs":" Opens up a write lock on the storage and returns guard handle. Use this\n with functions that take a mutable reference to self.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":978},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\util.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\util.rs","parent":null,"children":[{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":991}],"decl_id":null,"docs":" This module contains a collection of various tools to use to manipulate\n and control messages and data associated with raft.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":985},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\util.rs","byte_start":382663,"byte_end":382671,"line_start":23,"line_end":23,"column_start":11,"column_end":19},"name":"NO_LIMIT","qualname":"::util::NO_LIMIT","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" A number to represent that there is no limit.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":986},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\util.rs","byte_start":383346,"byte_end":383356,"line_start":52,"line_end":52,"column_start":8,"column_end":18},"name":"limit_size","qualname":"::util::limit_size","value":"fn <T> (entries: &mut Vec<T>, max: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Truncates the list of entries down to a specific byte-length of\n all entries together.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\util.rs","byte_start":384077,"byte_end":384087,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"get_voters","qualname":"<ConfState>::get_voters","value":"fn (&self) -> &[u64]","parent":null,"children":[],"decl_id":null,"docs":" Get the voters. This is identical to `get_nodes()`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\util.rs","byte_start":384056,"byte_end":384065,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":14232,"byte_end":14239,"line_start":413,"line_end":413,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052}],"decl_id":null,"docs":" A \"prelude\" for crates using the `raft` crate.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":20435,"byte_end":20441,"line_start":116,"line_end":116,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":21060,"byte_end":21066,"line_start":139,"line_end":139,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":24394,"byte_end":24399,"line_start":38,"line_end":38,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":26996,"byte_end":27001,"line_start":156,"line_end":156,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":34292,"byte_end":34297,"line_start":341,"line_end":341,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":34575,"byte_end":34580,"line_start":353,"line_end":353,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":34755,"byte_end":34760,"line_start":359,"line_end":359,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":35332,"byte_end":35348,"line_start":378,"line_end":378,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":38615,"byte_end":38631,"line_start":495,"line_end":495,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":46465,"byte_end":46481,"line_start":682,"line_end":682,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":46773,"byte_end":46789,"line_start":693,"line_end":693,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":46964,"byte_end":46980,"line_start":699,"line_end":699,"column_start":45,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":47423,"byte_end":47431,"line_start":715,"line_end":715,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":49176,"byte_end":49184,"line_start":780,"line_end":780,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":53600,"byte_end":53608,"line_start":905,"line_end":905,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":53768,"byte_end":53776,"line_start":913,"line_end":913,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":53951,"byte_end":53959,"line_start":919,"line_end":919,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":54645,"byte_end":54652,"line_start":945,"line_end":945,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":59567,"byte_end":59574,"line_start":1170,"line_end":1170,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":72537,"byte_end":72544,"line_start":1475,"line_end":1475,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":72998,"byte_end":73005,"line_start":1493,"line_end":1493,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":73180,"byte_end":73187,"line_start":1499,"line_end":1499,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":73589,"byte_end":73598,"line_start":1516,"line_end":1516,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":74511,"byte_end":74520,"line_start":1567,"line_end":1567,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":79855,"byte_end":79864,"line_start":1710,"line_end":1710,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":80049,"byte_end":80058,"line_start":1719,"line_end":1719,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":80233,"byte_end":80242,"line_start":1725,"line_end":1725,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":80662,"byte_end":80671,"line_start":1741,"line_end":1741,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":81992,"byte_end":82001,"line_start":1797,"line_end":1797,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":86087,"byte_end":86096,"line_start":1914,"line_end":1914,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":86257,"byte_end":86266,"line_start":1922,"line_end":1922,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":86441,"byte_end":86450,"line_start":1928,"line_end":1928,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":86998,"byte_end":87008,"line_start":1948,"line_end":1948,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":90024,"byte_end":90034,"line_start":2073,"line_end":2073,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":97970,"byte_end":97980,"line_start":2266,"line_end":2266,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":98271,"byte_end":98281,"line_start":2278,"line_end":2278,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":98456,"byte_end":98466,"line_start":2284,"line_end":2284,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":98748,"byte_end":98757,"line_start":2296,"line_end":2296,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":99837,"byte_end":99846,"line_start":2330,"line_end":2330,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":99885,"byte_end":99894,"line_start":2333,"line_end":2333,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100008,"byte_end":100017,"line_start":2339,"line_end":2339,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100733,"byte_end":100744,"line_start":2368,"line_end":2368,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":103829,"byte_end":103840,"line_start":2436,"line_end":2436,"column_start":30,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":103879,"byte_end":103890,"line_start":2439,"line_end":2439,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":104001,"byte_end":104012,"line_start":2445,"line_end":2445,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":104389,"byte_end":104403,"line_start":2460,"line_end":2460,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":105900,"byte_end":105914,"line_start":2500,"line_end":2500,"column_start":30,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":105953,"byte_end":105967,"line_start":2503,"line_end":2503,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":106082,"byte_end":106096,"line_start":2509,"line_end":2509,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":129175,"byte_end":129180,"line_start":82,"line_end":82,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":130725,"byte_end":130737,"line_start":127,"line_end":127,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\log_unstable.rs","byte_start":135529,"byte_end":135537,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":150788,"byte_end":150801,"line_start":52,"line_end":52,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":151239,"byte_end":151252,"line_start":71,"line_end":71,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":151630,"byte_end":151643,"line_start":84,"line_end":84,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":151947,"byte_end":151960,"line_start":97,"line_end":97,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":152216,"byte_end":152225,"line_start":106,"line_end":106,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":152478,"byte_end":152491,"line_start":115,"line_end":115,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":154840,"byte_end":154851,"line_start":180,"line_end":180,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":595},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":174916,"byte_end":174924,"line_start":715,"line_end":715,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":179538,"byte_end":179547,"line_start":866,"line_end":866,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":179820,"byte_end":179829,"line_start":878,"line_end":878,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":194320,"byte_end":194329,"line_start":67,"line_end":67,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":199220,"byte_end":199224,"line_start":209,"line_end":209,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":199844,"byte_end":199848,"line_start":230,"line_end":230,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":283022,"byte_end":283029,"line_start":63,"line_end":63,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":283361,"byte_end":283368,"line_start":78,"line_end":78,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":332994,"byte_end":332999,"line_start":123,"line_end":123,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":858},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":336084,"byte_end":336091,"line_start":220,"line_end":220,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":350755,"byte_end":350769,"line_start":48,"line_end":48,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":351697,"byte_end":351705,"line_start":81,"line_end":81,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":913},{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\status.rs","byte_start":356352,"byte_end":356358,"line_start":52,"line_end":52,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":362039,"byte_end":362053,"line_start":105,"line_end":105,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":362357,"byte_end":362371,"line_start":116,"line_end":116,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":367761,"byte_end":367771,"line_start":269,"line_end":269,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":368416,"byte_end":368426,"line_start":290,"line_end":290,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\util.rs","byte_start":383980,"byte_end":383989,"line_start":75,"line_end":75,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\util.rs","byte_start":384173,"byte_end":384183,"line_start":83,"line_end":83,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13463,"byte_end":13470,"line_start":387,"line_end":387,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":42}},{"kind":"Mod","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13593,"byte_end":13601,"line_start":396,"line_end":396,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":828}},{"kind":"Mod","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13638,"byte_end":13645,"line_start":399,"line_end":399,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":929}},{"kind":"Mod","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\lib.rs","byte_start":13655,"byte_end":13659,"line_start":400,"line_end":400,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":978}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":20435,"byte_end":20441,"line_start":116,"line_end":116,"column_start":18,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\config.rs","byte_start":21060,"byte_end":21066,"line_start":139,"line_end":139,"column_start":6,"column_end":12},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":18},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":24394,"byte_end":24399,"line_start":38,"line_end":38,"column_start":6,"column_end":11},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":26996,"byte_end":27001,"line_start":156,"line_end":156,"column_start":30,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1055},"to":{"krate":19,"index":1750}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":34292,"byte_end":34297,"line_start":341,"line_end":341,"column_start":28,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1055},"to":{"krate":19,"index":2244}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":34575,"byte_end":34580,"line_start":353,"line_end":353,"column_start":28,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":34755,"byte_end":34760,"line_start":359,"line_end":359,"column_start":45,"column_end":50},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1055},"to":{"krate":19,"index":2724}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":35332,"byte_end":35348,"line_start":378,"line_end":378,"column_start":6,"column_end":22},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":38615,"byte_end":38631,"line_start":495,"line_end":495,"column_start":30,"column_end":46},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1072},"to":{"krate":19,"index":1750}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":46465,"byte_end":46481,"line_start":682,"line_end":682,"column_start":28,"column_end":44},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1072},"to":{"krate":19,"index":2244}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":46773,"byte_end":46789,"line_start":693,"line_end":693,"column_start":28,"column_end":44},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1072},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":46964,"byte_end":46980,"line_start":699,"line_end":699,"column_start":45,"column_end":61},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1072},"to":{"krate":19,"index":2724}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":47423,"byte_end":47431,"line_start":715,"line_end":715,"column_start":6,"column_end":14},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":49176,"byte_end":49184,"line_start":780,"line_end":780,"column_start":30,"column_end":38},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1088},"to":{"krate":19,"index":1750}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":53600,"byte_end":53608,"line_start":905,"line_end":905,"column_start":28,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1088},"to":{"krate":19,"index":2244}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":53768,"byte_end":53776,"line_start":913,"line_end":913,"column_start":28,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1088},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":53951,"byte_end":53959,"line_start":919,"line_end":919,"column_start":45,"column_end":53},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1088},"to":{"krate":19,"index":2724}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":54645,"byte_end":54652,"line_start":945,"line_end":945,"column_start":6,"column_end":13},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":59567,"byte_end":59574,"line_start":1170,"line_end":1170,"column_start":30,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1101},"to":{"krate":19,"index":1750}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":72537,"byte_end":72544,"line_start":1475,"line_end":1475,"column_start":28,"column_end":35},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1101},"to":{"krate":19,"index":2244}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":72998,"byte_end":73005,"line_start":1493,"line_end":1493,"column_start":28,"column_end":35},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1101},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":73180,"byte_end":73187,"line_start":1499,"line_end":1499,"column_start":45,"column_end":52},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1101},"to":{"krate":19,"index":2724}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":73589,"byte_end":73598,"line_start":1516,"line_end":1516,"column_start":6,"column_end":15},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":74511,"byte_end":74520,"line_start":1567,"line_end":1567,"column_start":30,"column_end":39},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1124},"to":{"krate":19,"index":1750}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":79855,"byte_end":79864,"line_start":1710,"line_end":1710,"column_start":28,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1124},"to":{"krate":19,"index":2244}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":80049,"byte_end":80058,"line_start":1719,"line_end":1719,"column_start":28,"column_end":37},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1124},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":80233,"byte_end":80242,"line_start":1725,"line_end":1725,"column_start":45,"column_end":54},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1124},"to":{"krate":19,"index":2724}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":80662,"byte_end":80671,"line_start":1741,"line_end":1741,"column_start":6,"column_end":15},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":81992,"byte_end":82001,"line_start":1797,"line_end":1797,"column_start":30,"column_end":39},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1138},"to":{"krate":19,"index":1750}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":86087,"byte_end":86096,"line_start":1914,"line_end":1914,"column_start":28,"column_end":37},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1138},"to":{"krate":19,"index":2244}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":86257,"byte_end":86266,"line_start":1922,"line_end":1922,"column_start":28,"column_end":37},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1138},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":86441,"byte_end":86450,"line_start":1928,"line_end":1928,"column_start":45,"column_end":54},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1138},"to":{"krate":19,"index":2724}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":86998,"byte_end":87008,"line_start":1948,"line_end":1948,"column_start":6,"column_end":16},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":90024,"byte_end":90034,"line_start":2073,"line_end":2073,"column_start":30,"column_end":40},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1151},"to":{"krate":19,"index":1750}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":97970,"byte_end":97980,"line_start":2266,"line_end":2266,"column_start":28,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1151},"to":{"krate":19,"index":2244}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":98271,"byte_end":98281,"line_start":2278,"line_end":2278,"column_start":28,"column_end":38},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1151},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":98456,"byte_end":98466,"line_start":2284,"line_end":2284,"column_start":45,"column_end":55},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1151},"to":{"krate":19,"index":2724}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":98748,"byte_end":98757,"line_start":2296,"line_end":2296,"column_start":35,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1168},"to":{"krate":19,"index":1804}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":99837,"byte_end":99846,"line_start":2330,"line_end":2330,"column_start":30,"column_end":39},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1168},"to":{"krate":2,"index":1543}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":99885,"byte_end":99894,"line_start":2333,"line_end":2333,"column_start":34,"column_end":43},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1168},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100008,"byte_end":100017,"line_start":2339,"line_end":2339,"column_start":45,"column_end":54},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1168},"to":{"krate":19,"index":2724}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":100733,"byte_end":100744,"line_start":2368,"line_end":2368,"column_start":35,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1188},"to":{"krate":19,"index":1804}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":103829,"byte_end":103840,"line_start":2436,"line_end":2436,"column_start":30,"column_end":41},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1188},"to":{"krate":2,"index":1543}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":103879,"byte_end":103890,"line_start":2439,"line_end":2439,"column_start":34,"column_end":45},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1188},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":104001,"byte_end":104012,"line_start":2445,"line_end":2445,"column_start":45,"column_end":56},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1188},"to":{"krate":19,"index":2724}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":104389,"byte_end":104403,"line_start":2460,"line_end":2460,"column_start":35,"column_end":49},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1259},"to":{"krate":19,"index":1804}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":105900,"byte_end":105914,"line_start":2500,"line_end":2500,"column_start":30,"column_end":44},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1259},"to":{"krate":2,"index":1543}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":105953,"byte_end":105967,"line_start":2503,"line_end":2503,"column_start":34,"column_end":48},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1259},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\eraftpb.rs","byte_start":106082,"byte_end":106096,"line_start":2509,"line_end":2509,"column_start":45,"column_end":59},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1259},"to":{"krate":19,"index":2724}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":129175,"byte_end":129180,"line_start":82,"line_end":82,"column_start":25,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1288},"to":{"krate":2,"index":2040}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\errors.rs","byte_start":130725,"byte_end":130737,"line_start":127,"line_end":127,"column_start":25,"column_end":37},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1347},"to":{"krate":2,"index":2040}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\log_unstable.rs","byte_start":135529,"byte_end":135537,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":150788,"byte_end":150801,"line_start":52,"line_end":52,"column_start":18,"column_end":31},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1385},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":151239,"byte_end":151252,"line_start":71,"line_end":71,"column_start":6,"column_end":19},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":151630,"byte_end":151643,"line_start":84,"line_end":84,"column_start":45,"column_end":58},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1400},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":151947,"byte_end":151960,"line_start":97,"line_end":97,"column_start":26,"column_end":39},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1400},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":152216,"byte_end":152225,"line_start":106,"line_end":106,"column_start":30,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1138},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":152478,"byte_end":152491,"line_start":115,"line_end":115,"column_start":6,"column_end":19},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":154840,"byte_end":154851,"line_start":180,"line_end":180,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":174916,"byte_end":174924,"line_start":715,"line_end":715,"column_start":6,"column_end":14},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":179538,"byte_end":179547,"line_start":866,"line_end":866,"column_start":16,"column_end":25},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1461},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\progress.rs","byte_start":179820,"byte_end":179829,"line_start":878,"line_end":878,"column_start":6,"column_end":15},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":194320,"byte_end":194329,"line_start":67,"line_end":67,"column_start":18,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1471},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":199172,"byte_end":199176,"line_start":207,"line_end":207,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1533},"to":{"krate":0,"index":678}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":199220,"byte_end":199224,"line_start":209,"line_end":209,"column_start":40,"column_end":44},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1499},"to":{"krate":0,"index":678}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft.rs","byte_start":199844,"byte_end":199848,"line_start":230,"line_end":230,"column_start":18,"column_end":22},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":283022,"byte_end":283029,"line_start":63,"line_end":63,"column_start":22,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1535},"to":{"krate":5,"index":3733}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raft_log.rs","byte_start":283361,"byte_end":283368,"line_start":78,"line_end":78,"column_start":18,"column_end":25},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":332994,"byte_end":332999,"line_start":123,"line_end":123,"column_start":6,"column_end":11},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1565},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\raw_node.rs","byte_start":336084,"byte_end":336091,"line_start":220,"line_end":220,"column_start":18,"column_end":25},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":350755,"byte_end":350769,"line_start":48,"line_end":48,"column_start":18,"column_end":32},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1582},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\read_only.rs","byte_start":351697,"byte_end":351705,"line_start":81,"line_end":81,"column_start":6,"column_end":14},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\status.rs","byte_start":356352,"byte_end":356358,"line_start":52,"line_end":52,"column_start":6,"column_end":12},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1628},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":362039,"byte_end":362053,"line_start":105,"line_end":105,"column_start":18,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":953},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":362357,"byte_end":362371,"line_start":116,"line_end":116,"column_start":6,"column_end":20},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":367761,"byte_end":367771,"line_start":269,"line_end":269,"column_start":6,"column_end":16},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\storage.rs","byte_start":368416,"byte_end":368426,"line_start":290,"line_end":290,"column_start":18,"column_end":28},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1652},"to":{"krate":0,"index":946}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\util.rs","byte_start":383980,"byte_end":383989,"line_start":75,"line_end":75,"column_start":6,"column_end":15},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raft-0.5.0\\src\\util.rs","byte_start":384173,"byte_end":384183,"line_start":83,"line_end":83,"column_start":33,"column_end":43},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1151},"to":{"krate":2,"index":2258}}]}