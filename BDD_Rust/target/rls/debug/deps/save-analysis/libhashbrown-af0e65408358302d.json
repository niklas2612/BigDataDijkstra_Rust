{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8","program":"C:\\Users\\nikla_y88vj7d\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","hashbrown","C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=af0e65408358302d","-C","extra-filename=-af0e65408358302d","--out-dir","c:\\Users\\nikla_y88vj7d\\OneDrive\\Desktop\\BigDataDijkstra_Rust\\BDD_Rust\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\nikla_y88vj7d\\OneDrive\\Desktop\\BigDataDijkstra_Rust\\BDD_Rust\\target\\rls\\debug\\deps","--extern","byteorder=c:\\Users\\nikla_y88vj7d\\OneDrive\\Desktop\\BigDataDijkstra_Rust\\BDD_Rust\\target\\rls\\debug\\deps\\libbyteorder-9cc611413024059f.rmeta","--extern","scopeguard=c:\\Users\\nikla_y88vj7d\\OneDrive\\Desktop\\BigDataDijkstra_Rust\\BDD_Rust\\target\\rls\\debug\\deps\\libscopeguard-abf972f464982d75.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\nikla_y88vj7d\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\nikla_y88vj7d\\OneDrive\\Desktop\\BigDataDijkstra_Rust\\BDD_Rust\\target\\rls\\debug\\deps\\libhashbrown-af0e65408358302d.rmeta"},"prelude":{"crate_id":{"name":"hashbrown","disambiguator":[6831284418824999517,9187557100227493932]},"crate_root":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src","external_crates":[{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[10973483057139175867,4092977820595504105]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[5344968526663694908,5854973613798060781]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14551701718388451589,8584422242678588409]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","num":4,"id":{"name":"byteorder","disambiguator":[4774801759518926921,18058406124570237986]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","num":5,"id":{"name":"scopeguard","disambiguator":[17635452243431005141,11083245694762121919]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","num":6,"id":{"name":"std","disambiguator":[14664243863007151186,13029296787848565560]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","num":7,"id":{"name":"alloc","disambiguator":[6143882857039415599,5494129795406748407]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","num":8,"id":{"name":"libc","disambiguator":[9037026435662606504,10577775618308791929]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","num":9,"id":{"name":"unwind","disambiguator":[15244332605556921560,15997253764330093455]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","num":10,"id":{"name":"cfg_if","disambiguator":[496393125628069379,10121348063997143337]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[14891368759234060001,17337422003014977783]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9539026828135594574,18385042694178804316]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","num":13,"id":{"name":"hashbrown","disambiguator":[5817650502020334249,13012108553651615857]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","num":14,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12364111099303107650,4225371417860886929]}},{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[1593379990131481620,6691744023912804689]}}],"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","byte_start":0,"byte_end":2567,"line_start":1,"line_end":92,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","byte_start":1356,"byte_end":1357,"line_start":54,"line_end":54,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1286}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","byte_start":1356,"byte_end":1357,"line_start":54,"line_end":54,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1288}},{"kind":"Use","ref_id":{"krate":0,"index":1292},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","byte_start":2187,"byte_end":2194,"line_start":81,"line_end":81,"column_start":14,"column_end":21},"alias_span":null,"name":"HashMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1315},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","byte_start":2209,"byte_end":2216,"line_start":82,"line_end":82,"column_start":14,"column_end":21},"alias_span":null,"name":"HashSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","byte_start":0,"byte_end":2567,"line_start":1,"line_end":92,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":35},{"krate":0,"index":666},{"krate":0,"index":949},{"krate":0,"index":1286},{"krate":0,"index":1288},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1323},{"krate":0,"index":1336},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1328}],"decl_id":null,"docs":" This crate is a Rust port of Google's high-performance [SwissTable] hash\n map, adapted to make it a drop-in replacement for Rust's standard `HashMap`\n and `HashSet` types.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","byte_start":553,"byte_end":563,"line_start":12,"line_end":12,"column_start":1,"column_end":11}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","byte_start":778,"byte_end":800,"line_start":25,"line_end":25,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\fx.rs","byte_start":2956,"byte_end":2969,"line_start":11,"line_end":11,"column_start":10,"column_end":23},"name":"FxHashBuilder","qualname":"::fx::FxHashBuilder","value":"BuildHasherDefault<FxHasher>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for a `HashBuilder` using the `fx` hash algorithm.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\fx.rs","byte_start":3721,"byte_end":3729,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"FxHasher","qualname":"::fx::FxHasher","value":"FxHasher {  }","parent":null,"children":[{"krate":0,"index":20}],"decl_id":null,"docs":" A speedy hash algorithm for use within rustc. The hashmap in liballoc\n by default uses SipHash which isn't quite as speedy as we want. In the\n compiler we're not really worried about DOS attempts, so we use a fast\n non-cryptographic hash.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1292},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":12660,"byte_end":12667,"line_start":190,"line_end":190,"column_start":12,"column_end":19},"name":"HashMap","qualname":"::map::HashMap","value":"HashMap {  }","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1297}],"decl_id":null,"docs":" A hash map implemented with quadratic probing and SIMD lookup.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":13358,"byte_end":13361,"line_start":215,"line_end":215,"column_start":12,"column_end":15},"name":"new","qualname":"<HashMap<K, V, DefaultHashBuilder>>::new","value":"fn () -> HashMap<K, V, DefaultHashBuilder>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":13337,"byte_end":13346,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":13848,"byte_end":13861,"line_start":231,"line_end":231,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<HashMap<K, V, DefaultHashBuilder>>::with_capacity","value":"fn (capacity: usize) -> HashMap<K, V, DefaultHashBuilder>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":13827,"byte_end":13836,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":14817,"byte_end":14828,"line_start":262,"line_end":262,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<HashMap<K, V, S>>::with_hasher","value":"fn (hash_builder: S) -> HashMap<K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` which will use the given hash builder to hash\n keys.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":14796,"byte_end":14805,"line_start":261,"line_end":261,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":15834,"byte_end":15858,"line_start":291,"line_end":291,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<HashMap<K, V, S>>::with_capacity_and_hasher","value":"fn (capacity: usize, hash_builder: S) -> HashMap<K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity, using `hash_builder`\n to hash the keys.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":15813,"byte_end":15822,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":16531,"byte_end":16537,"line_start":313,"line_end":313,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashMap<K, V, S>>::hasher","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the map's [`BuildHasher`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":16510,"byte_end":16519,"line_start":312,"line_end":312,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":17046,"byte_end":17054,"line_start":330,"line_end":330,"column_start":12,"column_end":20},"name":"capacity","qualname":"<HashMap<K, V, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the map can hold without reallocating.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":17025,"byte_end":17034,"line_start":329,"line_end":329,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":17669,"byte_end":17676,"line_start":352,"line_end":352,"column_start":12,"column_end":19},"name":"reserve","qualname":"<HashMap<K, V, S>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the `HashMap`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":17648,"byte_end":17657,"line_start":351,"line_end":351,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":18454,"byte_end":18465,"line_start":375,"line_end":375,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<HashMap<K, V, S>>::try_reserve","value":"fn (&mut self, additional: usize) -> Result<(), CollectionAllocErr>","parent":null,"children":[],"decl_id":null,"docs":" Tries to reserve capacity for at least `additional` more elements to be inserted\n in the given `HashMap<K,V>`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":18433,"byte_end":18442,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":19252,"byte_end":19265,"line_start":398,"line_end":398,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<HashMap<K, V, S>>::shrink_to_fit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map as much as possible. It will drop\n down as much as possible while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":19231,"byte_end":19240,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":20153,"byte_end":20162,"line_start":425,"line_end":425,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<HashMap<K, V, S>>::shrink_to","value":"fn (&mut self, min_capacity: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map with a lower limit. It will drop\n down no lower than the supplied limit while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":20132,"byte_end":20141,"line_start":424,"line_end":424,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":20901,"byte_end":20905,"line_start":454,"line_end":454,"column_start":12,"column_end":16},"name":"keys","qualname":"<HashMap<K, V, S>>::keys","value":"fn (&self) -> Keys<K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all keys in arbitrary order.\n The iterator element type is `&'a K`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":20880,"byte_end":20889,"line_start":453,"line_end":453,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":21409,"byte_end":21415,"line_start":476,"line_end":476,"column_start":12,"column_end":18},"name":"values","qualname":"<HashMap<K, V, S>>::values","value":"fn (&self) -> Values<K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.\n The iterator element type is `&'a V`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":21388,"byte_end":21397,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":22029,"byte_end":22039,"line_start":503,"line_end":503,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<HashMap<K, V, S>>::values_mut","value":"fn (&mut self) -> ValuesMut<K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.\n The iterator element type is `&'a mut V`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":22008,"byte_end":22017,"line_start":502,"line_end":502,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":22623,"byte_end":22627,"line_start":527,"line_end":527,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashMap<K, V, S>>::iter","value":"fn (&self) -> Iter<K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order.\n The iterator element type is `(&'a K, &'a V)`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":22602,"byte_end":22611,"line_start":526,"line_end":526,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":23489,"byte_end":23497,"line_start":561,"line_end":561,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<HashMap<K, V, S>>::iter_mut","value":"fn (&mut self) -> IterMut<K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order,\n with mutable references to the values.\n The iterator element type is `(&'a K, &'a mut V)`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":23468,"byte_end":23477,"line_start":560,"line_end":560,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":24314,"byte_end":24319,"line_start":591,"line_end":591,"column_start":12,"column_end":17},"name":"entry","qualname":"<HashMap<K, V, S>>::entry","value":"fn (&mut self, key: K) -> Entry<K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place manipulation.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":24293,"byte_end":24302,"line_start":590,"line_end":590,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":25194,"byte_end":25197,"line_start":627,"line_end":627,"column_start":12,"column_end":15},"name":"len","qualname":"<HashMap<K, V, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the map.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":25173,"byte_end":25182,"line_start":626,"line_end":626,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":25551,"byte_end":25559,"line_start":644,"line_end":644,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashMap<K, V, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":25530,"byte_end":25539,"line_start":643,"line_end":643,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":26117,"byte_end":26122,"line_start":668,"line_end":668,"column_start":12,"column_end":17},"name":"drain","qualname":"<HashMap<K, V, S>>::drain","value":"fn (&mut self) -> Drain<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, returning all key-value pairs as an iterator. Keeps the\n allocated memory for reuse.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":26096,"byte_end":26105,"line_start":667,"line_end":667,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":26655,"byte_end":26660,"line_start":691,"line_end":691,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashMap<K, V, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-value pairs. Keeps the allocated memory\n for reuse.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":26634,"byte_end":26643,"line_start":690,"line_end":690,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":27361,"byte_end":27364,"line_start":715,"line_end":715,"column_start":12,"column_end":15},"name":"get","qualname":"<HashMap<K, V, S>>::get","value":"fn <Q> (&self, k: &Q) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":27340,"byte_end":27349,"line_start":714,"line_end":714,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":28207,"byte_end":28220,"line_start":743,"line_end":743,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<HashMap<K, V, S>>::get_key_value","value":"fn <Q> (&self, k: &Q) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the key-value pair corresponding to the supplied key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":28186,"byte_end":28195,"line_start":742,"line_end":742,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":29259,"byte_end":29271,"line_start":777,"line_end":777,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<HashMap<K, V, S>>::contains_key","value":"fn <Q> (&self, k: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":29238,"byte_end":29247,"line_start":776,"line_end":776,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":30087,"byte_end":30094,"line_start":807,"line_end":807,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<HashMap<K, V, S>>::get_mut","value":"fn <Q> (&mut self, k: &Q) -> Option<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":30066,"byte_end":30075,"line_start":806,"line_end":806,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":31330,"byte_end":31336,"line_start":844,"line_end":844,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashMap<K, V, S>>::insert","value":"fn (&mut self, k: K, v: V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":31309,"byte_end":31318,"line_start":843,"line_end":843,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":32518,"byte_end":32524,"line_start":879,"line_end":879,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashMap<K, V, S>>::remove","value":"fn <Q> (&mut self, k: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key\n was previously in the map.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":32497,"byte_end":32506,"line_start":878,"line_end":878,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":33431,"byte_end":33443,"line_start":910,"line_end":910,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<HashMap<K, V, S>>::remove_entry","value":"fn <Q> (&mut self, k: &Q) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stored key and value if the\n key was previously in the map.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":33410,"byte_end":33419,"line_start":909,"line_end":909,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":34285,"byte_end":34291,"line_start":939,"line_end":939,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashMap<K, V, S>>::retain","value":"fn <F> (&mut self, mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":36820,"byte_end":36833,"line_start":994,"line_end":994,"column_start":12,"column_end":25},"name":"raw_entry_mut","qualname":"<HashMap<K, V, S>>::raw_entry_mut","value":"fn (&mut self) -> RawEntryBuilderMut<K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw entry builder for the HashMap.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":36799,"byte_end":36808,"line_start":993,"line_end":993,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":37657,"byte_end":37666,"line_start":1015,"line_end":1015,"column_start":12,"column_end":21},"name":"raw_entry","qualname":"<HashMap<K, V, S>>::raw_entry","value":"fn (&self) -> RawEntryBuilder<K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw immutable entry builder for the HashMap.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":37636,"byte_end":37645,"line_start":1014,"line_end":1014,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":39420,"byte_end":39424,"line_start":1093,"line_end":1093,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"decl_id":null,"docs":" An iterator over the entries of a `HashMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":40236,"byte_end":40243,"line_start":1122,"line_end":1122,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"decl_id":null,"docs":" A mutable iterator over the entries of a `HashMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":40974,"byte_end":40982,"line_start":1146,"line_end":1146,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":183}],"decl_id":null,"docs":" An owning iterator over the entries of a `HashMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":41539,"byte_end":41543,"line_start":1168,"line_end":1168,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":192}],"decl_id":null,"docs":" An iterator over the keys of a `HashMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":42254,"byte_end":42260,"line_start":1195,"line_end":1195,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":207}],"decl_id":null,"docs":" An iterator over the values of a `HashMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":42985,"byte_end":42990,"line_start":1222,"line_end":1222,"column_start":12,"column_end":17},"name":"Drain","qualname":"::map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":222}],"decl_id":null,"docs":" A draining iterator over the entries of a `HashMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":43603,"byte_end":43612,"line_start":1244,"line_end":1244,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":232}],"decl_id":null,"docs":" A mutable iterator over the values of a `HashMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":43903,"byte_end":43921,"line_start":1253,"line_end":1253,"column_start":12,"column_end":30},"name":"RawEntryBuilderMut","qualname":"::map::RawEntryBuilderMut","value":"RawEntryBuilderMut {  }","parent":null,"children":[{"krate":0,"index":238}],"decl_id":null,"docs":" A builder for computing where in a HashMap a key-value pair would be stored.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":44408,"byte_end":44416,"line_start":1268,"line_end":1268,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::RawEntryMut::Occupied","value":"RawEntryMut::Occupied(RawOccupiedEntryMut<'a, K, V>)","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" An occupied entry.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":44477,"byte_end":44483,"line_start":1270,"line_end":1270,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::RawEntryMut::Vacant","value":"RawEntryMut::Vacant(RawVacantEntryMut<'a, K, V, S>)","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" A vacant entry.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":44338,"byte_end":44349,"line_start":1266,"line_end":1266,"column_start":10,"column_end":21},"name":"RawEntryMut","qualname":"::map::RawEntryMut","value":"RawEntryMut::{Occupied, Vacant}","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":247}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":44672,"byte_end":44691,"line_start":1277,"line_end":1277,"column_start":12,"column_end":31},"name":"RawOccupiedEntryMut","qualname":"::map::RawOccupiedEntryMut","value":"RawOccupiedEntryMut {  }","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`RawEntryMut`] enum.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":44927,"byte_end":44944,"line_start":1286,"line_end":1286,"column_start":12,"column_end":29},"name":"RawVacantEntryMut","qualname":"::map::RawVacantEntryMut","value":"RawVacantEntryMut {  }","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`RawEntryMut`] enum.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":45262,"byte_end":45277,"line_start":1296,"line_end":1296,"column_start":12,"column_end":27},"name":"RawEntryBuilder","qualname":"::map::RawEntryBuilder","value":"RawEntryBuilder {  }","parent":null,"children":[{"krate":0,"index":268}],"decl_id":null,"docs":" A builder for computing where in a HashMap a key-value pair would be stored.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":45511,"byte_end":45519,"line_start":1307,"line_end":1307,"column_start":12,"column_end":20},"name":"from_key","qualname":"<RawEntryBuilderMut>::from_key","value":"fn <Q> (self, k: &Q) -> RawEntryMut<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Create a `RawEntryMut` from the given key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":45490,"byte_end":45499,"line_start":1306,"line_end":1306,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":45877,"byte_end":45900,"line_start":1319,"line_end":1319,"column_start":12,"column_end":35},"name":"from_key_hashed_nocheck","qualname":"<RawEntryBuilderMut>::from_key_hashed_nocheck","value":"fn <Q> (self, hash: u64, k: &Q) -> RawEntryMut<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Create a `RawEntryMut` from the given key and its hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":45856,"byte_end":45865,"line_start":1318,"line_end":1318,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":46709,"byte_end":46718,"line_start":1346,"line_end":1346,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RawEntryBuilderMut>::from_hash","value":"fn <F> (self, hash: u64, is_match: F) -> RawEntryMut<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Create a `RawEntryMut` from the given hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":46688,"byte_end":46697,"line_start":1345,"line_end":1345,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":47014,"byte_end":47022,"line_start":1360,"line_end":1360,"column_start":12,"column_end":20},"name":"from_key","qualname":"<RawEntryBuilder>::from_key","value":"fn <Q> (self, k: &Q) -> Option<(&'a K, &'a V)>","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":46993,"byte_end":47002,"line_start":1359,"line_end":1359,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":47361,"byte_end":47384,"line_start":1372,"line_end":1372,"column_start":12,"column_end":35},"name":"from_key_hashed_nocheck","qualname":"<RawEntryBuilder>::from_key_hashed_nocheck","value":"fn <Q> (self, hash: u64, k: &Q) -> Option<(&'a K, &'a V)>","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by a key and its hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":47340,"byte_end":47349,"line_start":1371,"line_end":1371,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":47984,"byte_end":47993,"line_start":1396,"line_end":1396,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RawEntryBuilder>::from_hash","value":"fn <F> (self, hash: u64, is_match: F) -> Option<(&'a K, &'a V)>","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":47963,"byte_end":47972,"line_start":1395,"line_end":1395,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":48781,"byte_end":48790,"line_start":1422,"line_end":1422,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<RawEntryMut>::or_insert","value":"fn (self, default_key: K, default_val: V) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n mutable references to the key and value in the entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":48760,"byte_end":48769,"line_start":1421,"line_end":1421,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":49659,"byte_end":49673,"line_start":1450,"line_end":1450,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<RawEntryMut>::or_insert_with","value":"fn <F> (self, default: F) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns mutable references to the key and value in the entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":49638,"byte_end":49647,"line_start":1449,"line_end":1449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":50734,"byte_end":50744,"line_start":1488,"line_end":1488,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<RawEntryMut>::and_modify","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":50713,"byte_end":50722,"line_start":1487,"line_end":1487,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":51285,"byte_end":51288,"line_start":1508,"line_end":1508,"column_start":12,"column_end":15},"name":"key","qualname":"<RawOccupiedEntryMut>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":51264,"byte_end":51273,"line_start":1507,"line_end":1507,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":51435,"byte_end":51442,"line_start":1514,"line_end":1514,"column_start":12,"column_end":19},"name":"key_mut","qualname":"<RawOccupiedEntryMut>::key_mut","value":"fn (&mut self) -> &mut K","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the key in the entry.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":51414,"byte_end":51423,"line_start":1513,"line_end":1513,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":51668,"byte_end":51676,"line_start":1521,"line_end":1521,"column_start":12,"column_end":20},"name":"into_key","qualname":"<RawOccupiedEntryMut>::into_key","value":"fn (self) -> &'a mut K","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into a mutable reference to the key in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":51647,"byte_end":51656,"line_start":1520,"line_end":1520,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":51827,"byte_end":51830,"line_start":1527,"line_end":1527,"column_start":12,"column_end":15},"name":"get","qualname":"<RawOccupiedEntryMut>::get","value":"fn (&self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":51806,"byte_end":51815,"line_start":1526,"line_end":1526,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":52054,"byte_end":52062,"line_start":1534,"line_end":1534,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<RawOccupiedEntryMut>::into_mut","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":52033,"byte_end":52042,"line_start":1533,"line_end":1533,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":52221,"byte_end":52228,"line_start":1540,"line_end":1540,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RawOccupiedEntryMut>::get_mut","value":"fn (&mut self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":52200,"byte_end":52209,"line_start":1539,"line_end":1539,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":52389,"byte_end":52402,"line_start":1546,"line_end":1546,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<RawOccupiedEntryMut>::get_key_value","value":"fn (&mut self) -> (&K, &V)","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key and value in the entry.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":52368,"byte_end":52377,"line_start":1545,"line_end":1545,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":52640,"byte_end":52657,"line_start":1555,"line_end":1555,"column_start":12,"column_end":29},"name":"get_key_value_mut","qualname":"<RawOccupiedEntryMut>::get_key_value_mut","value":"fn (&mut self) -> (&mut K, &mut V)","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the key and value in the entry.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":52619,"byte_end":52628,"line_start":1554,"line_end":1554,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":52990,"byte_end":53004,"line_start":1565,"line_end":1565,"column_start":12,"column_end":26},"name":"into_key_value","qualname":"<RawOccupiedEntryMut>::into_key_value","value":"fn (self) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the key and value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":52969,"byte_end":52978,"line_start":1564,"line_end":1564,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":53267,"byte_end":53273,"line_start":1574,"line_end":1574,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawOccupiedEntryMut>::insert","value":"fn (&mut self, value: V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":53246,"byte_end":53255,"line_start":1573,"line_end":1573,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":53450,"byte_end":53460,"line_start":1580,"line_end":1580,"column_start":12,"column_end":22},"name":"insert_key","qualname":"<RawOccupiedEntryMut>::insert_key","value":"fn (&mut self, key: K) -> K","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":53429,"byte_end":53438,"line_start":1579,"line_end":1579,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":53619,"byte_end":53625,"line_start":1586,"line_end":1586,"column_start":12,"column_end":18},"name":"remove","qualname":"<RawOccupiedEntryMut>::remove","value":"fn (self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":53598,"byte_end":53607,"line_start":1585,"line_end":1585,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":53763,"byte_end":53775,"line_start":1592,"line_end":1592,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<RawOccupiedEntryMut>::remove_entry","value":"fn (self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":53742,"byte_end":53751,"line_start":1591,"line_end":1591,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":54096,"byte_end":54102,"line_start":1604,"line_end":1604,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawVacantEntryMut>::insert","value":"fn (self, key: K, value: V) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":54075,"byte_end":54084,"line_start":1603,"line_end":1603,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":54507,"byte_end":54528,"line_start":1617,"line_end":1617,"column_start":12,"column_end":33},"name":"insert_hashed_nocheck","qualname":"<RawVacantEntryMut>::insert_hashed_nocheck","value":"fn (self, hash: u64, key: K, value: V) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":54486,"byte_end":54495,"line_start":1616,"line_end":1616,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":56447,"byte_end":56455,"line_start":1677,"line_end":1677,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry<'a, K, V, S>)","parent":{"krate":0,"index":366},"children":[],"decl_id":null,"docs":" An occupied entry.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":56514,"byte_end":56520,"line_start":1680,"line_end":1680,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry<'a, K, V, S>)","parent":{"krate":0,"index":366},"children":[],"decl_id":null,"docs":" A vacant entry.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":56383,"byte_end":56388,"line_start":1675,"line_end":1675,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::Entry","value":"Entry::{Occupied, Vacant}","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":374}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":57018,"byte_end":57031,"line_start":1696,"line_end":1696,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":57786,"byte_end":57797,"line_start":1730,"line_end":1730,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":64238,"byte_end":64247,"line_start":2004,"line_end":2004,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"fn (self, default: V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":64217,"byte_end":64226,"line_start":2003,"line_end":2003,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":64988,"byte_end":65002,"line_start":2031,"line_end":2031,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"fn <F> (self, default: F) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":64967,"byte_end":64976,"line_start":2030,"line_end":2030,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":65545,"byte_end":65548,"line_start":2053,"line_end":2053,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":65524,"byte_end":65533,"line_start":2052,"line_end":2052,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":66288,"byte_end":66298,"line_start":2081,"line_end":2081,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":66267,"byte_end":66276,"line_start":2080,"line_end":2080,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":67085,"byte_end":67095,"line_start":2112,"line_end":2112,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default value if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":67064,"byte_end":67073,"line_start":2111,"line_end":2111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":67713,"byte_end":67716,"line_start":2137,"line_end":2137,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":67692,"byte_end":67701,"line_start":2136,"line_end":2136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":68334,"byte_end":68346,"line_start":2160,"line_end":2160,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"fn (self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":68313,"byte_end":68322,"line_start":2159,"line_end":2159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":68921,"byte_end":68924,"line_start":2183,"line_end":2183,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"fn (&self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":68900,"byte_end":68909,"line_start":2182,"line_end":2182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":69849,"byte_end":69856,"line_start":2215,"line_end":2215,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"fn (&mut self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":69828,"byte_end":69837,"line_start":2214,"line_end":2214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":70673,"byte_end":70681,"line_start":2243,"line_end":2243,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":70652,"byte_end":70661,"line_start":2242,"line_end":2242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":71270,"byte_end":71276,"line_start":2265,"line_end":2265,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"fn (&mut self, mut value: V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":71249,"byte_end":71258,"line_start":2264,"line_end":2264,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":71923,"byte_end":71929,"line_start":2289,"line_end":2289,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"fn (self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":71902,"byte_end":71911,"line_start":2288,"line_end":2288,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":72714,"byte_end":72727,"line_start":2314,"line_end":2314,"column_start":12,"column_end":25},"name":"replace_entry","qualname":"<OccupiedEntry>::replace_entry","value":"fn (self, value: V) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Replaces the entry, returning the old key and value. The new key in the hash map will be\n the key used to create this entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":72693,"byte_end":72702,"line_start":2313,"line_end":2313,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":73853,"byte_end":73864,"line_start":2348,"line_end":2348,"column_start":12,"column_end":23},"name":"replace_key","qualname":"<OccupiedEntry>::replace_key","value":"fn (self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Replaces the key in the hash map with the key used to create this entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":73832,"byte_end":73841,"line_start":2347,"line_end":2347,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":74404,"byte_end":74407,"line_start":2367,"line_end":2367,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value\n through the `VacantEntry`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":74383,"byte_end":74392,"line_start":2366,"line_end":2366,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":74808,"byte_end":74816,"line_start":2386,"line_end":2386,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"fn (self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":74787,"byte_end":74796,"line_start":2385,"line_end":2385,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":75332,"byte_end":75338,"line_start":2407,"line_end":2407,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn (self, value: V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":75311,"byte_end":75320,"line_start":2406,"line_end":2406,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1315},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":156451,"byte_end":156458,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"HashSet","qualname":"::set::HashSet","value":"HashSet {  }","parent":null,"children":[{"krate":0,"index":1318}],"decl_id":null,"docs":" A hash set implemented as a `HashMap` where the value is `()`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":156919,"byte_end":156922,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"new","qualname":"<HashSet<T, DefaultHashBuilder>>::new","value":"fn () -> HashSet<T, DefaultHashBuilder>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":156898,"byte_end":156907,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":157469,"byte_end":157482,"line_start":151,"line_end":151,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<HashSet<T, DefaultHashBuilder>>::with_capacity","value":"fn (capacity: usize) -> HashSet<T, DefaultHashBuilder>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":157448,"byte_end":157457,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":158439,"byte_end":158450,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<HashSet<T, S>>::with_hasher","value":"fn (hasher: S) -> HashSet<T, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty hash set which will use the given hasher to hash\n keys.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":158418,"byte_end":158427,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":159419,"byte_end":159443,"line_start":212,"line_end":212,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<HashSet<T, S>>::with_capacity_and_hasher","value":"fn (capacity: usize, hasher: S) -> HashSet<T, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity, using\n `hasher` to hash the keys.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":159398,"byte_end":159407,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":160092,"byte_end":160098,"line_start":233,"line_end":233,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashSet<T, S>>::hasher","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the set's [`BuildHasher`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":160071,"byte_end":160080,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":160442,"byte_end":160450,"line_start":247,"line_end":247,"column_start":12,"column_end":20},"name":"capacity","qualname":"<HashSet<T, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the set can hold without reallocating.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":160421,"byte_end":160430,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":161016,"byte_end":161023,"line_start":268,"line_end":268,"column_start":12,"column_end":19},"name":"reserve","qualname":"<HashSet<T, S>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the `HashSet`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":160995,"byte_end":161004,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":161695,"byte_end":161706,"line_start":289,"line_end":289,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<HashSet<T, S>>::try_reserve","value":"fn (&mut self, additional: usize) -> Result<(), CollectionAllocErr>","parent":null,"children":[],"decl_id":null,"docs":" Tries to reserve capacity for at least `additional` more elements to be inserted\n in the given `HashSet<K,V>`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":161674,"byte_end":161683,"line_start":288,"line_end":288,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":162371,"byte_end":162384,"line_start":310,"line_end":310,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<HashSet<T, S>>::shrink_to_fit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the set as much as possible. It will drop\n down as much as possible while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":162350,"byte_end":162359,"line_start":309,"line_end":309,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":163165,"byte_end":163174,"line_start":336,"line_end":336,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<HashSet<T, S>>::shrink_to","value":"fn (&mut self, min_capacity: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the set with a lower limit. It will drop\n down no lower than the supplied limit while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":163144,"byte_end":163153,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":163693,"byte_end":163697,"line_start":357,"line_end":357,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashSet<T, S>>::iter","value":"fn (&self) -> Iter<T>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all elements in arbitrary order.\n The iterator element type is `&'a T`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":163672,"byte_end":163681,"line_start":356,"line_end":356,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":164609,"byte_end":164619,"line_start":387,"line_end":387,"column_start":12,"column_end":22},"name":"difference","qualname":"<HashSet<T, S>>::difference","value":"fn <'a> (&'a self, other: &'a HashSet<T, S>) -> Difference<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the difference,\n i.e., the values that are in `self` but not in `other`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":164588,"byte_end":164597,"line_start":386,"line_end":386,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":165542,"byte_end":165562,"line_start":416,"line_end":416,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<HashSet<T, S>>::symmetric_difference","value":"fn <'a> (&'a self, other: &'a HashSet<T, S>) -> SymmetricDifference<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the symmetric difference,\n i.e., the values that are in `self` or in `other` but not in both.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":165521,"byte_end":165530,"line_start":415,"line_end":415,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":166413,"byte_end":166425,"line_start":444,"line_end":444,"column_start":12,"column_end":24},"name":"intersection","qualname":"<HashSet<T, S>>::intersection","value":"fn <'a> (&'a self, other: &'a HashSet<T, S>) -> Intersection<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the intersection,\n i.e., the values that are both in `self` and `other`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":166392,"byte_end":166401,"line_start":443,"line_end":443,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":167203,"byte_end":167208,"line_start":470,"line_end":470,"column_start":12,"column_end":17},"name":"union","qualname":"<HashSet<T, S>>::union","value":"fn <'a> (&'a self, other: &'a HashSet<T, S>) -> Union<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the union,\n i.e., all the values in `self` or `other`, without duplicates.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":167182,"byte_end":167191,"line_start":469,"line_end":469,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":167660,"byte_end":167663,"line_start":489,"line_end":489,"column_start":12,"column_end":15},"name":"len","qualname":"<HashSet<T, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the set.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":167639,"byte_end":167648,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":168010,"byte_end":168018,"line_start":506,"line_end":506,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashSet<T, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the set contains no elements.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":167989,"byte_end":167998,"line_start":505,"line_end":505,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":168531,"byte_end":168536,"line_start":528,"line_end":528,"column_start":12,"column_end":17},"name":"drain","qualname":"<HashSet<T, S>>::drain","value":"fn (&mut self) -> Drain<T>","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, returning all elements in an iterator.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":168510,"byte_end":168519,"line_start":527,"line_end":527,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":168907,"byte_end":168912,"line_start":547,"line_end":547,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashSet<T, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all values.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":168886,"byte_end":168895,"line_start":546,"line_end":546,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":169607,"byte_end":169615,"line_start":570,"line_end":570,"column_start":12,"column_end":20},"name":"contains","qualname":"<HashSet<T, S>>::contains","value":"fn <Q> (&self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains a value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":169586,"byte_end":169595,"line_start":569,"line_end":569,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":170442,"byte_end":170445,"line_start":597,"line_end":597,"column_start":12,"column_end":15},"name":"get","qualname":"<HashSet<T, S>>::get","value":"fn <Q> (&self, value: &Q) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value in the set, if any, that is equal to the given value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":170421,"byte_end":170430,"line_start":596,"line_end":596,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":171146,"byte_end":171157,"line_start":622,"line_end":622,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<HashSet<T, S>>::is_disjoint","value":"fn (&self, other: &HashSet<T, S>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n This is equivalent to checking for an empty intersection.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":171788,"byte_end":171797,"line_start":643,"line_end":643,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<HashSet<T, S>>::is_subset","value":"fn (&self, other: &HashSet<T, S>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a subset of another,\n i.e., `other` contains at least all the values in `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":172486,"byte_end":172497,"line_start":668,"line_end":668,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<HashSet<T, S>>::is_superset","value":"fn (&self, other: &HashSet<T, S>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a superset of another,\n i.e., `self` contains at least all the values in `other`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":172465,"byte_end":172474,"line_start":667,"line_end":667,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":173052,"byte_end":173058,"line_start":690,"line_end":690,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashSet<T, S>>::insert","value":"fn (&mut self, value: T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":173031,"byte_end":173040,"line_start":689,"line_end":689,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":173658,"byte_end":173665,"line_start":710,"line_end":710,"column_start":12,"column_end":19},"name":"replace","qualname":"<HashSet<T, S>>::replace","value":"fn (&mut self, value: T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is equal to the given\n one. Returns the replaced value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":173637,"byte_end":173646,"line_start":709,"line_end":709,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":174640,"byte_end":174646,"line_start":742,"line_end":742,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashSet<T, S>>::remove","value":"fn <Q> (&mut self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes a value from the set. Returns `true` if the value was\n present in the set.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":174619,"byte_end":174628,"line_start":741,"line_end":741,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":175481,"byte_end":175485,"line_start":769,"line_end":769,"column_start":12,"column_end":16},"name":"take","qualname":"<HashSet<T, S>>::take","value":"fn <Q> (&mut self, value: &Q) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the given one.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":175460,"byte_end":175469,"line_start":768,"line_end":768,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":176084,"byte_end":176090,"line_start":791,"line_end":791,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashSet<T, S>>::retain","value":"fn <F> (&mut self, mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":181408,"byte_end":181412,"line_start":1014,"line_end":1014,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1082}],"decl_id":null,"docs":" An iterator over the items of a `HashSet`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1083},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":181781,"byte_end":181789,"line_start":1025,"line_end":1025,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1085}],"decl_id":null,"docs":" An owning iterator over the items of a `HashSet`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1086},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":182094,"byte_end":182099,"line_start":1036,"line_end":1036,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":1089}],"decl_id":null,"docs":" A draining iterator over the items of a `HashSet`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":182453,"byte_end":182465,"line_start":1047,"line_end":1047,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095}],"decl_id":null,"docs":" A lazy iterator producing elements in the intersection of `HashSet`s.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":182893,"byte_end":182903,"line_start":1061,"line_end":1061,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101}],"decl_id":null,"docs":" A lazy iterator producing elements in the difference of `HashSet`s.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1102},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":183371,"byte_end":183390,"line_start":1075,"line_end":1075,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":1106}],"decl_id":null,"docs":" A lazy iterator producing elements in the symmetric difference of `HashSet`s.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1107},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":183751,"byte_end":183756,"line_start":1086,"line_end":1086,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":1111}],"decl_id":null,"docs":" A lazy iterator producing elements in the union of `HashSet`s.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1286},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","byte_start":1257,"byte_end":1265,"line_start":52,"line_end":52,"column_start":9,"column_end":17},"name":"hash_map","qualname":"::hash_map","value":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1287}],"decl_id":null,"docs":" A hash map implemented with quadratic probing and SIMD lookup.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","byte_start":1719,"byte_end":1727,"line_start":66,"line_end":66,"column_start":9,"column_end":17},"name":"hash_set","qualname":"::hash_set","value":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1289}],"decl_id":null,"docs":" A hash set implemented as a `HashMap` where the value is `()`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1324},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","byte_start":2465,"byte_end":2481,"line_start":89,"line_end":89,"column_start":5,"column_end":21},"name":"CapacityOverflow","qualname":"::CollectionAllocErr::CapacityOverflow","value":"CollectionAllocErr::CapacityOverflow","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":" Error due to the computed capacity exceeding the collection's maximum\n (usually `isize::MAX` bytes).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1326},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","byte_start":2556,"byte_end":2564,"line_start":91,"line_end":91,"column_start":5,"column_end":13},"name":"AllocErr","qualname":"::CollectionAllocErr::AllocErr","value":"CollectionAllocErr::AllocErr","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":" Error due to the allocator (see the `AllocErr` type's docs).\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\lib.rs","byte_start":2324,"byte_end":2342,"line_start":86,"line_end":86,"column_start":10,"column_end":28},"name":"CollectionAllocErr","qualname":"::CollectionAllocErr","value":"CollectionAllocErr::{CapacityOverflow, AllocErr}","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1326}],"decl_id":null,"docs":" Augments `AllocErr` with a CapacityOverflow variant.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\fx.rs","byte_start":3908,"byte_end":3916,"line_start":33,"line_end":33,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\fx.rs","byte_start":4007,"byte_end":4015,"line_start":40,"line_end":40,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\fx.rs","byte_start":4171,"byte_end":4179,"line_start":47,"line_end":47,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":12975,"byte_end":12982,"line_start":202,"line_end":202,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":14013,"byte_end":14020,"line_start":236,"line_end":236,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":34848,"byte_end":34855,"line_start":957,"line_end":957,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":37779,"byte_end":37786,"line_start":1020,"line_end":1020,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":38119,"byte_end":38126,"line_start":1036,"line_end":1036,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":38220,"byte_end":38227,"line_start":1044,"line_end":1044,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":38451,"byte_end":38458,"line_start":1055,"line_end":1055,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":38767,"byte_end":38774,"line_start":1067,"line_end":1067,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":39601,"byte_end":39605,"line_start":1099,"line_end":1099,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":39823,"byte_end":39827,"line_start":1109,"line_end":1109,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":40393,"byte_end":40400,"line_start":1128,"line_end":1128,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":41037,"byte_end":41045,"line_start":1150,"line_end":1150,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":41674,"byte_end":41678,"line_start":1173,"line_end":1173,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":41855,"byte_end":41859,"line_start":1182,"line_end":1182,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":42391,"byte_end":42397,"line_start":1200,"line_end":1200,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":42578,"byte_end":42584,"line_start":1209,"line_end":1209,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":43073,"byte_end":43078,"line_start":1226,"line_end":1226,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":45357,"byte_end":45375,"line_start":1300,"line_end":1300,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":46900,"byte_end":46915,"line_start":1354,"line_end":1354,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":48162,"byte_end":48173,"line_start":1404,"line_end":1404,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":51178,"byte_end":51197,"line_start":1505,"line_end":1505,"column_start":16,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":53927,"byte_end":53944,"line_start":1600,"line_end":1600,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":54984,"byte_end":55002,"line_start":1633,"line_end":1633,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":55179,"byte_end":55190,"line_start":1639,"line_end":1639,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":55521,"byte_end":55540,"line_start":1648,"line_end":1648,"column_start":40,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":55795,"byte_end":55812,"line_start":1657,"line_end":1657,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":55977,"byte_end":55992,"line_start":1663,"line_end":1663,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":56619,"byte_end":56624,"line_start":1683,"line_end":1683,"column_start":69,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":57179,"byte_end":57192,"line_start":1702,"line_end":1702,"column_start":35,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":57289,"byte_end":57302,"line_start":1709,"line_end":1709,"column_start":35,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":57418,"byte_end":57431,"line_start":1717,"line_end":1717,"column_start":53,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":57948,"byte_end":57959,"line_start":1736,"line_end":1736,"column_start":57,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":58670,"byte_end":58677,"line_start":1770,"line_end":1770,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":59465,"byte_end":59469,"line_start":1803,"line_end":1803,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":59839,"byte_end":59843,"line_start":1818,"line_end":1818,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":59966,"byte_end":59970,"line_start":1825,"line_end":1825,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":60013,"byte_end":60020,"line_start":1827,"line_end":1827,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":60402,"byte_end":60409,"line_start":1842,"line_end":1842,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":60531,"byte_end":60538,"line_start":1848,"line_end":1848,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":60583,"byte_end":60590,"line_start":1850,"line_end":1850,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":60792,"byte_end":60800,"line_start":1860,"line_end":1860,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":61061,"byte_end":61069,"line_start":1872,"line_end":1872,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":61183,"byte_end":61191,"line_start":1878,"line_end":1878,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":61242,"byte_end":61250,"line_start":1880,"line_end":1880,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":61408,"byte_end":61412,"line_start":1886,"line_end":1886,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":61697,"byte_end":61701,"line_start":1898,"line_end":1898,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":61823,"byte_end":61827,"line_start":1904,"line_end":1904,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":61870,"byte_end":61876,"line_start":1906,"line_end":1906,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":62161,"byte_end":62167,"line_start":1918,"line_end":1918,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":62289,"byte_end":62295,"line_start":1924,"line_end":1924,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":62338,"byte_end":62347,"line_start":1926,"line_end":1926,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":62640,"byte_end":62649,"line_start":1938,"line_end":1938,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":62771,"byte_end":62780,"line_start":1944,"line_end":1944,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":62825,"byte_end":62834,"line_start":1946,"line_end":1946,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":63046,"byte_end":63051,"line_start":1956,"line_end":1956,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":63320,"byte_end":63325,"line_start":1968,"line_end":1968,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":63447,"byte_end":63452,"line_start":1974,"line_end":1974,"column_start":34,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":63497,"byte_end":63502,"line_start":1976,"line_end":1976,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":63698,"byte_end":63703,"line_start":1986,"line_end":1986,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":66595,"byte_end":66600,"line_start":2095,"line_end":2095,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":67342,"byte_end":67355,"line_start":2124,"line_end":2124,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":74018,"byte_end":74029,"line_start":2354,"line_end":2354,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":75703,"byte_end":75710,"line_start":2420,"line_end":2420,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":76127,"byte_end":76134,"line_start":2436,"line_end":2436,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":76875,"byte_end":76882,"line_start":2460,"line_end":2460,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\sse2.rs","byte_start":146045,"byte_end":146050,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\bitmask.rs","byte_start":149914,"byte_end":149921,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\bitmask.rs","byte_start":152026,"byte_end":152033,"line_start":83,"line_end":83,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\bitmask.rs","byte_start":152321,"byte_end":152332,"line_start":97,"line_end":97,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":106664,"byte_end":106675,"line_start":71,"line_end":71,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":108789,"byte_end":108797,"line_start":141,"line_end":141,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":112085,"byte_end":112091,"line_start":239,"line_end":239,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":112117,"byte_end":112123,"line_start":241,"line_end":241,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":112223,"byte_end":112229,"line_start":248,"line_end":248,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":113059,"byte_end":113067,"line_start":286,"line_end":286,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":793},{"krate":0,"index":795},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":815},{"krate":0,"index":818},{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":827},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":134710,"byte_end":134718,"line_start":834,"line_end":834,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":134763,"byte_end":134771,"line_start":835,"line_end":835,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":134818,"byte_end":134826,"line_start":837,"line_end":837,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":137288,"byte_end":137296,"line_start":906,"line_end":906,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":137659,"byte_end":137667,"line_start":922,"line_end":922,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":138219,"byte_end":138231,"line_start":946,"line_end":946,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":139951,"byte_end":139963,"line_start":995,"line_end":995,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":140008,"byte_end":140020,"line_start":996,"line_end":996,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":140060,"byte_end":140072,"line_start":998,"line_end":998,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":140317,"byte_end":140329,"line_start":1010,"line_end":1010,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":141335,"byte_end":141347,"line_start":1042,"line_end":1042,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":141525,"byte_end":141532,"line_start":1050,"line_end":1050,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":141708,"byte_end":141715,"line_start":1060,"line_end":1060,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":142405,"byte_end":142412,"line_start":1086,"line_end":1086,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":142445,"byte_end":142452,"line_start":1087,"line_end":1087,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":142625,"byte_end":142636,"line_start":1095,"line_end":1095,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":142754,"byte_end":142765,"line_start":1102,"line_end":1102,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":142810,"byte_end":142821,"line_start":1103,"line_end":1103,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":142860,"byte_end":142871,"line_start":1105,"line_end":1105,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":143325,"byte_end":143336,"line_start":1124,"line_end":1124,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":143606,"byte_end":143617,"line_start":1138,"line_end":1138,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":143650,"byte_end":143661,"line_start":1139,"line_end":1139,"column_start":27,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":143983,"byte_end":143991,"line_start":1151,"line_end":1151,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":144117,"byte_end":144125,"line_start":1158,"line_end":1158,"column_start":29,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":144178,"byte_end":144186,"line_start":1159,"line_end":1159,"column_start":29,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":144233,"byte_end":144241,"line_start":1161,"line_end":1161,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":144719,"byte_end":144727,"line_start":1178,"line_end":1178,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":145490,"byte_end":145498,"line_start":1204,"line_end":1204,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":145539,"byte_end":145547,"line_start":1205,"line_end":1205,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":156549,"byte_end":156556,"line_start":119,"line_end":119,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":157635,"byte_end":157642,"line_start":158,"line_end":158,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1003},{"krate":0,"index":1005},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1012},{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":176233,"byte_end":176240,"line_start":799,"line_end":799,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":176497,"byte_end":176504,"line_start":813,"line_end":813,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":176586,"byte_end":176593,"line_start":820,"line_end":820,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":176810,"byte_end":176817,"line_start":830,"line_end":830,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":177102,"byte_end":177109,"line_start":843,"line_end":843,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":177341,"byte_end":177348,"line_start":854,"line_end":854,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":177574,"byte_end":177581,"line_start":865,"line_end":865,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":184096,"byte_end":184103,"line_start":1104,"line_end":1104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":184991,"byte_end":184995,"line_start":1140,"line_end":1140,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":185151,"byte_end":185155,"line_start":1148,"line_end":1148,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":185414,"byte_end":185418,"line_start":1160,"line_end":1160,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":185533,"byte_end":185537,"line_start":1166,"line_end":1166,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":185588,"byte_end":185592,"line_start":1168,"line_end":1168,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":185745,"byte_end":185753,"line_start":1174,"line_end":1174,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":186012,"byte_end":186020,"line_start":1186,"line_end":1186,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":186127,"byte_end":186135,"line_start":1192,"line_end":1192,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":186178,"byte_end":186186,"line_start":1194,"line_end":1194,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":186400,"byte_end":186405,"line_start":1201,"line_end":1201,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":186672,"byte_end":186677,"line_start":1213,"line_end":1213,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":186792,"byte_end":186797,"line_start":1219,"line_end":1219,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":186848,"byte_end":186853,"line_start":1221,"line_end":1221,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":187071,"byte_end":187083,"line_start":1228,"line_end":1228,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":187285,"byte_end":187297,"line_start":1238,"line_end":1238,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":187769,"byte_end":187781,"line_start":1262,"line_end":1262,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":188006,"byte_end":188018,"line_start":1272,"line_end":1272,"column_start":34,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":188103,"byte_end":188113,"line_start":1279,"line_end":1279,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":188311,"byte_end":188321,"line_start":1289,"line_end":1289,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":188797,"byte_end":188807,"line_start":1313,"line_end":1313,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":188897,"byte_end":188907,"line_start":1320,"line_end":1320,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":189124,"byte_end":189143,"line_start":1330,"line_end":1330,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1226}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":189339,"byte_end":189358,"line_start":1339,"line_end":1339,"column_start":29,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":189664,"byte_end":189683,"line_start":1356,"line_end":1356,"column_start":34,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":189773,"byte_end":189792,"line_start":1363,"line_end":1363,"column_start":31,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":190009,"byte_end":190014,"line_start":1373,"line_end":1373,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":190187,"byte_end":190192,"line_start":1382,"line_end":1382,"column_start":34,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":190282,"byte_end":190287,"line_start":1389,"line_end":1389,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":190507,"byte_end":190512,"line_start":1399,"line_end":1399,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\fx.rs","byte_start":3908,"byte_end":3916,"line_start":33,"line_end":33,"column_start":18,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":19},"to":{"krate":1,"index":2206}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\fx.rs","byte_start":4007,"byte_end":4015,"line_start":40,"line_end":40,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":19},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\fx.rs","byte_start":4171,"byte_end":4179,"line_start":47,"line_end":47,"column_start":17,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":19},"to":{"krate":1,"index":7293}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":12975,"byte_end":12982,"line_start":202,"line_end":202,"column_start":23,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":14013,"byte_end":14020,"line_start":236,"line_end":236,"column_start":15,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":34848,"byte_end":34855,"line_start":957,"line_end":957,"column_start":15,"column_end":22},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":37779,"byte_end":37786,"line_start":1020,"line_end":1020,"column_start":29,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1292},"to":{"krate":1,"index":2040}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":38119,"byte_end":38126,"line_start":1036,"line_end":1036,"column_start":22,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1292},"to":{"krate":1,"index":2045}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":38220,"byte_end":38227,"line_start":1044,"line_end":1044,"column_start":25,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1292},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":38451,"byte_end":38458,"line_start":1055,"line_end":1055,"column_start":27,"column_end":34},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1292},"to":{"krate":1,"index":2206}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":38767,"byte_end":38774,"line_start":1067,"line_end":1067,"column_start":47,"column_end":54},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1292},"to":{"krate":1,"index":1780}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":39601,"byte_end":39605,"line_start":1099,"line_end":1099,"column_start":26,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":153},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":39823,"byte_end":39827,"line_start":1109,"line_end":1109,"column_start":45,"column_end":49},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":153},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":40393,"byte_end":40400,"line_start":1128,"line_end":1128,"column_start":16,"column_end":23},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":41037,"byte_end":41045,"line_start":1150,"line_end":1150,"column_start":12,"column_end":20},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":41674,"byte_end":41678,"line_start":1173,"line_end":1173,"column_start":26,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":188},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":41855,"byte_end":41859,"line_start":1182,"line_end":1182,"column_start":38,"column_end":42},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":188},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":42391,"byte_end":42397,"line_start":1200,"line_end":1200,"column_start":26,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":203},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":42578,"byte_end":42584,"line_start":1209,"line_end":1209,"column_start":38,"column_end":44},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":203},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":43073,"byte_end":43078,"line_start":1226,"line_end":1226,"column_start":16,"column_end":21},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":45357,"byte_end":45375,"line_start":1300,"line_end":1300,"column_start":19,"column_end":37},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":46900,"byte_end":46915,"line_start":1354,"line_end":1354,"column_start":19,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":48162,"byte_end":48173,"line_start":1404,"line_end":1404,"column_start":19,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":51178,"byte_end":51197,"line_start":1505,"line_end":1505,"column_start":16,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":53927,"byte_end":53944,"line_start":1600,"line_end":1600,"column_start":19,"column_end":36},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":54984,"byte_end":55002,"line_start":1633,"line_end":1633,"column_start":29,"column_end":47},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":233},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":55179,"byte_end":55190,"line_start":1639,"line_end":1639,"column_start":43,"column_end":54},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":239},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":55521,"byte_end":55540,"line_start":1648,"line_end":1648,"column_start":40,"column_end":59},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":250},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":55795,"byte_end":55812,"line_start":1657,"line_end":1657,"column_start":29,"column_end":46},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":256},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":55977,"byte_end":55992,"line_start":1663,"line_end":1663,"column_start":29,"column_end":44},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":263},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":56619,"byte_end":56624,"line_start":1683,"line_end":1683,"column_start":69,"column_end":74},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":57179,"byte_end":57192,"line_start":1702,"line_end":1702,"column_start":35,"column_end":48},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":383},"to":{"krate":1,"index":1533}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":57289,"byte_end":57302,"line_start":1709,"line_end":1709,"column_start":35,"column_end":48},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":383},"to":{"krate":1,"index":1545}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":57418,"byte_end":57431,"line_start":1717,"line_end":1717,"column_start":53,"column_end":66},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":383},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":57948,"byte_end":57959,"line_start":1736,"line_end":1736,"column_start":57,"column_end":68},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":407},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":58670,"byte_end":58677,"line_start":1770,"line_end":1770,"column_start":32,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1292},"to":{"krate":1,"index":3951}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":59465,"byte_end":59469,"line_start":1803,"line_end":1803,"column_start":29,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":153},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":59839,"byte_end":59843,"line_start":1818,"line_end":1818,"column_start":38,"column_end":42},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":153},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":59966,"byte_end":59970,"line_start":1825,"line_end":1825,"column_start":34,"column_end":38},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":153},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":60013,"byte_end":60020,"line_start":1827,"line_end":1827,"column_start":29,"column_end":36},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":169},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":60402,"byte_end":60409,"line_start":1842,"line_end":1842,"column_start":38,"column_end":45},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":169},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":60531,"byte_end":60538,"line_start":1848,"line_end":1848,"column_start":34,"column_end":41},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":169},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":60583,"byte_end":60590,"line_start":1850,"line_end":1850,"column_start":31,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":169},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":60792,"byte_end":60800,"line_start":1860,"line_end":1860,"column_start":25,"column_end":33},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":61061,"byte_end":61069,"line_start":1872,"line_end":1872,"column_start":34,"column_end":42},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":61183,"byte_end":61191,"line_start":1878,"line_end":1878,"column_start":30,"column_end":38},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":61242,"byte_end":61250,"line_start":1880,"line_end":1880,"column_start":41,"column_end":49},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":61408,"byte_end":61412,"line_start":1886,"line_end":1886,"column_start":29,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":188},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":61697,"byte_end":61701,"line_start":1898,"line_end":1898,"column_start":38,"column_end":42},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":188},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":61823,"byte_end":61827,"line_start":1904,"line_end":1904,"column_start":34,"column_end":38},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":188},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":61870,"byte_end":61876,"line_start":1906,"line_end":1906,"column_start":29,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":203},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":62161,"byte_end":62167,"line_start":1918,"line_end":1918,"column_start":38,"column_end":44},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":203},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":62289,"byte_end":62295,"line_start":1924,"line_end":1924,"column_start":34,"column_end":40},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":203},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":62338,"byte_end":62347,"line_start":1926,"line_end":1926,"column_start":29,"column_end":38},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":228},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":62640,"byte_end":62649,"line_start":1938,"line_end":1938,"column_start":38,"column_end":47},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":228},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":62771,"byte_end":62780,"line_start":1944,"line_end":1944,"column_start":34,"column_end":43},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":228},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":62825,"byte_end":62834,"line_start":1946,"line_end":1946,"column_start":31,"column_end":40},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":228},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":63046,"byte_end":63051,"line_start":1956,"line_end":1956,"column_start":29,"column_end":34},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":218},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":63320,"byte_end":63325,"line_start":1968,"line_end":1968,"column_start":38,"column_end":43},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":218},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":63447,"byte_end":63452,"line_start":1974,"line_end":1974,"column_start":34,"column_end":39},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":218},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":63497,"byte_end":63502,"line_start":1976,"line_end":1976,"column_start":31,"column_end":36},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":218},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":63698,"byte_end":63703,"line_start":1986,"line_end":1986,"column_start":19,"column_end":24},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":66595,"byte_end":66600,"line_start":2095,"line_end":2095,"column_start":28,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":67342,"byte_end":67355,"line_start":2124,"line_end":2124,"column_start":19,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":74018,"byte_end":74029,"line_start":2354,"line_end":2354,"column_start":27,"column_end":38},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":75703,"byte_end":75710,"line_start":2420,"line_end":2420,"column_start":40,"column_end":47},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1292},"to":{"krate":1,"index":3947}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":76127,"byte_end":76134,"line_start":2436,"line_end":2436,"column_start":34,"column_end":41},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1292},"to":{"krate":1,"index":3960}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\map.rs","byte_start":76875,"byte_end":76882,"line_start":2460,"line_end":2460,"column_start":46,"column_end":53},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1292},"to":{"krate":1,"index":3960}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\sse2.rs","byte_start":146045,"byte_end":146050,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\bitmask.rs","byte_start":149914,"byte_end":149921,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\bitmask.rs","byte_start":152026,"byte_end":152033,"line_start":83,"line_end":83,"column_start":23,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1309},"to":{"krate":1,"index":3951}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\bitmask.rs","byte_start":152321,"byte_end":152332,"line_start":97,"line_end":97,"column_start":19,"column_end":30},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":106664,"byte_end":106675,"line_start":71,"line_end":71,"column_start":6,"column_end":17},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":108789,"byte_end":108797,"line_start":141,"line_end":141,"column_start":19,"column_end":27},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":749},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":112085,"byte_end":112091,"line_start":239,"line_end":239,"column_start":25,"column_end":31},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":760},"to":{"krate":1,"index":1533}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":112117,"byte_end":112123,"line_start":241,"line_end":241,"column_start":19,"column_end":25},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":760},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":112223,"byte_end":112229,"line_start":248,"line_end":248,"column_start":9,"column_end":15},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":113059,"byte_end":113067,"line_start":286,"line_end":286,"column_start":9,"column_end":17},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":134710,"byte_end":134718,"line_start":834,"line_end":834,"column_start":25,"column_end":33},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":778},"to":{"krate":1,"index":1533}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":134763,"byte_end":134771,"line_start":835,"line_end":835,"column_start":25,"column_end":33},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":778},"to":{"krate":1,"index":1545}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":134818,"byte_end":134826,"line_start":837,"line_end":837,"column_start":26,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":778},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":137288,"byte_end":137296,"line_start":906,"line_end":906,"column_start":18,"column_end":26},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":778},"to":{"krate":1,"index":1726}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":137659,"byte_end":137667,"line_start":922,"line_end":922,"column_start":26,"column_end":34},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":778},"to":{"krate":1,"index":3951}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":138219,"byte_end":138231,"line_start":946,"line_end":946,"column_start":9,"column_end":21},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":139951,"byte_end":139963,"line_start":995,"line_end":995,"column_start":25,"column_end":37},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":853},"to":{"krate":1,"index":1533}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":140008,"byte_end":140020,"line_start":996,"line_end":996,"column_start":25,"column_end":37},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":853},"to":{"krate":1,"index":1545}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":140060,"byte_end":140072,"line_start":998,"line_end":998,"column_start":19,"column_end":31},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":853},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":140317,"byte_end":140329,"line_start":1010,"line_end":1010,"column_start":22,"column_end":34},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":853},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":141335,"byte_end":141347,"line_start":1042,"line_end":1042,"column_start":27,"column_end":39},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":853},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":141525,"byte_end":141532,"line_start":1050,"line_end":1050,"column_start":19,"column_end":26},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":876},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":141708,"byte_end":141715,"line_start":1060,"line_end":1060,"column_start":22,"column_end":29},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":876},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":142405,"byte_end":142412,"line_start":1086,"line_end":1086,"column_start":31,"column_end":38},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":876},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":142445,"byte_end":142452,"line_start":1087,"line_end":1087,"column_start":27,"column_end":34},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":876},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":142625,"byte_end":142636,"line_start":1095,"line_end":1095,"column_start":13,"column_end":24},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":142754,"byte_end":142765,"line_start":1102,"line_end":1102,"column_start":25,"column_end":36},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":892},"to":{"krate":1,"index":1533}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":142810,"byte_end":142821,"line_start":1103,"line_end":1103,"column_start":25,"column_end":36},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":892},"to":{"krate":1,"index":1545}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":142860,"byte_end":142871,"line_start":1105,"line_end":1105,"column_start":18,"column_end":29},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":892},"to":{"krate":1,"index":1726}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":143325,"byte_end":143336,"line_start":1124,"line_end":1124,"column_start":22,"column_end":33},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":892},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":143606,"byte_end":143617,"line_start":1138,"line_end":1138,"column_start":31,"column_end":42},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":892},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":143650,"byte_end":143661,"line_start":1139,"line_end":1139,"column_start":27,"column_end":38},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":892},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":143983,"byte_end":143991,"line_start":1151,"line_end":1151,"column_start":13,"column_end":21},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":144117,"byte_end":144125,"line_start":1158,"line_end":1158,"column_start":29,"column_end":37},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":916},"to":{"krate":1,"index":1533}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":144178,"byte_end":144186,"line_start":1159,"line_end":1159,"column_start":29,"column_end":37},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":916},"to":{"krate":1,"index":1545}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":144233,"byte_end":144241,"line_start":1161,"line_end":1161,"column_start":22,"column_end":30},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":916},"to":{"krate":1,"index":1726}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":144719,"byte_end":144727,"line_start":1178,"line_end":1178,"column_start":26,"column_end":34},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":916},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":145490,"byte_end":145498,"line_start":1204,"line_end":1204,"column_start":35,"column_end":43},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":916},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\raw\\mod.rs","byte_start":145539,"byte_end":145547,"line_start":1205,"line_end":1205,"column_start":31,"column_end":39},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":916},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":156549,"byte_end":156556,"line_start":119,"line_end":119,"column_start":20,"column_end":27},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":157635,"byte_end":157642,"line_start":158,"line_end":158,"column_start":12,"column_end":19},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":176233,"byte_end":176240,"line_start":799,"line_end":799,"column_start":26,"column_end":33},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1315},"to":{"krate":1,"index":2040}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":176497,"byte_end":176504,"line_start":813,"line_end":813,"column_start":19,"column_end":26},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1315},"to":{"krate":1,"index":2045}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":176586,"byte_end":176593,"line_start":820,"line_end":820,"column_start":27,"column_end":34},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1315},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":176810,"byte_end":176817,"line_start":830,"line_end":830,"column_start":32,"column_end":39},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1315},"to":{"krate":1,"index":3947}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":177102,"byte_end":177109,"line_start":843,"line_end":843,"column_start":26,"column_end":33},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1315},"to":{"krate":1,"index":3960}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":177341,"byte_end":177348,"line_start":854,"line_end":854,"column_start":34,"column_end":41},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1315},"to":{"krate":1,"index":3960}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":177574,"byte_end":177581,"line_start":865,"line_end":865,"column_start":24,"column_end":31},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1315},"to":{"krate":1,"index":2206}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":184096,"byte_end":184103,"line_start":1104,"line_end":1104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1315},"to":{"krate":1,"index":3951}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":184991,"byte_end":184995,"line_start":1140,"line_end":1140,"column_start":23,"column_end":27},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1079},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":185151,"byte_end":185155,"line_start":1148,"line_end":1148,"column_start":26,"column_end":30},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1079},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":185414,"byte_end":185418,"line_start":1160,"line_end":1160,"column_start":35,"column_end":39},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1079},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":185533,"byte_end":185537,"line_start":1166,"line_end":1166,"column_start":31,"column_end":35},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1079},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":185588,"byte_end":185592,"line_start":1168,"line_end":1168,"column_start":40,"column_end":44},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1079},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":185745,"byte_end":185753,"line_start":1174,"line_end":1174,"column_start":22,"column_end":30},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1083},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":186012,"byte_end":186020,"line_start":1186,"line_end":1186,"column_start":31,"column_end":39},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1083},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":186127,"byte_end":186135,"line_start":1192,"line_end":1192,"column_start":27,"column_end":35},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1083},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":186178,"byte_end":186186,"line_start":1194,"line_end":1194,"column_start":36,"column_end":44},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1083},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":186400,"byte_end":186405,"line_start":1201,"line_end":1201,"column_start":26,"column_end":31},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1086},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":186672,"byte_end":186677,"line_start":1213,"line_end":1213,"column_start":35,"column_end":40},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1086},"to":{"krate":1,"index":3939}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":186792,"byte_end":186797,"line_start":1219,"line_end":1219,"column_start":31,"column_end":36},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1086},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":186848,"byte_end":186853,"line_start":1221,"line_end":1221,"column_start":40,"column_end":45},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1086},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":187071,"byte_end":187083,"line_start":1228,"line_end":1228,"column_start":26,"column_end":38},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":187285,"byte_end":187297,"line_start":1238,"line_end":1238,"column_start":29,"column_end":41},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":187769,"byte_end":187781,"line_start":1262,"line_end":1262,"column_start":31,"column_end":43},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":188006,"byte_end":188018,"line_start":1272,"line_end":1272,"column_start":34,"column_end":46},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":188103,"byte_end":188113,"line_start":1279,"line_end":1279,"column_start":26,"column_end":36},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1096},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":188311,"byte_end":188321,"line_start":1289,"line_end":1289,"column_start":29,"column_end":39},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1096},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":188797,"byte_end":188807,"line_start":1313,"line_end":1313,"column_start":34,"column_end":44},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1096},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":188897,"byte_end":188907,"line_start":1320,"line_end":1320,"column_start":31,"column_end":41},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1096},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":189124,"byte_end":189143,"line_start":1330,"line_end":1330,"column_start":26,"column_end":45},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1102},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":189339,"byte_end":189358,"line_start":1339,"line_end":1339,"column_start":29,"column_end":48},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1102},"to":{"krate":1,"index":3653}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":189664,"byte_end":189683,"line_start":1356,"line_end":1356,"column_start":34,"column_end":53},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1102},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":189773,"byte_end":189792,"line_start":1363,"line_end":1363,"column_start":31,"column_end":50},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1102},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":190009,"byte_end":190014,"line_start":1373,"line_end":1373,"column_start":26,"column_end":31},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1107},"to":{"krate":1,"index":2181}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":190187,"byte_end":190192,"line_start":1382,"line_end":1382,"column_start":34,"column_end":39},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1107},"to":{"krate":1,"index":4010}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":190282,"byte_end":190287,"line_start":1389,"line_end":1389,"column_start":31,"column_end":36},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1107},"to":{"krate":1,"index":7643}},{"span":{"file_name":"C:\\Users\\nikla_y88vj7d\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\hashbrown-0.1.8\\src\\set.rs","byte_start":190507,"byte_end":190512,"line_start":1399,"line_end":1399,"column_start":29,"column_end":34},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1107},"to":{"krate":1,"index":3653}}]}